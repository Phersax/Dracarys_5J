
robotic_arm.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004598  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000018  0800475c  0800475c  0000575c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004774  08004774  0000603c  2**0
                  CONTENTS
  4 .ARM          00000008  08004774  08004774  00005774  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800477c  0800477c  0000603c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800477c  0800477c  0000577c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004780  08004780  00005780  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000003c  20000000  08004784  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000324  2000003c  080047c0  0000603c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000360  080047c0  00006360  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000603c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000b9ca  00000000  00000000  0000606c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001eeb  00000000  00000000  00011a36  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000af0  00000000  00000000  00013928  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000867  00000000  00000000  00014418  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0002131e  00000000  00000000  00014c7f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000dd32  00000000  00000000  00035f9d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000cb116  00000000  00000000  00043ccf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0010ede5  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002c50  00000000  00000000  0010ee28  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000067  00000000  00000000  00111a78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	2000003c 	.word	0x2000003c
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08004744 	.word	0x08004744

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000040 	.word	0x20000040
 8000200:	08004744 	.word	0x08004744

08000204 <__aeabi_uldivmod>:
 8000204:	b953      	cbnz	r3, 800021c <__aeabi_uldivmod+0x18>
 8000206:	b94a      	cbnz	r2, 800021c <__aeabi_uldivmod+0x18>
 8000208:	2900      	cmp	r1, #0
 800020a:	bf08      	it	eq
 800020c:	2800      	cmpeq	r0, #0
 800020e:	bf1c      	itt	ne
 8000210:	f04f 31ff 	movne.w	r1, #4294967295
 8000214:	f04f 30ff 	movne.w	r0, #4294967295
 8000218:	f000 b96a 	b.w	80004f0 <__aeabi_idiv0>
 800021c:	f1ad 0c08 	sub.w	ip, sp, #8
 8000220:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000224:	f000 f806 	bl	8000234 <__udivmoddi4>
 8000228:	f8dd e004 	ldr.w	lr, [sp, #4]
 800022c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000230:	b004      	add	sp, #16
 8000232:	4770      	bx	lr

08000234 <__udivmoddi4>:
 8000234:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000238:	9d08      	ldr	r5, [sp, #32]
 800023a:	460c      	mov	r4, r1
 800023c:	2b00      	cmp	r3, #0
 800023e:	d14e      	bne.n	80002de <__udivmoddi4+0xaa>
 8000240:	4694      	mov	ip, r2
 8000242:	458c      	cmp	ip, r1
 8000244:	4686      	mov	lr, r0
 8000246:	fab2 f282 	clz	r2, r2
 800024a:	d962      	bls.n	8000312 <__udivmoddi4+0xde>
 800024c:	b14a      	cbz	r2, 8000262 <__udivmoddi4+0x2e>
 800024e:	f1c2 0320 	rsb	r3, r2, #32
 8000252:	4091      	lsls	r1, r2
 8000254:	fa20 f303 	lsr.w	r3, r0, r3
 8000258:	fa0c fc02 	lsl.w	ip, ip, r2
 800025c:	4319      	orrs	r1, r3
 800025e:	fa00 fe02 	lsl.w	lr, r0, r2
 8000262:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000266:	fa1f f68c 	uxth.w	r6, ip
 800026a:	fbb1 f4f7 	udiv	r4, r1, r7
 800026e:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000272:	fb07 1114 	mls	r1, r7, r4, r1
 8000276:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800027a:	fb04 f106 	mul.w	r1, r4, r6
 800027e:	4299      	cmp	r1, r3
 8000280:	d90a      	bls.n	8000298 <__udivmoddi4+0x64>
 8000282:	eb1c 0303 	adds.w	r3, ip, r3
 8000286:	f104 30ff 	add.w	r0, r4, #4294967295
 800028a:	f080 8112 	bcs.w	80004b2 <__udivmoddi4+0x27e>
 800028e:	4299      	cmp	r1, r3
 8000290:	f240 810f 	bls.w	80004b2 <__udivmoddi4+0x27e>
 8000294:	3c02      	subs	r4, #2
 8000296:	4463      	add	r3, ip
 8000298:	1a59      	subs	r1, r3, r1
 800029a:	fa1f f38e 	uxth.w	r3, lr
 800029e:	fbb1 f0f7 	udiv	r0, r1, r7
 80002a2:	fb07 1110 	mls	r1, r7, r0, r1
 80002a6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80002aa:	fb00 f606 	mul.w	r6, r0, r6
 80002ae:	429e      	cmp	r6, r3
 80002b0:	d90a      	bls.n	80002c8 <__udivmoddi4+0x94>
 80002b2:	eb1c 0303 	adds.w	r3, ip, r3
 80002b6:	f100 31ff 	add.w	r1, r0, #4294967295
 80002ba:	f080 80fc 	bcs.w	80004b6 <__udivmoddi4+0x282>
 80002be:	429e      	cmp	r6, r3
 80002c0:	f240 80f9 	bls.w	80004b6 <__udivmoddi4+0x282>
 80002c4:	4463      	add	r3, ip
 80002c6:	3802      	subs	r0, #2
 80002c8:	1b9b      	subs	r3, r3, r6
 80002ca:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 80002ce:	2100      	movs	r1, #0
 80002d0:	b11d      	cbz	r5, 80002da <__udivmoddi4+0xa6>
 80002d2:	40d3      	lsrs	r3, r2
 80002d4:	2200      	movs	r2, #0
 80002d6:	e9c5 3200 	strd	r3, r2, [r5]
 80002da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002de:	428b      	cmp	r3, r1
 80002e0:	d905      	bls.n	80002ee <__udivmoddi4+0xba>
 80002e2:	b10d      	cbz	r5, 80002e8 <__udivmoddi4+0xb4>
 80002e4:	e9c5 0100 	strd	r0, r1, [r5]
 80002e8:	2100      	movs	r1, #0
 80002ea:	4608      	mov	r0, r1
 80002ec:	e7f5      	b.n	80002da <__udivmoddi4+0xa6>
 80002ee:	fab3 f183 	clz	r1, r3
 80002f2:	2900      	cmp	r1, #0
 80002f4:	d146      	bne.n	8000384 <__udivmoddi4+0x150>
 80002f6:	42a3      	cmp	r3, r4
 80002f8:	d302      	bcc.n	8000300 <__udivmoddi4+0xcc>
 80002fa:	4290      	cmp	r0, r2
 80002fc:	f0c0 80f0 	bcc.w	80004e0 <__udivmoddi4+0x2ac>
 8000300:	1a86      	subs	r6, r0, r2
 8000302:	eb64 0303 	sbc.w	r3, r4, r3
 8000306:	2001      	movs	r0, #1
 8000308:	2d00      	cmp	r5, #0
 800030a:	d0e6      	beq.n	80002da <__udivmoddi4+0xa6>
 800030c:	e9c5 6300 	strd	r6, r3, [r5]
 8000310:	e7e3      	b.n	80002da <__udivmoddi4+0xa6>
 8000312:	2a00      	cmp	r2, #0
 8000314:	f040 8090 	bne.w	8000438 <__udivmoddi4+0x204>
 8000318:	eba1 040c 	sub.w	r4, r1, ip
 800031c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000320:	fa1f f78c 	uxth.w	r7, ip
 8000324:	2101      	movs	r1, #1
 8000326:	fbb4 f6f8 	udiv	r6, r4, r8
 800032a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800032e:	fb08 4416 	mls	r4, r8, r6, r4
 8000332:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000336:	fb07 f006 	mul.w	r0, r7, r6
 800033a:	4298      	cmp	r0, r3
 800033c:	d908      	bls.n	8000350 <__udivmoddi4+0x11c>
 800033e:	eb1c 0303 	adds.w	r3, ip, r3
 8000342:	f106 34ff 	add.w	r4, r6, #4294967295
 8000346:	d202      	bcs.n	800034e <__udivmoddi4+0x11a>
 8000348:	4298      	cmp	r0, r3
 800034a:	f200 80cd 	bhi.w	80004e8 <__udivmoddi4+0x2b4>
 800034e:	4626      	mov	r6, r4
 8000350:	1a1c      	subs	r4, r3, r0
 8000352:	fa1f f38e 	uxth.w	r3, lr
 8000356:	fbb4 f0f8 	udiv	r0, r4, r8
 800035a:	fb08 4410 	mls	r4, r8, r0, r4
 800035e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000362:	fb00 f707 	mul.w	r7, r0, r7
 8000366:	429f      	cmp	r7, r3
 8000368:	d908      	bls.n	800037c <__udivmoddi4+0x148>
 800036a:	eb1c 0303 	adds.w	r3, ip, r3
 800036e:	f100 34ff 	add.w	r4, r0, #4294967295
 8000372:	d202      	bcs.n	800037a <__udivmoddi4+0x146>
 8000374:	429f      	cmp	r7, r3
 8000376:	f200 80b0 	bhi.w	80004da <__udivmoddi4+0x2a6>
 800037a:	4620      	mov	r0, r4
 800037c:	1bdb      	subs	r3, r3, r7
 800037e:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000382:	e7a5      	b.n	80002d0 <__udivmoddi4+0x9c>
 8000384:	f1c1 0620 	rsb	r6, r1, #32
 8000388:	408b      	lsls	r3, r1
 800038a:	fa22 f706 	lsr.w	r7, r2, r6
 800038e:	431f      	orrs	r7, r3
 8000390:	fa20 fc06 	lsr.w	ip, r0, r6
 8000394:	fa04 f301 	lsl.w	r3, r4, r1
 8000398:	ea43 030c 	orr.w	r3, r3, ip
 800039c:	40f4      	lsrs	r4, r6
 800039e:	fa00 f801 	lsl.w	r8, r0, r1
 80003a2:	0c38      	lsrs	r0, r7, #16
 80003a4:	ea4f 4913 	mov.w	r9, r3, lsr #16
 80003a8:	fbb4 fef0 	udiv	lr, r4, r0
 80003ac:	fa1f fc87 	uxth.w	ip, r7
 80003b0:	fb00 441e 	mls	r4, r0, lr, r4
 80003b4:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80003b8:	fb0e f90c 	mul.w	r9, lr, ip
 80003bc:	45a1      	cmp	r9, r4
 80003be:	fa02 f201 	lsl.w	r2, r2, r1
 80003c2:	d90a      	bls.n	80003da <__udivmoddi4+0x1a6>
 80003c4:	193c      	adds	r4, r7, r4
 80003c6:	f10e 3aff 	add.w	sl, lr, #4294967295
 80003ca:	f080 8084 	bcs.w	80004d6 <__udivmoddi4+0x2a2>
 80003ce:	45a1      	cmp	r9, r4
 80003d0:	f240 8081 	bls.w	80004d6 <__udivmoddi4+0x2a2>
 80003d4:	f1ae 0e02 	sub.w	lr, lr, #2
 80003d8:	443c      	add	r4, r7
 80003da:	eba4 0409 	sub.w	r4, r4, r9
 80003de:	fa1f f983 	uxth.w	r9, r3
 80003e2:	fbb4 f3f0 	udiv	r3, r4, r0
 80003e6:	fb00 4413 	mls	r4, r0, r3, r4
 80003ea:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80003ee:	fb03 fc0c 	mul.w	ip, r3, ip
 80003f2:	45a4      	cmp	ip, r4
 80003f4:	d907      	bls.n	8000406 <__udivmoddi4+0x1d2>
 80003f6:	193c      	adds	r4, r7, r4
 80003f8:	f103 30ff 	add.w	r0, r3, #4294967295
 80003fc:	d267      	bcs.n	80004ce <__udivmoddi4+0x29a>
 80003fe:	45a4      	cmp	ip, r4
 8000400:	d965      	bls.n	80004ce <__udivmoddi4+0x29a>
 8000402:	3b02      	subs	r3, #2
 8000404:	443c      	add	r4, r7
 8000406:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 800040a:	fba0 9302 	umull	r9, r3, r0, r2
 800040e:	eba4 040c 	sub.w	r4, r4, ip
 8000412:	429c      	cmp	r4, r3
 8000414:	46ce      	mov	lr, r9
 8000416:	469c      	mov	ip, r3
 8000418:	d351      	bcc.n	80004be <__udivmoddi4+0x28a>
 800041a:	d04e      	beq.n	80004ba <__udivmoddi4+0x286>
 800041c:	b155      	cbz	r5, 8000434 <__udivmoddi4+0x200>
 800041e:	ebb8 030e 	subs.w	r3, r8, lr
 8000422:	eb64 040c 	sbc.w	r4, r4, ip
 8000426:	fa04 f606 	lsl.w	r6, r4, r6
 800042a:	40cb      	lsrs	r3, r1
 800042c:	431e      	orrs	r6, r3
 800042e:	40cc      	lsrs	r4, r1
 8000430:	e9c5 6400 	strd	r6, r4, [r5]
 8000434:	2100      	movs	r1, #0
 8000436:	e750      	b.n	80002da <__udivmoddi4+0xa6>
 8000438:	f1c2 0320 	rsb	r3, r2, #32
 800043c:	fa20 f103 	lsr.w	r1, r0, r3
 8000440:	fa0c fc02 	lsl.w	ip, ip, r2
 8000444:	fa24 f303 	lsr.w	r3, r4, r3
 8000448:	4094      	lsls	r4, r2
 800044a:	430c      	orrs	r4, r1
 800044c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000450:	fa00 fe02 	lsl.w	lr, r0, r2
 8000454:	fa1f f78c 	uxth.w	r7, ip
 8000458:	fbb3 f0f8 	udiv	r0, r3, r8
 800045c:	fb08 3110 	mls	r1, r8, r0, r3
 8000460:	0c23      	lsrs	r3, r4, #16
 8000462:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000466:	fb00 f107 	mul.w	r1, r0, r7
 800046a:	4299      	cmp	r1, r3
 800046c:	d908      	bls.n	8000480 <__udivmoddi4+0x24c>
 800046e:	eb1c 0303 	adds.w	r3, ip, r3
 8000472:	f100 36ff 	add.w	r6, r0, #4294967295
 8000476:	d22c      	bcs.n	80004d2 <__udivmoddi4+0x29e>
 8000478:	4299      	cmp	r1, r3
 800047a:	d92a      	bls.n	80004d2 <__udivmoddi4+0x29e>
 800047c:	3802      	subs	r0, #2
 800047e:	4463      	add	r3, ip
 8000480:	1a5b      	subs	r3, r3, r1
 8000482:	b2a4      	uxth	r4, r4
 8000484:	fbb3 f1f8 	udiv	r1, r3, r8
 8000488:	fb08 3311 	mls	r3, r8, r1, r3
 800048c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000490:	fb01 f307 	mul.w	r3, r1, r7
 8000494:	42a3      	cmp	r3, r4
 8000496:	d908      	bls.n	80004aa <__udivmoddi4+0x276>
 8000498:	eb1c 0404 	adds.w	r4, ip, r4
 800049c:	f101 36ff 	add.w	r6, r1, #4294967295
 80004a0:	d213      	bcs.n	80004ca <__udivmoddi4+0x296>
 80004a2:	42a3      	cmp	r3, r4
 80004a4:	d911      	bls.n	80004ca <__udivmoddi4+0x296>
 80004a6:	3902      	subs	r1, #2
 80004a8:	4464      	add	r4, ip
 80004aa:	1ae4      	subs	r4, r4, r3
 80004ac:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80004b0:	e739      	b.n	8000326 <__udivmoddi4+0xf2>
 80004b2:	4604      	mov	r4, r0
 80004b4:	e6f0      	b.n	8000298 <__udivmoddi4+0x64>
 80004b6:	4608      	mov	r0, r1
 80004b8:	e706      	b.n	80002c8 <__udivmoddi4+0x94>
 80004ba:	45c8      	cmp	r8, r9
 80004bc:	d2ae      	bcs.n	800041c <__udivmoddi4+0x1e8>
 80004be:	ebb9 0e02 	subs.w	lr, r9, r2
 80004c2:	eb63 0c07 	sbc.w	ip, r3, r7
 80004c6:	3801      	subs	r0, #1
 80004c8:	e7a8      	b.n	800041c <__udivmoddi4+0x1e8>
 80004ca:	4631      	mov	r1, r6
 80004cc:	e7ed      	b.n	80004aa <__udivmoddi4+0x276>
 80004ce:	4603      	mov	r3, r0
 80004d0:	e799      	b.n	8000406 <__udivmoddi4+0x1d2>
 80004d2:	4630      	mov	r0, r6
 80004d4:	e7d4      	b.n	8000480 <__udivmoddi4+0x24c>
 80004d6:	46d6      	mov	lr, sl
 80004d8:	e77f      	b.n	80003da <__udivmoddi4+0x1a6>
 80004da:	4463      	add	r3, ip
 80004dc:	3802      	subs	r0, #2
 80004de:	e74d      	b.n	800037c <__udivmoddi4+0x148>
 80004e0:	4606      	mov	r6, r0
 80004e2:	4623      	mov	r3, r4
 80004e4:	4608      	mov	r0, r1
 80004e6:	e70f      	b.n	8000308 <__udivmoddi4+0xd4>
 80004e8:	3e02      	subs	r6, #2
 80004ea:	4463      	add	r3, ip
 80004ec:	e730      	b.n	8000350 <__udivmoddi4+0x11c>
 80004ee:	bf00      	nop

080004f0 <__aeabi_idiv0>:
 80004f0:	4770      	bx	lr
 80004f2:	bf00      	nop

080004f4 <MX_GPIO_Init>:
        * EVENT_OUT
        * EXTI
     PA2   ------> USART2_TX
*/
void MX_GPIO_Init(void)
{
 80004f4:	b580      	push	{r7, lr}
 80004f6:	b08a      	sub	sp, #40	@ 0x28
 80004f8:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80004fa:	f107 0314 	add.w	r3, r7, #20
 80004fe:	2200      	movs	r2, #0
 8000500:	601a      	str	r2, [r3, #0]
 8000502:	605a      	str	r2, [r3, #4]
 8000504:	609a      	str	r2, [r3, #8]
 8000506:	60da      	str	r2, [r3, #12]
 8000508:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800050a:	2300      	movs	r3, #0
 800050c:	613b      	str	r3, [r7, #16]
 800050e:	4b66      	ldr	r3, [pc, #408]	@ (80006a8 <MX_GPIO_Init+0x1b4>)
 8000510:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000512:	4a65      	ldr	r2, [pc, #404]	@ (80006a8 <MX_GPIO_Init+0x1b4>)
 8000514:	f043 0304 	orr.w	r3, r3, #4
 8000518:	6313      	str	r3, [r2, #48]	@ 0x30
 800051a:	4b63      	ldr	r3, [pc, #396]	@ (80006a8 <MX_GPIO_Init+0x1b4>)
 800051c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800051e:	f003 0304 	and.w	r3, r3, #4
 8000522:	613b      	str	r3, [r7, #16]
 8000524:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000526:	2300      	movs	r3, #0
 8000528:	60fb      	str	r3, [r7, #12]
 800052a:	4b5f      	ldr	r3, [pc, #380]	@ (80006a8 <MX_GPIO_Init+0x1b4>)
 800052c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800052e:	4a5e      	ldr	r2, [pc, #376]	@ (80006a8 <MX_GPIO_Init+0x1b4>)
 8000530:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000534:	6313      	str	r3, [r2, #48]	@ 0x30
 8000536:	4b5c      	ldr	r3, [pc, #368]	@ (80006a8 <MX_GPIO_Init+0x1b4>)
 8000538:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800053a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800053e:	60fb      	str	r3, [r7, #12]
 8000540:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000542:	2300      	movs	r3, #0
 8000544:	60bb      	str	r3, [r7, #8]
 8000546:	4b58      	ldr	r3, [pc, #352]	@ (80006a8 <MX_GPIO_Init+0x1b4>)
 8000548:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800054a:	4a57      	ldr	r2, [pc, #348]	@ (80006a8 <MX_GPIO_Init+0x1b4>)
 800054c:	f043 0301 	orr.w	r3, r3, #1
 8000550:	6313      	str	r3, [r2, #48]	@ 0x30
 8000552:	4b55      	ldr	r3, [pc, #340]	@ (80006a8 <MX_GPIO_Init+0x1b4>)
 8000554:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000556:	f003 0301 	and.w	r3, r3, #1
 800055a:	60bb      	str	r3, [r7, #8]
 800055c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800055e:	2300      	movs	r3, #0
 8000560:	607b      	str	r3, [r7, #4]
 8000562:	4b51      	ldr	r3, [pc, #324]	@ (80006a8 <MX_GPIO_Init+0x1b4>)
 8000564:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000566:	4a50      	ldr	r2, [pc, #320]	@ (80006a8 <MX_GPIO_Init+0x1b4>)
 8000568:	f043 0302 	orr.w	r3, r3, #2
 800056c:	6313      	str	r3, [r2, #48]	@ 0x30
 800056e:	4b4e      	ldr	r3, [pc, #312]	@ (80006a8 <MX_GPIO_Init+0x1b4>)
 8000570:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000572:	f003 0302 	and.w	r3, r3, #2
 8000576:	607b      	str	r3, [r7, #4]
 8000578:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LD2_Pin|DIRECTION4_Pin|DIRECTION3_Pin, GPIO_PIN_RESET);
 800057a:	2200      	movs	r2, #0
 800057c:	21e0      	movs	r1, #224	@ 0xe0
 800057e:	484b      	ldr	r0, [pc, #300]	@ (80006ac <MX_GPIO_Init+0x1b8>)
 8000580:	f001 ff7e 	bl	8002480 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(DIRECTION2_GPIO_Port, DIRECTION2_Pin, GPIO_PIN_RESET);
 8000584:	2200      	movs	r2, #0
 8000586:	2110      	movs	r1, #16
 8000588:	4849      	ldr	r0, [pc, #292]	@ (80006b0 <MX_GPIO_Init+0x1bc>)
 800058a:	f001 ff79 	bl	8002480 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(ENABLE_GPIO_Port, ENABLE_Pin, GPIO_PIN_SET);
 800058e:	2201      	movs	r2, #1
 8000590:	2120      	movs	r1, #32
 8000592:	4847      	ldr	r0, [pc, #284]	@ (80006b0 <MX_GPIO_Init+0x1bc>)
 8000594:	f001 ff74 	bl	8002480 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, DIRECTION1_Pin|SERVO_en_Pin, GPIO_PIN_RESET);
 8000598:	2200      	movs	r2, #0
 800059a:	2103      	movs	r1, #3
 800059c:	4845      	ldr	r0, [pc, #276]	@ (80006b4 <MX_GPIO_Init+0x1c0>)
 800059e:	f001 ff6f 	bl	8002480 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(ENDEFF_en_GPIO_Port, ENDEFF_en_Pin, GPIO_PIN_SET);
 80005a2:	2201      	movs	r2, #1
 80005a4:	2104      	movs	r1, #4
 80005a6:	4843      	ldr	r0, [pc, #268]	@ (80006b4 <MX_GPIO_Init+0x1c0>)
 80005a8:	f001 ff6a 	bl	8002480 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = DISABLE_button_Pin;
 80005ac:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80005b0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80005b2:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 80005b6:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80005b8:	2300      	movs	r3, #0
 80005ba:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(DISABLE_button_GPIO_Port, &GPIO_InitStruct);
 80005bc:	f107 0314 	add.w	r3, r7, #20
 80005c0:	4619      	mov	r1, r3
 80005c2:	483b      	ldr	r0, [pc, #236]	@ (80006b0 <MX_GPIO_Init+0x1bc>)
 80005c4:	f001 fdc8 	bl	8002158 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = USART_TX_Pin;
 80005c8:	2304      	movs	r3, #4
 80005ca:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80005cc:	2302      	movs	r3, #2
 80005ce:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80005d0:	2300      	movs	r3, #0
 80005d2:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80005d4:	2303      	movs	r3, #3
 80005d6:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 80005d8:	2307      	movs	r3, #7
 80005da:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(USART_TX_GPIO_Port, &GPIO_InitStruct);
 80005dc:	f107 0314 	add.w	r3, r7, #20
 80005e0:	4619      	mov	r1, r3
 80005e2:	4832      	ldr	r0, [pc, #200]	@ (80006ac <MX_GPIO_Init+0x1b8>)
 80005e4:	f001 fdb8 	bl	8002158 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = LD2_Pin;
 80005e8:	2320      	movs	r3, #32
 80005ea:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80005ec:	2301      	movs	r3, #1
 80005ee:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80005f0:	2300      	movs	r3, #0
 80005f2:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80005f4:	2300      	movs	r3, #0
 80005f6:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 80005f8:	f107 0314 	add.w	r3, r7, #20
 80005fc:	4619      	mov	r1, r3
 80005fe:	482b      	ldr	r0, [pc, #172]	@ (80006ac <MX_GPIO_Init+0x1b8>)
 8000600:	f001 fdaa 	bl	8002158 <HAL_GPIO_Init>

  /*Configure GPIO pins : PAPin PAPin */
  GPIO_InitStruct.Pin = DIRECTION4_Pin|DIRECTION3_Pin;
 8000604:	23c0      	movs	r3, #192	@ 0xc0
 8000606:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000608:	2301      	movs	r3, #1
 800060a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 800060c:	2302      	movs	r3, #2
 800060e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000610:	2300      	movs	r3, #0
 8000612:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000614:	f107 0314 	add.w	r3, r7, #20
 8000618:	4619      	mov	r1, r3
 800061a:	4824      	ldr	r0, [pc, #144]	@ (80006ac <MX_GPIO_Init+0x1b8>)
 800061c:	f001 fd9c 	bl	8002158 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = DIRECTION2_Pin;
 8000620:	2310      	movs	r3, #16
 8000622:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000624:	2301      	movs	r3, #1
 8000626:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8000628:	2302      	movs	r3, #2
 800062a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800062c:	2300      	movs	r3, #0
 800062e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(DIRECTION2_GPIO_Port, &GPIO_InitStruct);
 8000630:	f107 0314 	add.w	r3, r7, #20
 8000634:	4619      	mov	r1, r3
 8000636:	481e      	ldr	r0, [pc, #120]	@ (80006b0 <MX_GPIO_Init+0x1bc>)
 8000638:	f001 fd8e 	bl	8002158 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = ENABLE_Pin;
 800063c:	2320      	movs	r3, #32
 800063e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000640:	2301      	movs	r3, #1
 8000642:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000644:	2301      	movs	r3, #1
 8000646:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000648:	2302      	movs	r3, #2
 800064a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(ENABLE_GPIO_Port, &GPIO_InitStruct);
 800064c:	f107 0314 	add.w	r3, r7, #20
 8000650:	4619      	mov	r1, r3
 8000652:	4817      	ldr	r0, [pc, #92]	@ (80006b0 <MX_GPIO_Init+0x1bc>)
 8000654:	f001 fd80 	bl	8002158 <HAL_GPIO_Init>

  /*Configure GPIO pins : PBPin PBPin */
  GPIO_InitStruct.Pin = DIRECTION1_Pin|SERVO_en_Pin;
 8000658:	2303      	movs	r3, #3
 800065a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800065c:	2301      	movs	r3, #1
 800065e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8000660:	2302      	movs	r3, #2
 8000662:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000664:	2300      	movs	r3, #0
 8000666:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000668:	f107 0314 	add.w	r3, r7, #20
 800066c:	4619      	mov	r1, r3
 800066e:	4811      	ldr	r0, [pc, #68]	@ (80006b4 <MX_GPIO_Init+0x1c0>)
 8000670:	f001 fd72 	bl	8002158 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = ENDEFF_en_Pin;
 8000674:	2304      	movs	r3, #4
 8000676:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000678:	2301      	movs	r3, #1
 800067a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800067c:	2301      	movs	r3, #1
 800067e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000680:	2300      	movs	r3, #0
 8000682:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(ENDEFF_en_GPIO_Port, &GPIO_InitStruct);
 8000684:	f107 0314 	add.w	r3, r7, #20
 8000688:	4619      	mov	r1, r3
 800068a:	480a      	ldr	r0, [pc, #40]	@ (80006b4 <MX_GPIO_Init+0x1c0>)
 800068c:	f001 fd64 	bl	8002158 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8000690:	2200      	movs	r2, #0
 8000692:	2100      	movs	r1, #0
 8000694:	2028      	movs	r0, #40	@ 0x28
 8000696:	f001 fd28 	bl	80020ea <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 800069a:	2028      	movs	r0, #40	@ 0x28
 800069c:	f001 fd41 	bl	8002122 <HAL_NVIC_EnableIRQ>

}
 80006a0:	bf00      	nop
 80006a2:	3728      	adds	r7, #40	@ 0x28
 80006a4:	46bd      	mov	sp, r7
 80006a6:	bd80      	pop	{r7, pc}
 80006a8:	40023800 	.word	0x40023800
 80006ac:	40020000 	.word	0x40020000
 80006b0:	40020800 	.word	0x40020800
 80006b4:	40020400 	.word	0x40020400

080006b8 <trapezoidal_func>:
 TIMx->CR1 &= (uint16_t) (~((uint16_t) TIM_CR1_CEN));
 }
 }*/

/*The trapezoidal profile applied on the steppers*/
void trapezoidal_func(int k, TIM_HandleTypeDef *htim, TIM_HandleTypeDef *hslave) {
 80006b8:	b580      	push	{r7, lr}
 80006ba:	b086      	sub	sp, #24
 80006bc:	af00      	add	r7, sp, #0
 80006be:	60f8      	str	r0, [r7, #12]
 80006c0:	60b9      	str	r1, [r7, #8]
 80006c2:	607a      	str	r2, [r7, #4]

	int cnt = __HAL_TIM_GET_COUNTER(hslave);  //retrieve the N_steps done by the slave
 80006c4:	687b      	ldr	r3, [r7, #4]
 80006c6:	681b      	ldr	r3, [r3, #0]
 80006c8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80006ca:	617b      	str	r3, [r7, #20]
	if (cnt >= hslave->Instance->ARR) { //verify if arr has been reached
 80006cc:	687b      	ldr	r3, [r7, #4]
 80006ce:	681b      	ldr	r3, [r3, #0]
 80006d0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80006d2:	697b      	ldr	r3, [r7, #20]
 80006d4:	429a      	cmp	r2, r3
 80006d6:	d827      	bhi.n	8000728 <trapezoidal_func+0x70>
		if (hslave->Instance == TIM3) { //for the timers 2 the second pwm must be stopped too
 80006d8:	687b      	ldr	r3, [r7, #4]
 80006da:	681b      	ldr	r3, [r3, #0]
 80006dc:	4a92      	ldr	r2, [pc, #584]	@ (8000928 <trapezoidal_func+0x270>)
 80006de:	4293      	cmp	r3, r2
 80006e0:	d103      	bne.n	80006ea <trapezoidal_func+0x32>
			HAL_TIM_PWM_Stop_IT(htim, TIM_CHANNEL_2);
 80006e2:	2104      	movs	r1, #4
 80006e4:	68b8      	ldr	r0, [r7, #8]
 80006e6:	f002 ffdb 	bl	80036a0 <HAL_TIM_PWM_Stop_IT>
		}

		HAL_TIM_PWM_Stop_IT(htim, TIM_CHANNEL_1); //stop the pwm
 80006ea:	2100      	movs	r1, #0
 80006ec:	68b8      	ldr	r0, [r7, #8]
 80006ee:	f002 ffd7 	bl	80036a0 <HAL_TIM_PWM_Stop_IT>

		count_rising_edge[k] = 0;	//reset the counter
 80006f2:	4a8e      	ldr	r2, [pc, #568]	@ (800092c <trapezoidal_func+0x274>)
 80006f4:	68fb      	ldr	r3, [r7, #12]
 80006f6:	2100      	movs	r1, #0
 80006f8:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		acc_count[k] = 0;           //reset the acceleration steps counter
 80006fc:	4a8c      	ldr	r2, [pc, #560]	@ (8000930 <trapezoidal_func+0x278>)
 80006fe:	68fb      	ldr	r3, [r7, #12]
 8000700:	2100      	movs	r1, #0
 8000702:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		//dec_count[k] = 0; //debug

		htim->Instance->EGR |= TIM_EGR_UG; //reset the timer master
 8000706:	68bb      	ldr	r3, [r7, #8]
 8000708:	681b      	ldr	r3, [r3, #0]
 800070a:	695a      	ldr	r2, [r3, #20]
 800070c:	68bb      	ldr	r3, [r7, #8]
 800070e:	681b      	ldr	r3, [r3, #0]
 8000710:	f042 0201 	orr.w	r2, r2, #1
 8000714:	615a      	str	r2, [r3, #20]
		hslave->Instance->EGR |= TIM_EGR_UG; //reset the timer slave
 8000716:	687b      	ldr	r3, [r7, #4]
 8000718:	681b      	ldr	r3, [r3, #0]
 800071a:	695a      	ldr	r2, [r3, #20]
 800071c:	687b      	ldr	r3, [r7, #4]
 800071e:	681b      	ldr	r3, [r3, #0]
 8000720:	f042 0201 	orr.w	r2, r2, #1
 8000724:	615a      	str	r2, [r3, #20]
			}

		}
	}

}
 8000726:	e172      	b.n	8000a0e <trapezoidal_func+0x356>
		if (arr_des_a[k] > arr_start[k]) { //subroutine to set the starting minimum acceleration
 8000728:	4a82      	ldr	r2, [pc, #520]	@ (8000934 <trapezoidal_func+0x27c>)
 800072a:	68fb      	ldr	r3, [r7, #12]
 800072c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000730:	4619      	mov	r1, r3
 8000732:	4a81      	ldr	r2, [pc, #516]	@ (8000938 <trapezoidal_func+0x280>)
 8000734:	68fb      	ldr	r3, [r7, #12]
 8000736:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800073a:	4299      	cmp	r1, r3
 800073c:	d929      	bls.n	8000792 <trapezoidal_func+0xda>
			__HAL_TIM_SET_AUTORELOAD(htim, arr_start[k]);
 800073e:	68bb      	ldr	r3, [r7, #8]
 8000740:	681b      	ldr	r3, [r3, #0]
 8000742:	497d      	ldr	r1, [pc, #500]	@ (8000938 <trapezoidal_func+0x280>)
 8000744:	68fa      	ldr	r2, [r7, #12]
 8000746:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800074a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800074c:	4a7a      	ldr	r2, [pc, #488]	@ (8000938 <trapezoidal_func+0x280>)
 800074e:	68fb      	ldr	r3, [r7, #12]
 8000750:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000754:	68bb      	ldr	r3, [r7, #8]
 8000756:	60da      	str	r2, [r3, #12]
			hslave->Instance->PSC = arr_start[k];
 8000758:	687b      	ldr	r3, [r7, #4]
 800075a:	681b      	ldr	r3, [r3, #0]
 800075c:	4976      	ldr	r1, [pc, #472]	@ (8000938 <trapezoidal_func+0x280>)
 800075e:	68fa      	ldr	r2, [r7, #12]
 8000760:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8000764:	629a      	str	r2, [r3, #40]	@ 0x28
			__HAL_TIM_SET_COMPARE(htim, TIM_CHANNEL_1,
 8000766:	68bb      	ldr	r3, [r7, #8]
 8000768:	681b      	ldr	r3, [r3, #0]
 800076a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800076c:	68bb      	ldr	r3, [r7, #8]
 800076e:	681b      	ldr	r3, [r3, #0]
 8000770:	0852      	lsrs	r2, r2, #1
 8000772:	635a      	str	r2, [r3, #52]	@ 0x34
			hslave->Instance->EGR |= TIM_EGR_UG;
 8000774:	687b      	ldr	r3, [r7, #4]
 8000776:	681b      	ldr	r3, [r3, #0]
 8000778:	695a      	ldr	r2, [r3, #20]
 800077a:	687b      	ldr	r3, [r7, #4]
 800077c:	681b      	ldr	r3, [r3, #0]
 800077e:	f042 0201 	orr.w	r2, r2, #1
 8000782:	615a      	str	r2, [r3, #20]
			hslave->Instance->CNT = count_rising_edge[k];
 8000784:	687b      	ldr	r3, [r7, #4]
 8000786:	681b      	ldr	r3, [r3, #0]
 8000788:	4968      	ldr	r1, [pc, #416]	@ (800092c <trapezoidal_func+0x274>)
 800078a:	68fa      	ldr	r2, [r7, #12]
 800078c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8000790:	625a      	str	r2, [r3, #36]	@ 0x24
		if (arr_des_a[k] < (arr_current[k] - acc_rate_a[k])
 8000792:	4a68      	ldr	r2, [pc, #416]	@ (8000934 <trapezoidal_func+0x27c>)
 8000794:	68fb      	ldr	r3, [r7, #12]
 8000796:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800079a:	4619      	mov	r1, r3
 800079c:	4a67      	ldr	r2, [pc, #412]	@ (800093c <trapezoidal_func+0x284>)
 800079e:	68fb      	ldr	r3, [r7, #12]
 80007a0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80007a4:	4618      	mov	r0, r3
 80007a6:	4a66      	ldr	r2, [pc, #408]	@ (8000940 <trapezoidal_func+0x288>)
 80007a8:	68fb      	ldr	r3, [r7, #12]
 80007aa:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80007ae:	1ac3      	subs	r3, r0, r3
 80007b0:	4299      	cmp	r1, r3
 80007b2:	d266      	bcs.n	8000882 <trapezoidal_func+0x1ca>
				&& cnt <= (int) (n_steps_a[k] * 1 / 2)) { //acceleration phase
 80007b4:	4a63      	ldr	r2, [pc, #396]	@ (8000944 <trapezoidal_func+0x28c>)
 80007b6:	68fb      	ldr	r3, [r7, #12]
 80007b8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80007bc:	0fda      	lsrs	r2, r3, #31
 80007be:	4413      	add	r3, r2
 80007c0:	105b      	asrs	r3, r3, #1
 80007c2:	461a      	mov	r2, r3
 80007c4:	697b      	ldr	r3, [r7, #20]
 80007c6:	4293      	cmp	r3, r2
 80007c8:	dc5b      	bgt.n	8000882 <trapezoidal_func+0x1ca>
			arr_current[k] -= acc_rate_a[k];
 80007ca:	4a5c      	ldr	r2, [pc, #368]	@ (800093c <trapezoidal_func+0x284>)
 80007cc:	68fb      	ldr	r3, [r7, #12]
 80007ce:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80007d2:	4619      	mov	r1, r3
 80007d4:	4a5a      	ldr	r2, [pc, #360]	@ (8000940 <trapezoidal_func+0x288>)
 80007d6:	68fb      	ldr	r3, [r7, #12]
 80007d8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80007dc:	1acb      	subs	r3, r1, r3
 80007de:	4619      	mov	r1, r3
 80007e0:	4a56      	ldr	r2, [pc, #344]	@ (800093c <trapezoidal_func+0x284>)
 80007e2:	68fb      	ldr	r3, [r7, #12]
 80007e4:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
			if (arr_current[k] <= arr_max[k]) //max velocity saturation
 80007e8:	4a54      	ldr	r2, [pc, #336]	@ (800093c <trapezoidal_func+0x284>)
 80007ea:	68fb      	ldr	r3, [r7, #12]
 80007ec:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80007f0:	4619      	mov	r1, r3
 80007f2:	4a55      	ldr	r2, [pc, #340]	@ (8000948 <trapezoidal_func+0x290>)
 80007f4:	68fb      	ldr	r3, [r7, #12]
 80007f6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80007fa:	4299      	cmp	r1, r3
 80007fc:	d808      	bhi.n	8000810 <trapezoidal_func+0x158>
				arr_current[k] = arr_max[k];
 80007fe:	4a52      	ldr	r2, [pc, #328]	@ (8000948 <trapezoidal_func+0x290>)
 8000800:	68fb      	ldr	r3, [r7, #12]
 8000802:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000806:	4619      	mov	r1, r3
 8000808:	4a4c      	ldr	r2, [pc, #304]	@ (800093c <trapezoidal_func+0x284>)
 800080a:	68fb      	ldr	r3, [r7, #12]
 800080c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
			__HAL_TIM_SET_AUTORELOAD(htim, arr_current[k]);
 8000810:	4a4a      	ldr	r2, [pc, #296]	@ (800093c <trapezoidal_func+0x284>)
 8000812:	68fb      	ldr	r3, [r7, #12]
 8000814:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000818:	68bb      	ldr	r3, [r7, #8]
 800081a:	681b      	ldr	r3, [r3, #0]
 800081c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800081e:	4a47      	ldr	r2, [pc, #284]	@ (800093c <trapezoidal_func+0x284>)
 8000820:	68fb      	ldr	r3, [r7, #12]
 8000822:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000826:	461a      	mov	r2, r3
 8000828:	68bb      	ldr	r3, [r7, #8]
 800082a:	60da      	str	r2, [r3, #12]
			hslave->Instance->PSC = arr_current[k];
 800082c:	4a43      	ldr	r2, [pc, #268]	@ (800093c <trapezoidal_func+0x284>)
 800082e:	68fb      	ldr	r3, [r7, #12]
 8000830:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000834:	687b      	ldr	r3, [r7, #4]
 8000836:	681b      	ldr	r3, [r3, #0]
 8000838:	629a      	str	r2, [r3, #40]	@ 0x28
			__HAL_TIM_SET_COMPARE(htim, TIM_CHANNEL_1,
 800083a:	68bb      	ldr	r3, [r7, #8]
 800083c:	681b      	ldr	r3, [r3, #0]
 800083e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8000840:	68bb      	ldr	r3, [r7, #8]
 8000842:	681b      	ldr	r3, [r3, #0]
 8000844:	0852      	lsrs	r2, r2, #1
 8000846:	635a      	str	r2, [r3, #52]	@ 0x34
			hslave->Instance->EGR |= TIM_EGR_UG;
 8000848:	687b      	ldr	r3, [r7, #4]
 800084a:	681b      	ldr	r3, [r3, #0]
 800084c:	695a      	ldr	r2, [r3, #20]
 800084e:	687b      	ldr	r3, [r7, #4]
 8000850:	681b      	ldr	r3, [r3, #0]
 8000852:	f042 0201 	orr.w	r2, r2, #1
 8000856:	615a      	str	r2, [r3, #20]
			hslave->Instance->CNT = count_rising_edge[k];
 8000858:	687b      	ldr	r3, [r7, #4]
 800085a:	681b      	ldr	r3, [r3, #0]
 800085c:	4933      	ldr	r1, [pc, #204]	@ (800092c <trapezoidal_func+0x274>)
 800085e:	68fa      	ldr	r2, [r7, #12]
 8000860:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8000864:	625a      	str	r2, [r3, #36]	@ 0x24
			acc_count[k] += (htim->Instance->PSC + 1); //increase the acc_count
 8000866:	68bb      	ldr	r3, [r7, #8]
 8000868:	681b      	ldr	r3, [r3, #0]
 800086a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800086c:	1c5a      	adds	r2, r3, #1
 800086e:	4930      	ldr	r1, [pc, #192]	@ (8000930 <trapezoidal_func+0x278>)
 8000870:	68fb      	ldr	r3, [r7, #12]
 8000872:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8000876:	441a      	add	r2, r3
 8000878:	492d      	ldr	r1, [pc, #180]	@ (8000930 <trapezoidal_func+0x278>)
 800087a:	68fb      	ldr	r3, [r7, #12]
 800087c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000880:	e0c5      	b.n	8000a0e <trapezoidal_func+0x356>
			if (arr_des_a[k] >= (arr_current[k] - acc_rate_a[k])
 8000882:	4a2c      	ldr	r2, [pc, #176]	@ (8000934 <trapezoidal_func+0x27c>)
 8000884:	68fb      	ldr	r3, [r7, #12]
 8000886:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800088a:	4619      	mov	r1, r3
 800088c:	4a2b      	ldr	r2, [pc, #172]	@ (800093c <trapezoidal_func+0x284>)
 800088e:	68fb      	ldr	r3, [r7, #12]
 8000890:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000894:	4618      	mov	r0, r3
 8000896:	4a2a      	ldr	r2, [pc, #168]	@ (8000940 <trapezoidal_func+0x288>)
 8000898:	68fb      	ldr	r3, [r7, #12]
 800089a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800089e:	1ac3      	subs	r3, r0, r3
 80008a0:	4299      	cmp	r1, r3
 80008a2:	d353      	bcc.n	800094c <trapezoidal_func+0x294>
					&& arr_current[k] > arr_des_a[k]
 80008a4:	4a25      	ldr	r2, [pc, #148]	@ (800093c <trapezoidal_func+0x284>)
 80008a6:	68fb      	ldr	r3, [r7, #12]
 80008a8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80008ac:	4921      	ldr	r1, [pc, #132]	@ (8000934 <trapezoidal_func+0x27c>)
 80008ae:	68fb      	ldr	r3, [r7, #12]
 80008b0:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80008b4:	429a      	cmp	r2, r3
 80008b6:	dd49      	ble.n	800094c <trapezoidal_func+0x294>
					&& cnt <= (int) (n_steps_a[k] * 1 / 2)) { //constant phase
 80008b8:	4a22      	ldr	r2, [pc, #136]	@ (8000944 <trapezoidal_func+0x28c>)
 80008ba:	68fb      	ldr	r3, [r7, #12]
 80008bc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80008c0:	0fda      	lsrs	r2, r3, #31
 80008c2:	4413      	add	r3, r2
 80008c4:	105b      	asrs	r3, r3, #1
 80008c6:	461a      	mov	r2, r3
 80008c8:	697b      	ldr	r3, [r7, #20]
 80008ca:	4293      	cmp	r3, r2
 80008cc:	dc3e      	bgt.n	800094c <trapezoidal_func+0x294>
				__HAL_TIM_SET_AUTORELOAD(htim, arr_des_a[k]);
 80008ce:	4a19      	ldr	r2, [pc, #100]	@ (8000934 <trapezoidal_func+0x27c>)
 80008d0:	68fb      	ldr	r3, [r7, #12]
 80008d2:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80008d6:	68bb      	ldr	r3, [r7, #8]
 80008d8:	681b      	ldr	r3, [r3, #0]
 80008da:	62da      	str	r2, [r3, #44]	@ 0x2c
 80008dc:	4a15      	ldr	r2, [pc, #84]	@ (8000934 <trapezoidal_func+0x27c>)
 80008de:	68fb      	ldr	r3, [r7, #12]
 80008e0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80008e4:	461a      	mov	r2, r3
 80008e6:	68bb      	ldr	r3, [r7, #8]
 80008e8:	60da      	str	r2, [r3, #12]
				hslave->Instance->PSC = arr_des_a[k];
 80008ea:	4a12      	ldr	r2, [pc, #72]	@ (8000934 <trapezoidal_func+0x27c>)
 80008ec:	68fb      	ldr	r3, [r7, #12]
 80008ee:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80008f2:	687b      	ldr	r3, [r7, #4]
 80008f4:	681b      	ldr	r3, [r3, #0]
 80008f6:	629a      	str	r2, [r3, #40]	@ 0x28
				__HAL_TIM_SET_COMPARE(htim, TIM_CHANNEL_1,
 80008f8:	68bb      	ldr	r3, [r7, #8]
 80008fa:	681b      	ldr	r3, [r3, #0]
 80008fc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80008fe:	68bb      	ldr	r3, [r7, #8]
 8000900:	681b      	ldr	r3, [r3, #0]
 8000902:	0852      	lsrs	r2, r2, #1
 8000904:	635a      	str	r2, [r3, #52]	@ 0x34
				hslave->Instance->EGR |= TIM_EGR_UG;
 8000906:	687b      	ldr	r3, [r7, #4]
 8000908:	681b      	ldr	r3, [r3, #0]
 800090a:	695a      	ldr	r2, [r3, #20]
 800090c:	687b      	ldr	r3, [r7, #4]
 800090e:	681b      	ldr	r3, [r3, #0]
 8000910:	f042 0201 	orr.w	r2, r2, #1
 8000914:	615a      	str	r2, [r3, #20]
				hslave->Instance->CNT = count_rising_edge[k];
 8000916:	687b      	ldr	r3, [r7, #4]
 8000918:	681b      	ldr	r3, [r3, #0]
 800091a:	4904      	ldr	r1, [pc, #16]	@ (800092c <trapezoidal_func+0x274>)
 800091c:	68fa      	ldr	r2, [r7, #12]
 800091e:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8000922:	625a      	str	r2, [r3, #36]	@ 0x24
 8000924:	e073      	b.n	8000a0e <trapezoidal_func+0x356>
 8000926:	bf00      	nop
 8000928:	40000400 	.word	0x40000400
 800092c:	20000058 	.word	0x20000058
 8000930:	20000064 	.word	0x20000064
 8000934:	2000010c 	.word	0x2000010c
 8000938:	20000000 	.word	0x20000000
 800093c:	20000024 	.word	0x20000024
 8000940:	20000018 	.word	0x20000018
 8000944:	20000100 	.word	0x20000100
 8000948:	2000000c 	.word	0x2000000c
				if (cnt >= (n_steps_a[k] - acc_count[k])) { //deceleration phase
 800094c:	4a32      	ldr	r2, [pc, #200]	@ (8000a18 <trapezoidal_func+0x360>)
 800094e:	68fb      	ldr	r3, [r7, #12]
 8000950:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000954:	4619      	mov	r1, r3
 8000956:	4a31      	ldr	r2, [pc, #196]	@ (8000a1c <trapezoidal_func+0x364>)
 8000958:	68fb      	ldr	r3, [r7, #12]
 800095a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800095e:	1aca      	subs	r2, r1, r3
 8000960:	697b      	ldr	r3, [r7, #20]
 8000962:	429a      	cmp	r2, r3
 8000964:	d853      	bhi.n	8000a0e <trapezoidal_func+0x356>
					arr_current[k] += acc_rate_a[k];
 8000966:	4a2e      	ldr	r2, [pc, #184]	@ (8000a20 <trapezoidal_func+0x368>)
 8000968:	68fb      	ldr	r3, [r7, #12]
 800096a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800096e:	4619      	mov	r1, r3
 8000970:	4a2c      	ldr	r2, [pc, #176]	@ (8000a24 <trapezoidal_func+0x36c>)
 8000972:	68fb      	ldr	r3, [r7, #12]
 8000974:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000978:	440b      	add	r3, r1
 800097a:	4619      	mov	r1, r3
 800097c:	4a28      	ldr	r2, [pc, #160]	@ (8000a20 <trapezoidal_func+0x368>)
 800097e:	68fb      	ldr	r3, [r7, #12]
 8000980:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
					if (arr_current[k] >= (arr_start[k] - acc_rate_a[k])) //min velocity saturation
 8000984:	4a26      	ldr	r2, [pc, #152]	@ (8000a20 <trapezoidal_func+0x368>)
 8000986:	68fb      	ldr	r3, [r7, #12]
 8000988:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800098c:	4618      	mov	r0, r3
 800098e:	4a26      	ldr	r2, [pc, #152]	@ (8000a28 <trapezoidal_func+0x370>)
 8000990:	68fb      	ldr	r3, [r7, #12]
 8000992:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000996:	4923      	ldr	r1, [pc, #140]	@ (8000a24 <trapezoidal_func+0x36c>)
 8000998:	68fb      	ldr	r3, [r7, #12]
 800099a:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800099e:	1ad3      	subs	r3, r2, r3
 80009a0:	4298      	cmp	r0, r3
 80009a2:	d308      	bcc.n	80009b6 <trapezoidal_func+0x2fe>
						arr_current[k] = arr_start[k];
 80009a4:	4a20      	ldr	r2, [pc, #128]	@ (8000a28 <trapezoidal_func+0x370>)
 80009a6:	68fb      	ldr	r3, [r7, #12]
 80009a8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80009ac:	4619      	mov	r1, r3
 80009ae:	4a1c      	ldr	r2, [pc, #112]	@ (8000a20 <trapezoidal_func+0x368>)
 80009b0:	68fb      	ldr	r3, [r7, #12]
 80009b2:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
					__HAL_TIM_SET_AUTORELOAD(htim, arr_current[k]);
 80009b6:	4a1a      	ldr	r2, [pc, #104]	@ (8000a20 <trapezoidal_func+0x368>)
 80009b8:	68fb      	ldr	r3, [r7, #12]
 80009ba:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80009be:	68bb      	ldr	r3, [r7, #8]
 80009c0:	681b      	ldr	r3, [r3, #0]
 80009c2:	62da      	str	r2, [r3, #44]	@ 0x2c
 80009c4:	4a16      	ldr	r2, [pc, #88]	@ (8000a20 <trapezoidal_func+0x368>)
 80009c6:	68fb      	ldr	r3, [r7, #12]
 80009c8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80009cc:	461a      	mov	r2, r3
 80009ce:	68bb      	ldr	r3, [r7, #8]
 80009d0:	60da      	str	r2, [r3, #12]
					hslave->Instance->PSC = arr_current[k];
 80009d2:	4a13      	ldr	r2, [pc, #76]	@ (8000a20 <trapezoidal_func+0x368>)
 80009d4:	68fb      	ldr	r3, [r7, #12]
 80009d6:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80009da:	687b      	ldr	r3, [r7, #4]
 80009dc:	681b      	ldr	r3, [r3, #0]
 80009de:	629a      	str	r2, [r3, #40]	@ 0x28
					__HAL_TIM_SET_COMPARE(htim, TIM_CHANNEL_1,
 80009e0:	68bb      	ldr	r3, [r7, #8]
 80009e2:	681b      	ldr	r3, [r3, #0]
 80009e4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80009e6:	68bb      	ldr	r3, [r7, #8]
 80009e8:	681b      	ldr	r3, [r3, #0]
 80009ea:	0852      	lsrs	r2, r2, #1
 80009ec:	635a      	str	r2, [r3, #52]	@ 0x34
					hslave->Instance->EGR |= TIM_EGR_UG;
 80009ee:	687b      	ldr	r3, [r7, #4]
 80009f0:	681b      	ldr	r3, [r3, #0]
 80009f2:	695a      	ldr	r2, [r3, #20]
 80009f4:	687b      	ldr	r3, [r7, #4]
 80009f6:	681b      	ldr	r3, [r3, #0]
 80009f8:	f042 0201 	orr.w	r2, r2, #1
 80009fc:	615a      	str	r2, [r3, #20]
					hslave->Instance->CNT = count_rising_edge[k];
 80009fe:	687b      	ldr	r3, [r7, #4]
 8000a00:	681b      	ldr	r3, [r3, #0]
 8000a02:	490a      	ldr	r1, [pc, #40]	@ (8000a2c <trapezoidal_func+0x374>)
 8000a04:	68fa      	ldr	r2, [r7, #12]
 8000a06:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8000a0a:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8000a0c:	e7ff      	b.n	8000a0e <trapezoidal_func+0x356>
 8000a0e:	bf00      	nop
 8000a10:	3718      	adds	r7, #24
 8000a12:	46bd      	mov	sp, r7
 8000a14:	bd80      	pop	{r7, pc}
 8000a16:	bf00      	nop
 8000a18:	20000100 	.word	0x20000100
 8000a1c:	20000064 	.word	0x20000064
 8000a20:	20000024 	.word	0x20000024
 8000a24:	20000018 	.word	0x20000018
 8000a28:	20000000 	.word	0x20000000
 8000a2c:	20000058 	.word	0x20000058

08000a30 <HAL_TIM_PeriodElapsedCallback>:

//the following function is useful if you have specific needs
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 8000a30:	b480      	push	{r7}
 8000a32:	b083      	sub	sp, #12
 8000a34:	af00      	add	r7, sp, #0
 8000a36:	6078      	str	r0, [r7, #4]
	 HAL_GPIO_WritePin(ENDEFF_en_GPIO_Port, ENDEFF_en_Pin, GPIO_PIN_RESET); //disable the end_eff
	 HAL_TIM_Base_Stop_IT(htim);

	 }*/

}
 8000a38:	bf00      	nop
 8000a3a:	370c      	adds	r7, #12
 8000a3c:	46bd      	mov	sp, r7
 8000a3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a42:	4770      	bx	lr

08000a44 <HAL_TIM_PWM_PulseFinishedCallback>:


//the following functions is called for each interrupt of the master (pwm timer)
void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim) {
 8000a44:	b580      	push	{r7, lr}
 8000a46:	b082      	sub	sp, #8
 8000a48:	af00      	add	r7, sp, #0
 8000a4a:	6078      	str	r0, [r7, #4]

	if (htim->Instance == TIM1) {//joint1
 8000a4c:	687b      	ldr	r3, [r7, #4]
 8000a4e:	681b      	ldr	r3, [r3, #0]
 8000a50:	4a1d      	ldr	r2, [pc, #116]	@ (8000ac8 <HAL_TIM_PWM_PulseFinishedCallback+0x84>)
 8000a52:	4293      	cmp	r3, r2
 8000a54:	d10d      	bne.n	8000a72 <HAL_TIM_PWM_PulseFinishedCallback+0x2e>

		count_rising_edge[0] += (htim->Instance->PSC + 1);
 8000a56:	687b      	ldr	r3, [r7, #4]
 8000a58:	681b      	ldr	r3, [r3, #0]
 8000a5a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000a5c:	1c5a      	adds	r2, r3, #1
 8000a5e:	4b1b      	ldr	r3, [pc, #108]	@ (8000acc <HAL_TIM_PWM_PulseFinishedCallback+0x88>)
 8000a60:	681b      	ldr	r3, [r3, #0]
 8000a62:	4413      	add	r3, r2
 8000a64:	4a19      	ldr	r2, [pc, #100]	@ (8000acc <HAL_TIM_PWM_PulseFinishedCallback+0x88>)
 8000a66:	6013      	str	r3, [r2, #0]
		//arr[0] = -(__HAL_TIM_GET_AUTORELOAD(&htim1));  //debug graph
		trapezoidal_func(0, htim, &htim4); //0 = the joint1 timer
 8000a68:	4a19      	ldr	r2, [pc, #100]	@ (8000ad0 <HAL_TIM_PWM_PulseFinishedCallback+0x8c>)
 8000a6a:	6879      	ldr	r1, [r7, #4]
 8000a6c:	2000      	movs	r0, #0
 8000a6e:	f7ff fe23 	bl	80006b8 <trapezoidal_func>

	}

	if (htim->Instance == TIM2) {//joint2
 8000a72:	687b      	ldr	r3, [r7, #4]
 8000a74:	681b      	ldr	r3, [r3, #0]
 8000a76:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8000a7a:	d10d      	bne.n	8000a98 <HAL_TIM_PWM_PulseFinishedCallback+0x54>

		count_rising_edge[1] += (htim->Instance->PSC + 1);
 8000a7c:	687b      	ldr	r3, [r7, #4]
 8000a7e:	681b      	ldr	r3, [r3, #0]
 8000a80:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000a82:	1c5a      	adds	r2, r3, #1
 8000a84:	4b11      	ldr	r3, [pc, #68]	@ (8000acc <HAL_TIM_PWM_PulseFinishedCallback+0x88>)
 8000a86:	685b      	ldr	r3, [r3, #4]
 8000a88:	4413      	add	r3, r2
 8000a8a:	4a10      	ldr	r2, [pc, #64]	@ (8000acc <HAL_TIM_PWM_PulseFinishedCallback+0x88>)
 8000a8c:	6053      	str	r3, [r2, #4]
		//arr[1] = -(__HAL_TIM_GET_AUTORELOAD(htim));  //debug graph
		trapezoidal_func(1, htim, &htim3); //1 = the joint2 timer
 8000a8e:	4a11      	ldr	r2, [pc, #68]	@ (8000ad4 <HAL_TIM_PWM_PulseFinishedCallback+0x90>)
 8000a90:	6879      	ldr	r1, [r7, #4]
 8000a92:	2001      	movs	r0, #1
 8000a94:	f7ff fe10 	bl	80006b8 <trapezoidal_func>

	}

	if (htim->Instance == TIM8) {//joint3
 8000a98:	687b      	ldr	r3, [r7, #4]
 8000a9a:	681b      	ldr	r3, [r3, #0]
 8000a9c:	4a0e      	ldr	r2, [pc, #56]	@ (8000ad8 <HAL_TIM_PWM_PulseFinishedCallback+0x94>)
 8000a9e:	4293      	cmp	r3, r2
 8000aa0:	d10d      	bne.n	8000abe <HAL_TIM_PWM_PulseFinishedCallback+0x7a>

		count_rising_edge[2] += (htim->Instance->PSC + 1);
 8000aa2:	687b      	ldr	r3, [r7, #4]
 8000aa4:	681b      	ldr	r3, [r3, #0]
 8000aa6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000aa8:	1c5a      	adds	r2, r3, #1
 8000aaa:	4b08      	ldr	r3, [pc, #32]	@ (8000acc <HAL_TIM_PWM_PulseFinishedCallback+0x88>)
 8000aac:	689b      	ldr	r3, [r3, #8]
 8000aae:	4413      	add	r3, r2
 8000ab0:	4a06      	ldr	r2, [pc, #24]	@ (8000acc <HAL_TIM_PWM_PulseFinishedCallback+0x88>)
 8000ab2:	6093      	str	r3, [r2, #8]
		//arr[2] = -(__HAL_TIM_GET_AUTORELOAD(htim));  //debug graph
		trapezoidal_func(2, htim, &htim5); //2= the joint3 timer
 8000ab4:	4a09      	ldr	r2, [pc, #36]	@ (8000adc <HAL_TIM_PWM_PulseFinishedCallback+0x98>)
 8000ab6:	6879      	ldr	r1, [r7, #4]
 8000ab8:	2002      	movs	r0, #2
 8000aba:	f7ff fdfd 	bl	80006b8 <trapezoidal_func>

	}
}
 8000abe:	bf00      	nop
 8000ac0:	3708      	adds	r7, #8
 8000ac2:	46bd      	mov	sp, r7
 8000ac4:	bd80      	pop	{r7, pc}
 8000ac6:	bf00      	nop
 8000ac8:	40010000 	.word	0x40010000
 8000acc:	20000058 	.word	0x20000058
 8000ad0:	200001f4 	.word	0x200001f4
 8000ad4:	200001ac 	.word	0x200001ac
 8000ad8:	40010400 	.word	0x40010400
 8000adc:	2000023c 	.word	0x2000023c

08000ae0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000ae0:	b580      	push	{r7, lr}
 8000ae2:	b084      	sub	sp, #16
 8000ae4:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000ae6:	f001 f98f 	bl	8001e08 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000aea:	f000 f929 	bl	8000d40 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000aee:	f7ff fd01 	bl	80004f4 <MX_GPIO_Init>
  MX_TIM3_Init();
 8000af2:	f000 fd13 	bl	800151c <MX_TIM3_Init>
  MX_TIM5_Init();
 8000af6:	f000 fdd9 	bl	80016ac <MX_TIM5_Init>
  MX_TIM1_Init();
 8000afa:	f000 fbeb 	bl	80012d4 <MX_TIM1_Init>
  MX_TIM2_Init();
 8000afe:	f000 fc8b 	bl	8001418 <MX_TIM2_Init>
  MX_TIM4_Init();
 8000b02:	f000 fd6f 	bl	80015e4 <MX_TIM4_Init>
  MX_TIM8_Init();
 8000b06:	f000 fe35 	bl	8001774 <MX_TIM8_Init>
  MX_TIM10_Init();
 8000b0a:	f000 fed5 	bl	80018b8 <MX_TIM10_Init>
  MX_TIM11_Init();
 8000b0e:	f000 ff21 	bl	8001954 <MX_TIM11_Init>
  /* USER CODE BEGIN 2 */

	/*IF YOU'RE NOT USING THE TRAPEZOIDAL PROFILE USE THE HAL_TIM_BASE_START_IT*/
	HAL_TIM_Base_Start(&htim4); //start timer 1st joint
 8000b12:	4870      	ldr	r0, [pc, #448]	@ (8000cd4 <main+0x1f4>)
 8000b14:	f002 fb24 	bl	8003160 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(&htim3); //start timer 2nd joint
 8000b18:	486f      	ldr	r0, [pc, #444]	@ (8000cd8 <main+0x1f8>)
 8000b1a:	f002 fb21 	bl	8003160 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(&htim5); //start timer 3rd joint
 8000b1e:	486f      	ldr	r0, [pc, #444]	@ (8000cdc <main+0x1fc>)
 8000b20:	f002 fb1e 	bl	8003160 <HAL_TIM_Base_Start>

	HAL_GPIO_WritePin(ENABLE_GPIO_Port, ENABLE_Pin, GPIO_PIN_RESET); //ENABLE stepper motors
 8000b24:	2200      	movs	r2, #0
 8000b26:	2120      	movs	r1, #32
 8000b28:	486d      	ldr	r0, [pc, #436]	@ (8000ce0 <main+0x200>)
 8000b2a:	f001 fca9 	bl	8002480 <HAL_GPIO_WritePin>

	/* stepper_init(obj, timer pwm, timer slave, resol, microstep, enable_port, direction_port */
	stepper_init(&stp1, &htim1, &htim4, 1.8, 4 * 4.27, DIRECTION1_GPIO_Port,
 8000b2e:	2301      	movs	r3, #1
 8000b30:	9301      	str	r3, [sp, #4]
 8000b32:	4b6c      	ldr	r3, [pc, #432]	@ (8000ce4 <main+0x204>)
 8000b34:	9300      	str	r3, [sp, #0]
 8000b36:	2311      	movs	r3, #17
 8000b38:	ed9f 0a6b 	vldr	s0, [pc, #428]	@ 8000ce8 <main+0x208>
 8000b3c:	4a65      	ldr	r2, [pc, #404]	@ (8000cd4 <main+0x1f4>)
 8000b3e:	496b      	ldr	r1, [pc, #428]	@ (8000cec <main+0x20c>)
 8000b40:	486b      	ldr	r0, [pc, #428]	@ (8000cf0 <main+0x210>)
 8000b42:	f000 f9e7 	bl	8000f14 <stepper_init>
	DIRECTION1_Pin);
	stepper_init(&stp2, &htim2, &htim3, 1.8, 4 * 6, DIRECTION2_GPIO_Port,
 8000b46:	2310      	movs	r3, #16
 8000b48:	9301      	str	r3, [sp, #4]
 8000b4a:	4b65      	ldr	r3, [pc, #404]	@ (8000ce0 <main+0x200>)
 8000b4c:	9300      	str	r3, [sp, #0]
 8000b4e:	2318      	movs	r3, #24
 8000b50:	ed9f 0a65 	vldr	s0, [pc, #404]	@ 8000ce8 <main+0x208>
 8000b54:	4a60      	ldr	r2, [pc, #384]	@ (8000cd8 <main+0x1f8>)
 8000b56:	4967      	ldr	r1, [pc, #412]	@ (8000cf4 <main+0x214>)
 8000b58:	4867      	ldr	r0, [pc, #412]	@ (8000cf8 <main+0x218>)
 8000b5a:	f000 f9db 	bl	8000f14 <stepper_init>
	DIRECTION2_Pin);
	stepper_init(&stp3, &htim2, &htim3, 1.8, 4 * 6, DIRECTION3_GPIO_Port,
 8000b5e:	2380      	movs	r3, #128	@ 0x80
 8000b60:	9301      	str	r3, [sp, #4]
 8000b62:	4b66      	ldr	r3, [pc, #408]	@ (8000cfc <main+0x21c>)
 8000b64:	9300      	str	r3, [sp, #0]
 8000b66:	2318      	movs	r3, #24
 8000b68:	ed9f 0a5f 	vldr	s0, [pc, #380]	@ 8000ce8 <main+0x208>
 8000b6c:	4a5a      	ldr	r2, [pc, #360]	@ (8000cd8 <main+0x1f8>)
 8000b6e:	4961      	ldr	r1, [pc, #388]	@ (8000cf4 <main+0x214>)
 8000b70:	4863      	ldr	r0, [pc, #396]	@ (8000d00 <main+0x220>)
 8000b72:	f000 f9cf 	bl	8000f14 <stepper_init>
	DIRECTION3_Pin);
	stepper_init(&stp4, &htim8, &htim5, 1.8, 8 * 4.9, DIRECTION4_GPIO_Port,
 8000b76:	2340      	movs	r3, #64	@ 0x40
 8000b78:	9301      	str	r3, [sp, #4]
 8000b7a:	4b60      	ldr	r3, [pc, #384]	@ (8000cfc <main+0x21c>)
 8000b7c:	9300      	str	r3, [sp, #0]
 8000b7e:	2327      	movs	r3, #39	@ 0x27
 8000b80:	ed9f 0a59 	vldr	s0, [pc, #356]	@ 8000ce8 <main+0x208>
 8000b84:	4a55      	ldr	r2, [pc, #340]	@ (8000cdc <main+0x1fc>)
 8000b86:	495f      	ldr	r1, [pc, #380]	@ (8000d04 <main+0x224>)
 8000b88:	485f      	ldr	r0, [pc, #380]	@ (8000d08 <main+0x228>)
 8000b8a:	f000 f9c3 	bl	8000f14 <stepper_init>
	DIRECTION4_Pin);

	//servo: default position 0° in the range {-90,+90}
	/*servo_init(obj, timer pwm)*/
	servo_init(&srv1, &htim10);
 8000b8e:	495f      	ldr	r1, [pc, #380]	@ (8000d0c <main+0x22c>)
 8000b90:	485f      	ldr	r0, [pc, #380]	@ (8000d10 <main+0x230>)
 8000b92:	f000 f949 	bl	8000e28 <servo_init>
	servo_init(&srv2, &htim11);
 8000b96:	495f      	ldr	r1, [pc, #380]	@ (8000d14 <main+0x234>)
 8000b98:	485f      	ldr	r0, [pc, #380]	@ (8000d18 <main+0x238>)
 8000b9a:	f000 f945 	bl	8000e28 <servo_init>



	for (int i = 0; i < 2; i++) { //trajectory repeated 2 times
 8000b9e:	2300      	movs	r3, #0
 8000ba0:	607b      	str	r3, [r7, #4]
 8000ba2:	e090      	b.n	8000cc6 <main+0x1e6>

		//1ST MOVEMENT
		stepper_move(&stp1, COUNTERCLOCKWISE, 36.5, 40);
 8000ba4:	eddf 0a5d 	vldr	s1, [pc, #372]	@ 8000d1c <main+0x23c>
 8000ba8:	ed9f 0a5d 	vldr	s0, [pc, #372]	@ 8000d20 <main+0x240>
 8000bac:	2100      	movs	r1, #0
 8000bae:	4850      	ldr	r0, [pc, #320]	@ (8000cf0 <main+0x210>)
 8000bb0:	f000 f9ea 	bl	8000f88 <stepper_move>

		stepper_move(&stp2, CLOCKWISE, 132.5, 10);
 8000bb4:	eef2 0a04 	vmov.f32	s1, #36	@ 0x41200000  10.0
 8000bb8:	ed9f 0a5a 	vldr	s0, [pc, #360]	@ 8000d24 <main+0x244>
 8000bbc:	2101      	movs	r1, #1
 8000bbe:	484e      	ldr	r0, [pc, #312]	@ (8000cf8 <main+0x218>)
 8000bc0:	f000 f9e2 	bl	8000f88 <stepper_move>
		stepper_move(&stp3, COUNTERCLOCKWISE, 132.5, 10);
 8000bc4:	eef2 0a04 	vmov.f32	s1, #36	@ 0x41200000  10.0
 8000bc8:	ed9f 0a56 	vldr	s0, [pc, #344]	@ 8000d24 <main+0x244>
 8000bcc:	2100      	movs	r1, #0
 8000bce:	484c      	ldr	r0, [pc, #304]	@ (8000d00 <main+0x220>)
 8000bd0:	f000 f9da 	bl	8000f88 <stepper_move>

		stepper_move(&stp4, CLOCKWISE, 40, 40);
 8000bd4:	eddf 0a51 	vldr	s1, [pc, #324]	@ 8000d1c <main+0x23c>
 8000bd8:	ed9f 0a50 	vldr	s0, [pc, #320]	@ 8000d1c <main+0x23c>
 8000bdc:	2101      	movs	r1, #1
 8000bde:	484a      	ldr	r0, [pc, #296]	@ (8000d08 <main+0x228>)
 8000be0:	f000 f9d2 	bl	8000f88 <stepper_move>

		servo_move(&srv2, -15);
 8000be4:	eeba 0a0e 	vmov.f32	s0, #174	@ 0xc1700000 -15.0
 8000be8:	484b      	ldr	r0, [pc, #300]	@ (8000d18 <main+0x238>)
 8000bea:	f000 f945 	bl	8000e78 <servo_move>
		HAL_GPIO_TogglePin(ENDEFF_en_GPIO_Port, ENDEFF_en_Pin);
 8000bee:	2104      	movs	r1, #4
 8000bf0:	483c      	ldr	r0, [pc, #240]	@ (8000ce4 <main+0x204>)
 8000bf2:	f001 fc5e 	bl	80024b2 <HAL_GPIO_TogglePin>

		HAL_Delay(3500);
 8000bf6:	f640 50ac 	movw	r0, #3500	@ 0xdac
 8000bfa:	f001 f977 	bl	8001eec <HAL_Delay>

		//2ND MOVEMENT

		stepper_move(&stp2, COUNTERCLOCKWISE, 75, 10);
 8000bfe:	eef2 0a04 	vmov.f32	s1, #36	@ 0x41200000  10.0
 8000c02:	ed9f 0a49 	vldr	s0, [pc, #292]	@ 8000d28 <main+0x248>
 8000c06:	2100      	movs	r1, #0
 8000c08:	483b      	ldr	r0, [pc, #236]	@ (8000cf8 <main+0x218>)
 8000c0a:	f000 f9bd 	bl	8000f88 <stepper_move>
		stepper_move(&stp3, CLOCKWISE, 75, 10);
 8000c0e:	eef2 0a04 	vmov.f32	s1, #36	@ 0x41200000  10.0
 8000c12:	ed9f 0a45 	vldr	s0, [pc, #276]	@ 8000d28 <main+0x248>
 8000c16:	2101      	movs	r1, #1
 8000c18:	4839      	ldr	r0, [pc, #228]	@ (8000d00 <main+0x220>)
 8000c1a:	f000 f9b5 	bl	8000f88 <stepper_move>

		HAL_Delay(2000);
 8000c1e:	f44f 60fa 	mov.w	r0, #2000	@ 0x7d0
 8000c22:	f001 f963 	bl	8001eec <HAL_Delay>

		//3RD MOVEMENT
		stepper_move(&stp1, CLOCKWISE, 70, 70);
 8000c26:	eddf 0a41 	vldr	s1, [pc, #260]	@ 8000d2c <main+0x24c>
 8000c2a:	ed9f 0a40 	vldr	s0, [pc, #256]	@ 8000d2c <main+0x24c>
 8000c2e:	2101      	movs	r1, #1
 8000c30:	482f      	ldr	r0, [pc, #188]	@ (8000cf0 <main+0x210>)
 8000c32:	f000 f9a9 	bl	8000f88 <stepper_move>
		HAL_Delay(3900);
 8000c36:	f640 703c 	movw	r0, #3900	@ 0xf3c
 8000c3a:	f001 f957 	bl	8001eec <HAL_Delay>

		//4TH MOVEMENT

		stepper_move(&stp2, CLOCKWISE, 45, 10);
 8000c3e:	eef2 0a04 	vmov.f32	s1, #36	@ 0x41200000  10.0
 8000c42:	ed9f 0a3b 	vldr	s0, [pc, #236]	@ 8000d30 <main+0x250>
 8000c46:	2101      	movs	r1, #1
 8000c48:	482b      	ldr	r0, [pc, #172]	@ (8000cf8 <main+0x218>)
 8000c4a:	f000 f99d 	bl	8000f88 <stepper_move>
		stepper_move(&stp3, COUNTERCLOCKWISE, 45, 10);
 8000c4e:	eef2 0a04 	vmov.f32	s1, #36	@ 0x41200000  10.0
 8000c52:	ed9f 0a37 	vldr	s0, [pc, #220]	@ 8000d30 <main+0x250>
 8000c56:	2100      	movs	r1, #0
 8000c58:	4829      	ldr	r0, [pc, #164]	@ (8000d00 <main+0x220>)
 8000c5a:	f000 f995 	bl	8000f88 <stepper_move>


		servo_move(&srv2, 0);
 8000c5e:	ed9f 0a35 	vldr	s0, [pc, #212]	@ 8000d34 <main+0x254>
 8000c62:	482d      	ldr	r0, [pc, #180]	@ (8000d18 <main+0x238>)
 8000c64:	f000 f908 	bl	8000e78 <servo_move>

		HAL_Delay(4000);
 8000c68:	f44f 607a 	mov.w	r0, #4000	@ 0xfa0
 8000c6c:	f001 f93e 	bl	8001eec <HAL_Delay>

		//BACK TO INITIAL POSITION

		HAL_GPIO_TogglePin(ENDEFF_en_GPIO_Port, ENDEFF_en_Pin);
 8000c70:	2104      	movs	r1, #4
 8000c72:	481c      	ldr	r0, [pc, #112]	@ (8000ce4 <main+0x204>)
 8000c74:	f001 fc1d 	bl	80024b2 <HAL_GPIO_TogglePin>

		stepper_move(&stp2, COUNTERCLOCKWISE, 104.5, 10);
 8000c78:	eef2 0a04 	vmov.f32	s1, #36	@ 0x41200000  10.0
 8000c7c:	ed9f 0a2e 	vldr	s0, [pc, #184]	@ 8000d38 <main+0x258>
 8000c80:	2100      	movs	r1, #0
 8000c82:	481d      	ldr	r0, [pc, #116]	@ (8000cf8 <main+0x218>)
 8000c84:	f000 f980 	bl	8000f88 <stepper_move>
		stepper_move(&stp3, CLOCKWISE, 104.5, 10);
 8000c88:	eef2 0a04 	vmov.f32	s1, #36	@ 0x41200000  10.0
 8000c8c:	ed9f 0a2a 	vldr	s0, [pc, #168]	@ 8000d38 <main+0x258>
 8000c90:	2101      	movs	r1, #1
 8000c92:	481b      	ldr	r0, [pc, #108]	@ (8000d00 <main+0x220>)
 8000c94:	f000 f978 	bl	8000f88 <stepper_move>

		stepper_move(&stp1, COUNTERCLOCKWISE, 33.5, 40);
 8000c98:	eddf 0a20 	vldr	s1, [pc, #128]	@ 8000d1c <main+0x23c>
 8000c9c:	ed9f 0a27 	vldr	s0, [pc, #156]	@ 8000d3c <main+0x25c>
 8000ca0:	2100      	movs	r1, #0
 8000ca2:	4813      	ldr	r0, [pc, #76]	@ (8000cf0 <main+0x210>)
 8000ca4:	f000 f970 	bl	8000f88 <stepper_move>

		stepper_move(&stp4, COUNTERCLOCKWISE, 40, 40);
 8000ca8:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 8000d1c <main+0x23c>
 8000cac:	ed9f 0a1b 	vldr	s0, [pc, #108]	@ 8000d1c <main+0x23c>
 8000cb0:	2100      	movs	r1, #0
 8000cb2:	4815      	ldr	r0, [pc, #84]	@ (8000d08 <main+0x228>)
 8000cb4:	f000 f968 	bl	8000f88 <stepper_move>

		HAL_Delay(3000);
 8000cb8:	f640 30b8 	movw	r0, #3000	@ 0xbb8
 8000cbc:	f001 f916 	bl	8001eec <HAL_Delay>
	for (int i = 0; i < 2; i++) { //trajectory repeated 2 times
 8000cc0:	687b      	ldr	r3, [r7, #4]
 8000cc2:	3301      	adds	r3, #1
 8000cc4:	607b      	str	r3, [r7, #4]
 8000cc6:	687b      	ldr	r3, [r7, #4]
 8000cc8:	2b01      	cmp	r3, #1
 8000cca:	f77f af6b 	ble.w	8000ba4 <main+0xc4>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */

	while (1) {
 8000cce:	bf00      	nop
 8000cd0:	e7fd      	b.n	8000cce <main+0x1ee>
 8000cd2:	bf00      	nop
 8000cd4:	200001f4 	.word	0x200001f4
 8000cd8:	200001ac 	.word	0x200001ac
 8000cdc:	2000023c 	.word	0x2000023c
 8000ce0:	40020800 	.word	0x40020800
 8000ce4:	40020400 	.word	0x40020400
 8000ce8:	3fe66666 	.word	0x3fe66666
 8000cec:	2000011c 	.word	0x2000011c
 8000cf0:	20000070 	.word	0x20000070
 8000cf4:	20000164 	.word	0x20000164
 8000cf8:	20000090 	.word	0x20000090
 8000cfc:	40020000 	.word	0x40020000
 8000d00:	200000b0 	.word	0x200000b0
 8000d04:	20000284 	.word	0x20000284
 8000d08:	200000d0 	.word	0x200000d0
 8000d0c:	200002cc 	.word	0x200002cc
 8000d10:	200000f0 	.word	0x200000f0
 8000d14:	20000314 	.word	0x20000314
 8000d18:	200000f8 	.word	0x200000f8
 8000d1c:	42200000 	.word	0x42200000
 8000d20:	42120000 	.word	0x42120000
 8000d24:	43048000 	.word	0x43048000
 8000d28:	42960000 	.word	0x42960000
 8000d2c:	428c0000 	.word	0x428c0000
 8000d30:	42340000 	.word	0x42340000
 8000d34:	00000000 	.word	0x00000000
 8000d38:	42d10000 	.word	0x42d10000
 8000d3c:	42060000 	.word	0x42060000

08000d40 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000d40:	b580      	push	{r7, lr}
 8000d42:	b094      	sub	sp, #80	@ 0x50
 8000d44:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000d46:	f107 031c 	add.w	r3, r7, #28
 8000d4a:	2234      	movs	r2, #52	@ 0x34
 8000d4c:	2100      	movs	r1, #0
 8000d4e:	4618      	mov	r0, r3
 8000d50:	f003 fccc 	bl	80046ec <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000d54:	f107 0308 	add.w	r3, r7, #8
 8000d58:	2200      	movs	r2, #0
 8000d5a:	601a      	str	r2, [r3, #0]
 8000d5c:	605a      	str	r2, [r3, #4]
 8000d5e:	609a      	str	r2, [r3, #8]
 8000d60:	60da      	str	r2, [r3, #12]
 8000d62:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000d64:	2300      	movs	r3, #0
 8000d66:	607b      	str	r3, [r7, #4]
 8000d68:	4b2a      	ldr	r3, [pc, #168]	@ (8000e14 <SystemClock_Config+0xd4>)
 8000d6a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000d6c:	4a29      	ldr	r2, [pc, #164]	@ (8000e14 <SystemClock_Config+0xd4>)
 8000d6e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000d72:	6413      	str	r3, [r2, #64]	@ 0x40
 8000d74:	4b27      	ldr	r3, [pc, #156]	@ (8000e14 <SystemClock_Config+0xd4>)
 8000d76:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000d78:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000d7c:	607b      	str	r3, [r7, #4]
 8000d7e:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8000d80:	2300      	movs	r3, #0
 8000d82:	603b      	str	r3, [r7, #0]
 8000d84:	4b24      	ldr	r3, [pc, #144]	@ (8000e18 <SystemClock_Config+0xd8>)
 8000d86:	681b      	ldr	r3, [r3, #0]
 8000d88:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8000d8c:	4a22      	ldr	r2, [pc, #136]	@ (8000e18 <SystemClock_Config+0xd8>)
 8000d8e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000d92:	6013      	str	r3, [r2, #0]
 8000d94:	4b20      	ldr	r3, [pc, #128]	@ (8000e18 <SystemClock_Config+0xd8>)
 8000d96:	681b      	ldr	r3, [r3, #0]
 8000d98:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000d9c:	603b      	str	r3, [r7, #0]
 8000d9e:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000da0:	2301      	movs	r3, #1
 8000da2:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000da4:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000da8:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000daa:	2302      	movs	r3, #2
 8000dac:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000dae:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8000db2:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = 4;
 8000db4:	2304      	movs	r3, #4
 8000db6:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 84;
 8000db8:	2354      	movs	r3, #84	@ 0x54
 8000dba:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000dbc:	2302      	movs	r3, #2
 8000dbe:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8000dc0:	2302      	movs	r3, #2
 8000dc2:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8000dc4:	2302      	movs	r3, #2
 8000dc6:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000dc8:	f107 031c 	add.w	r3, r7, #28
 8000dcc:	4618      	mov	r0, r3
 8000dce:	f001 fed9 	bl	8002b84 <HAL_RCC_OscConfig>
 8000dd2:	4603      	mov	r3, r0
 8000dd4:	2b00      	cmp	r3, #0
 8000dd6:	d001      	beq.n	8000ddc <SystemClock_Config+0x9c>
  {
    Error_Handler();
 8000dd8:	f000 f820 	bl	8000e1c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000ddc:	230f      	movs	r3, #15
 8000dde:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000de0:	2302      	movs	r3, #2
 8000de2:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000de4:	2300      	movs	r3, #0
 8000de6:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000de8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000dec:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000dee:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000df2:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000df4:	f107 0308 	add.w	r3, r7, #8
 8000df8:	2102      	movs	r1, #2
 8000dfa:	4618      	mov	r0, r3
 8000dfc:	f001 fb8c 	bl	8002518 <HAL_RCC_ClockConfig>
 8000e00:	4603      	mov	r3, r0
 8000e02:	2b00      	cmp	r3, #0
 8000e04:	d001      	beq.n	8000e0a <SystemClock_Config+0xca>
  {
    Error_Handler();
 8000e06:	f000 f809 	bl	8000e1c <Error_Handler>
  }
}
 8000e0a:	bf00      	nop
 8000e0c:	3750      	adds	r7, #80	@ 0x50
 8000e0e:	46bd      	mov	sp, r7
 8000e10:	bd80      	pop	{r7, pc}
 8000e12:	bf00      	nop
 8000e14:	40023800 	.word	0x40023800
 8000e18:	40007000 	.word	0x40007000

08000e1c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000e1c:	b480      	push	{r7}
 8000e1e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000e20:	b672      	cpsid	i
}
 8000e22:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8000e24:	bf00      	nop
 8000e26:	e7fd      	b.n	8000e24 <Error_Handler+0x8>

08000e28 <servo_init>:
 *  Created on: Mar 2, 2025
 *      Author: david
 */
#include <servo.h>

void servo_init(servo_obj *srv, TIM_HandleTypeDef *pwm_timer) {
 8000e28:	b580      	push	{r7, lr}
 8000e2a:	b082      	sub	sp, #8
 8000e2c:	af00      	add	r7, sp, #0
 8000e2e:	6078      	str	r0, [r7, #4]
 8000e30:	6039      	str	r1, [r7, #0]
	srv->pwm_timer = pwm_timer;
 8000e32:	687b      	ldr	r3, [r7, #4]
 8000e34:	683a      	ldr	r2, [r7, #0]
 8000e36:	601a      	str	r2, [r3, #0]
	srv->unit = (CCR_MAX - CCR_MIN) / (2 * ANGLE_MAX);
 8000e38:	687b      	ldr	r3, [r7, #4]
 8000e3a:	4a0e      	ldr	r2, [pc, #56]	@ (8000e74 <servo_init+0x4c>)
 8000e3c:	605a      	str	r2, [r3, #4]
	//pwm=50hz
	srv->pwm_timer->Instance->PSC = 27;
 8000e3e:	687b      	ldr	r3, [r7, #4]
 8000e40:	681b      	ldr	r3, [r3, #0]
 8000e42:	681b      	ldr	r3, [r3, #0]
 8000e44:	221b      	movs	r2, #27
 8000e46:	629a      	str	r2, [r3, #40]	@ 0x28
	srv->pwm_timer->Instance->ARR = 60000 - 1;
 8000e48:	687b      	ldr	r3, [r7, #4]
 8000e4a:	681b      	ldr	r3, [r3, #0]
 8000e4c:	681b      	ldr	r3, [r3, #0]
 8000e4e:	f64e 225f 	movw	r2, #59999	@ 0xea5f
 8000e52:	62da      	str	r2, [r3, #44]	@ 0x2c
	__HAL_TIM_SET_COMPARE(srv->pwm_timer, TIM_CHANNEL_1,
 8000e54:	687b      	ldr	r3, [r7, #4]
 8000e56:	681b      	ldr	r3, [r3, #0]
 8000e58:	681b      	ldr	r3, [r3, #0]
 8000e5a:	f241 1293 	movw	r2, #4499	@ 0x1193
 8000e5e:	635a      	str	r2, [r3, #52]	@ 0x34
			(int) ((CCR_MAX + CCR_MIN) / 2));
	HAL_TIM_PWM_Start(srv->pwm_timer, TIM_CHANNEL_1); //START PWM)
 8000e60:	687b      	ldr	r3, [r7, #4]
 8000e62:	681b      	ldr	r3, [r3, #0]
 8000e64:	2100      	movs	r1, #0
 8000e66:	4618      	mov	r0, r3
 8000e68:	f002 fa3c 	bl	80032e4 <HAL_TIM_PWM_Start>
}
 8000e6c:	bf00      	nop
 8000e6e:	3708      	adds	r7, #8
 8000e70:	46bd      	mov	sp, r7
 8000e72:	bd80      	pop	{r7, pc}
 8000e74:	42055555 	.word	0x42055555

08000e78 <servo_move>:


void servo_move(servo_obj *srv, float position) {
 8000e78:	b480      	push	{r7}
 8000e7a:	b085      	sub	sp, #20
 8000e7c:	af00      	add	r7, sp, #0
 8000e7e:	6078      	str	r0, [r7, #4]
 8000e80:	ed87 0a00 	vstr	s0, [r7]

	int ccr;
	//saturation
	if (position > ANGLE_MAX)
 8000e84:	edd7 7a00 	vldr	s15, [r7]
 8000e88:	ed9f 7a1e 	vldr	s14, [pc, #120]	@ 8000f04 <servo_move+0x8c>
 8000e8c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000e90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000e94:	dd01      	ble.n	8000e9a <servo_move+0x22>
		position = ANGLE_MAX; //max angle position available
 8000e96:	4b1c      	ldr	r3, [pc, #112]	@ (8000f08 <servo_move+0x90>)
 8000e98:	603b      	str	r3, [r7, #0]
	if (position < -ANGLE_MAX)
 8000e9a:	edd7 7a00 	vldr	s15, [r7]
 8000e9e:	ed9f 7a1b 	vldr	s14, [pc, #108]	@ 8000f0c <servo_move+0x94>
 8000ea2:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000ea6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000eaa:	d501      	bpl.n	8000eb0 <servo_move+0x38>
		position = -ANGLE_MAX; //min angle position available
 8000eac:	4b18      	ldr	r3, [pc, #96]	@ (8000f10 <servo_move+0x98>)
 8000eae:	603b      	str	r3, [r7, #0]

	//compute ccr value
	if (position != 0)
 8000eb0:	edd7 7a00 	vldr	s15, [r7]
 8000eb4:	eef5 7a40 	vcmp.f32	s15, #0.0
 8000eb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000ebc:	d00f      	beq.n	8000ede <servo_move+0x66>
		ccr = (int) ((CCR_MAX + CCR_MIN) / 2) + (int) (srv->unit * position);
 8000ebe:	687b      	ldr	r3, [r7, #4]
 8000ec0:	ed93 7a01 	vldr	s14, [r3, #4]
 8000ec4:	edd7 7a00 	vldr	s15, [r7]
 8000ec8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000ecc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000ed0:	ee17 3a90 	vmov	r3, s15
 8000ed4:	f503 538c 	add.w	r3, r3, #4480	@ 0x1180
 8000ed8:	3313      	adds	r3, #19
 8000eda:	60fb      	str	r3, [r7, #12]
 8000edc:	e002      	b.n	8000ee4 <servo_move+0x6c>

	else {  //position==0
		ccr = (int) ((CCR_MAX + CCR_MIN) / 2); /*0 deg */
 8000ede:	f241 1393 	movw	r3, #4499	@ 0x1193
 8000ee2:	60fb      	str	r3, [r7, #12]
	}
	__HAL_TIM_SET_COMPARE(srv->pwm_timer, TIM_CHANNEL_1, ccr);
 8000ee4:	687b      	ldr	r3, [r7, #4]
 8000ee6:	681b      	ldr	r3, [r3, #0]
 8000ee8:	681b      	ldr	r3, [r3, #0]
 8000eea:	68fa      	ldr	r2, [r7, #12]
 8000eec:	635a      	str	r2, [r3, #52]	@ 0x34
	srv->pwm_timer->Instance->EGR = TIM_EGR_UG; //reset timer
 8000eee:	687b      	ldr	r3, [r7, #4]
 8000ef0:	681b      	ldr	r3, [r3, #0]
 8000ef2:	681b      	ldr	r3, [r3, #0]
 8000ef4:	2201      	movs	r2, #1
 8000ef6:	615a      	str	r2, [r3, #20]

}
 8000ef8:	bf00      	nop
 8000efa:	3714      	adds	r7, #20
 8000efc:	46bd      	mov	sp, r7
 8000efe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f02:	4770      	bx	lr
 8000f04:	42b40000 	.word	0x42b40000
 8000f08:	42b40000 	.word	0x42b40000
 8000f0c:	c2b40000 	.word	0xc2b40000
 8000f10:	c2b40000 	.word	0xc2b40000

08000f14 <stepper_init>:

//stepper struct
void stepper_init(stepper_obj *stp, TIM_HandleTypeDef *pwm_timer,
		TIM_HandleTypeDef *position_timer, float stepper_resolution,
		uint16_t microstep, GPIO_TypeDef *direction_port,
		uint16_t direction_pin) {
 8000f14:	b480      	push	{r7}
 8000f16:	b087      	sub	sp, #28
 8000f18:	af00      	add	r7, sp, #0
 8000f1a:	6178      	str	r0, [r7, #20]
 8000f1c:	6139      	str	r1, [r7, #16]
 8000f1e:	60fa      	str	r2, [r7, #12]
 8000f20:	ed87 0a02 	vstr	s0, [r7, #8]
 8000f24:	80fb      	strh	r3, [r7, #6]

	stp->position_timer = position_timer;
 8000f26:	697b      	ldr	r3, [r7, #20]
 8000f28:	68fa      	ldr	r2, [r7, #12]
 8000f2a:	605a      	str	r2, [r3, #4]
	stp->pwm_timer = pwm_timer;
 8000f2c:	697b      	ldr	r3, [r7, #20]
 8000f2e:	693a      	ldr	r2, [r7, #16]
 8000f30:	601a      	str	r2, [r3, #0]

	stp->direction_port = direction_port;
 8000f32:	697b      	ldr	r3, [r7, #20]
 8000f34:	6a3a      	ldr	r2, [r7, #32]
 8000f36:	609a      	str	r2, [r3, #8]
	stp->direction_pin = direction_pin;
 8000f38:	697b      	ldr	r3, [r7, #20]
 8000f3a:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 8000f3c:	819a      	strh	r2, [r3, #12]

	stp->stepper_resolution = stepper_resolution;
 8000f3e:	697b      	ldr	r3, [r7, #20]
 8000f40:	68ba      	ldr	r2, [r7, #8]
 8000f42:	611a      	str	r2, [r3, #16]
	stp->microstep = microstep;
 8000f44:	697b      	ldr	r3, [r7, #20]
 8000f46:	88fa      	ldrh	r2, [r7, #6]
 8000f48:	831a      	strh	r2, [r3, #24]
	stp->step_per_rev = 360.0f / stepper_resolution; // 360°/resolution
 8000f4a:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 8000f84 <stepper_init+0x70>
 8000f4e:	ed97 7a02 	vldr	s14, [r7, #8]
 8000f52:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000f56:	697b      	ldr	r3, [r7, #20]
 8000f58:	edc3 7a05 	vstr	s15, [r3, #20]
	stp->step_scale = stp->step_per_rev * microstep;
 8000f5c:	697b      	ldr	r3, [r7, #20]
 8000f5e:	ed93 7a05 	vldr	s14, [r3, #20]
 8000f62:	88fb      	ldrh	r3, [r7, #6]
 8000f64:	ee07 3a90 	vmov	s15, r3
 8000f68:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000f6c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000f70:	697b      	ldr	r3, [r7, #20]
 8000f72:	edc3 7a07 	vstr	s15, [r3, #28]

}
 8000f76:	bf00      	nop
 8000f78:	371c      	adds	r7, #28
 8000f7a:	46bd      	mov	sp, r7
 8000f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f80:	4770      	bx	lr
 8000f82:	bf00      	nop
 8000f84:	43b40000 	.word	0x43b40000

08000f88 <stepper_move>:
static int flag_configured_timer2; //for the timer2 config

//float freq_des_steps; //DEBUG

void stepper_move(stepper_obj *stp, direction_str direction, float position,
		float freq_desired) {
 8000f88:	b580      	push	{r7, lr}
 8000f8a:	b088      	sub	sp, #32
 8000f8c:	af00      	add	r7, sp, #0
 8000f8e:	60f8      	str	r0, [r7, #12]
 8000f90:	460b      	mov	r3, r1
 8000f92:	ed87 0a01 	vstr	s0, [r7, #4]
 8000f96:	edc7 0a00 	vstr	s1, [r7]
 8000f9a:	72fb      	strb	r3, [r7, #11]

	int arr_des;
	float freq_des_steps;
	int i = 0;
 8000f9c:	2300      	movs	r3, #0
 8000f9e:	61fb      	str	r3, [r7, #28]
	int n_steps = stp->step_scale * position / 360.0f; //[n_steps]
 8000fa0:	68fb      	ldr	r3, [r7, #12]
 8000fa2:	ed93 7a07 	vldr	s14, [r3, #28]
 8000fa6:	edd7 7a01 	vldr	s15, [r7, #4]
 8000faa:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000fae:	eddf 6a6d 	vldr	s13, [pc, #436]	@ 8001164 <stepper_move+0x1dc>
 8000fb2:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000fb6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000fba:	ee17 3a90 	vmov	r3, s15
 8000fbe:	61bb      	str	r3, [r7, #24]

	freq_des_steps = stp->step_scale * freq_desired / 360.0f; //[n_steps/s]
 8000fc0:	68fb      	ldr	r3, [r7, #12]
 8000fc2:	ed93 7a07 	vldr	s14, [r3, #28]
 8000fc6:	edd7 7a00 	vldr	s15, [r7]
 8000fca:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000fce:	eddf 6a65 	vldr	s13, [pc, #404]	@ 8001164 <stepper_move+0x1dc>
 8000fd2:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000fd6:	edc7 7a05 	vstr	s15, [r7, #20]

	arr_des = (HAL_RCC_GetPCLK2Freq() * 2 / freq_des_steps)
 8000fda:	f001 fb8f 	bl	80026fc <HAL_RCC_GetPCLK2Freq>
 8000fde:	4603      	mov	r3, r0
 8000fe0:	005b      	lsls	r3, r3, #1
 8000fe2:	ee07 3a90 	vmov	s15, r3
 8000fe6:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8000fea:	edd7 7a05 	vldr	s15, [r7, #20]
 8000fee:	eec7 6a27 	vdiv.f32	s13, s14, s15
			/ (stp->pwm_timer->Instance->PSC + 1) - 1;
 8000ff2:	68fb      	ldr	r3, [r7, #12]
 8000ff4:	681b      	ldr	r3, [r3, #0]
 8000ff6:	681b      	ldr	r3, [r3, #0]
 8000ff8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000ffa:	3301      	adds	r3, #1
 8000ffc:	ee07 3a90 	vmov	s15, r3
 8001000:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8001004:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001008:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800100c:	ee77 7ac7 	vsub.f32	s15, s15, s14
	arr_des = (HAL_RCC_GetPCLK2Freq() * 2 / freq_des_steps)
 8001010:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001014:	ee17 3a90 	vmov	r3, s15
 8001018:	613b      	str	r3, [r7, #16]

	HAL_GPIO_WritePin(stp->direction_port, stp->direction_pin, direction); //DIRECTION
 800101a:	68fb      	ldr	r3, [r7, #12]
 800101c:	6898      	ldr	r0, [r3, #8]
 800101e:	68fb      	ldr	r3, [r7, #12]
 8001020:	899b      	ldrh	r3, [r3, #12]
 8001022:	7afa      	ldrb	r2, [r7, #11]
 8001024:	4619      	mov	r1, r3
 8001026:	f001 fa2b 	bl	8002480 <HAL_GPIO_WritePin>

	if (stp->pwm_timer->Instance != TIM2) {
 800102a:	68fb      	ldr	r3, [r7, #12]
 800102c:	681b      	ldr	r3, [r3, #0]
 800102e:	681b      	ldr	r3, [r3, #0]
 8001030:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001034:	d028      	beq.n	8001088 <stepper_move+0x100>

		//reset_timers(stp);

		__HAL_TIM_SET_AUTORELOAD(stp->position_timer,
 8001036:	68fb      	ldr	r3, [r7, #12]
 8001038:	681b      	ldr	r3, [r3, #0]
 800103a:	681b      	ldr	r3, [r3, #0]
 800103c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800103e:	3301      	adds	r3, #1
 8001040:	69ba      	ldr	r2, [r7, #24]
 8001042:	fb03 f202 	mul.w	r2, r3, r2
 8001046:	68fb      	ldr	r3, [r7, #12]
 8001048:	685b      	ldr	r3, [r3, #4]
 800104a:	681b      	ldr	r3, [r3, #0]
 800104c:	3a01      	subs	r2, #1
 800104e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001050:	68fb      	ldr	r3, [r7, #12]
 8001052:	681b      	ldr	r3, [r3, #0]
 8001054:	681b      	ldr	r3, [r3, #0]
 8001056:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001058:	3301      	adds	r3, #1
 800105a:	69ba      	ldr	r2, [r7, #24]
 800105c:	fb03 f202 	mul.w	r2, r3, r2
 8001060:	68fb      	ldr	r3, [r7, #12]
 8001062:	685b      	ldr	r3, [r3, #4]
 8001064:	3a01      	subs	r2, #1
 8001066:	60da      	str	r2, [r3, #12]
				(n_steps * (stp->pwm_timer->Instance->PSC + 1)) - 1);
		__HAL_TIM_SET_COMPARE(stp->pwm_timer, TIM_CHANNEL_1,
 8001068:	68fb      	ldr	r3, [r7, #12]
 800106a:	681b      	ldr	r3, [r3, #0]
 800106c:	681b      	ldr	r3, [r3, #0]
 800106e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8001070:	68fb      	ldr	r3, [r7, #12]
 8001072:	681b      	ldr	r3, [r3, #0]
 8001074:	681b      	ldr	r3, [r3, #0]
 8001076:	0852      	lsrs	r2, r2, #1
 8001078:	635a      	str	r2, [r3, #52]	@ 0x34
				__HAL_TIM_GET_AUTORELOAD(stp->pwm_timer)/2);

		HAL_TIM_PWM_Start_IT(stp->pwm_timer, TIM_CHANNEL_1); //START PWM
 800107a:	68fb      	ldr	r3, [r7, #12]
 800107c:	681b      	ldr	r3, [r3, #0]
 800107e:	2100      	movs	r1, #0
 8001080:	4618      	mov	r0, r3
 8001082:	f002 f9f7 	bl	8003474 <HAL_TIM_PWM_Start_IT>
 8001086:	e041      	b.n	800110c <stepper_move+0x184>

	} else { //set parameters for the timer2 separately cause it has 2 channel
		if (flag_configured_timer2 != 1) { //this cause the second stepper must be equal to the first one
 8001088:	4b37      	ldr	r3, [pc, #220]	@ (8001168 <stepper_move+0x1e0>)
 800108a:	681b      	ldr	r3, [r3, #0]
 800108c:	2b01      	cmp	r3, #1
 800108e:	d02b      	beq.n	80010e8 <stepper_move+0x160>

			//reset_timers(stp);
			__HAL_TIM_SET_AUTORELOAD(stp->position_timer,
 8001090:	68fb      	ldr	r3, [r7, #12]
 8001092:	681b      	ldr	r3, [r3, #0]
 8001094:	681b      	ldr	r3, [r3, #0]
 8001096:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001098:	3301      	adds	r3, #1
 800109a:	69ba      	ldr	r2, [r7, #24]
 800109c:	fb03 f202 	mul.w	r2, r3, r2
 80010a0:	68fb      	ldr	r3, [r7, #12]
 80010a2:	685b      	ldr	r3, [r3, #4]
 80010a4:	681b      	ldr	r3, [r3, #0]
 80010a6:	3a01      	subs	r2, #1
 80010a8:	62da      	str	r2, [r3, #44]	@ 0x2c
 80010aa:	68fb      	ldr	r3, [r7, #12]
 80010ac:	681b      	ldr	r3, [r3, #0]
 80010ae:	681b      	ldr	r3, [r3, #0]
 80010b0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80010b2:	3301      	adds	r3, #1
 80010b4:	69ba      	ldr	r2, [r7, #24]
 80010b6:	fb03 f202 	mul.w	r2, r3, r2
 80010ba:	68fb      	ldr	r3, [r7, #12]
 80010bc:	685b      	ldr	r3, [r3, #4]
 80010be:	3a01      	subs	r2, #1
 80010c0:	60da      	str	r2, [r3, #12]
					(n_steps * (stp->pwm_timer->Instance->PSC + 1)) - 1);
			__HAL_TIM_SET_COMPARE(stp->pwm_timer, TIM_CHANNEL_1,
 80010c2:	68fb      	ldr	r3, [r7, #12]
 80010c4:	681b      	ldr	r3, [r3, #0]
 80010c6:	681b      	ldr	r3, [r3, #0]
 80010c8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80010ca:	68fb      	ldr	r3, [r7, #12]
 80010cc:	681b      	ldr	r3, [r3, #0]
 80010ce:	681b      	ldr	r3, [r3, #0]
 80010d0:	0852      	lsrs	r2, r2, #1
 80010d2:	635a      	str	r2, [r3, #52]	@ 0x34
					__HAL_TIM_GET_AUTORELOAD(stp->pwm_timer)/2);

			__HAL_TIM_SET_COMPARE(stp->pwm_timer, TIM_CHANNEL_2,
 80010d4:	68fb      	ldr	r3, [r7, #12]
 80010d6:	681b      	ldr	r3, [r3, #0]
 80010d8:	681b      	ldr	r3, [r3, #0]
 80010da:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80010dc:	68fb      	ldr	r3, [r7, #12]
 80010de:	681b      	ldr	r3, [r3, #0]
 80010e0:	681b      	ldr	r3, [r3, #0]
 80010e2:	0852      	lsrs	r2, r2, #1
 80010e4:	639a      	str	r2, [r3, #56]	@ 0x38
 80010e6:	e00b      	b.n	8001100 <stepper_move+0x178>
					__HAL_TIM_GET_AUTORELOAD(stp->pwm_timer)/2);

		} else {
			HAL_TIM_PWM_Start_IT(stp->pwm_timer, TIM_CHANNEL_1); //START PWM
 80010e8:	68fb      	ldr	r3, [r7, #12]
 80010ea:	681b      	ldr	r3, [r3, #0]
 80010ec:	2100      	movs	r1, #0
 80010ee:	4618      	mov	r0, r3
 80010f0:	f002 f9c0 	bl	8003474 <HAL_TIM_PWM_Start_IT>
			HAL_TIM_PWM_Start_IT(stp->pwm_timer, TIM_CHANNEL_2); //START PWM)
 80010f4:	68fb      	ldr	r3, [r7, #12]
 80010f6:	681b      	ldr	r3, [r3, #0]
 80010f8:	2104      	movs	r1, #4
 80010fa:	4618      	mov	r0, r3
 80010fc:	f002 f9ba 	bl	8003474 <HAL_TIM_PWM_Start_IT>

		}
		flag_configured_timer2 ^= 1;
 8001100:	4b19      	ldr	r3, [pc, #100]	@ (8001168 <stepper_move+0x1e0>)
 8001102:	681b      	ldr	r3, [r3, #0]
 8001104:	f083 0301 	eor.w	r3, r3, #1
 8001108:	4a17      	ldr	r2, [pc, #92]	@ (8001168 <stepper_move+0x1e0>)
 800110a:	6013      	str	r3, [r2, #0]

	}
	n_steps = n_steps * (stp->pwm_timer->Instance->PSC + 1); //update the var and bring the value outside
 800110c:	68fb      	ldr	r3, [r7, #12]
 800110e:	681b      	ldr	r3, [r3, #0]
 8001110:	681b      	ldr	r3, [r3, #0]
 8001112:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001114:	3301      	adds	r3, #1
 8001116:	69ba      	ldr	r2, [r7, #24]
 8001118:	fb02 f303 	mul.w	r3, r2, r3
 800111c:	61bb      	str	r3, [r7, #24]

	if (stp->pwm_timer->Instance == TIM1) {
 800111e:	68fb      	ldr	r3, [r7, #12]
 8001120:	681b      	ldr	r3, [r3, #0]
 8001122:	681b      	ldr	r3, [r3, #0]
 8001124:	4a11      	ldr	r2, [pc, #68]	@ (800116c <stepper_move+0x1e4>)
 8001126:	4293      	cmp	r3, r2
 8001128:	d102      	bne.n	8001130 <stepper_move+0x1a8>
		i = 0; //timer joint 1
 800112a:	2300      	movs	r3, #0
 800112c:	61fb      	str	r3, [r7, #28]
 800112e:	e00a      	b.n	8001146 <stepper_move+0x1be>
	} else {
		if (stp->pwm_timer->Instance == TIM2) {
 8001130:	68fb      	ldr	r3, [r7, #12]
 8001132:	681b      	ldr	r3, [r3, #0]
 8001134:	681b      	ldr	r3, [r3, #0]
 8001136:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800113a:	d102      	bne.n	8001142 <stepper_move+0x1ba>
			i = 1; //timer joint 2
 800113c:	2301      	movs	r3, #1
 800113e:	61fb      	str	r3, [r7, #28]
 8001140:	e001      	b.n	8001146 <stepper_move+0x1be>
		} else
			i = 2; //timer joint 3
 8001142:	2302      	movs	r3, #2
 8001144:	61fb      	str	r3, [r7, #28]
	}
	n_steps_a[i] = n_steps;
 8001146:	490a      	ldr	r1, [pc, #40]	@ (8001170 <stepper_move+0x1e8>)
 8001148:	69fb      	ldr	r3, [r7, #28]
 800114a:	69ba      	ldr	r2, [r7, #24]
 800114c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	arr_des_a[i] = arr_des;
 8001150:	4908      	ldr	r1, [pc, #32]	@ (8001174 <stepper_move+0x1ec>)
 8001152:	69fb      	ldr	r3, [r7, #28]
 8001154:	693a      	ldr	r2, [r7, #16]
 8001156:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

}
 800115a:	bf00      	nop
 800115c:	3720      	adds	r7, #32
 800115e:	46bd      	mov	sp, r7
 8001160:	bd80      	pop	{r7, pc}
 8001162:	bf00      	nop
 8001164:	43b40000 	.word	0x43b40000
 8001168:	20000118 	.word	0x20000118
 800116c:	40010000 	.word	0x40010000
 8001170:	20000100 	.word	0x20000100
 8001174:	2000010c 	.word	0x2000010c

08001178 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001178:	b580      	push	{r7, lr}
 800117a:	b082      	sub	sp, #8
 800117c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800117e:	2300      	movs	r3, #0
 8001180:	607b      	str	r3, [r7, #4]
 8001182:	4b10      	ldr	r3, [pc, #64]	@ (80011c4 <HAL_MspInit+0x4c>)
 8001184:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001186:	4a0f      	ldr	r2, [pc, #60]	@ (80011c4 <HAL_MspInit+0x4c>)
 8001188:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800118c:	6453      	str	r3, [r2, #68]	@ 0x44
 800118e:	4b0d      	ldr	r3, [pc, #52]	@ (80011c4 <HAL_MspInit+0x4c>)
 8001190:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001192:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001196:	607b      	str	r3, [r7, #4]
 8001198:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800119a:	2300      	movs	r3, #0
 800119c:	603b      	str	r3, [r7, #0]
 800119e:	4b09      	ldr	r3, [pc, #36]	@ (80011c4 <HAL_MspInit+0x4c>)
 80011a0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80011a2:	4a08      	ldr	r2, [pc, #32]	@ (80011c4 <HAL_MspInit+0x4c>)
 80011a4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80011a8:	6413      	str	r3, [r2, #64]	@ 0x40
 80011aa:	4b06      	ldr	r3, [pc, #24]	@ (80011c4 <HAL_MspInit+0x4c>)
 80011ac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80011ae:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80011b2:	603b      	str	r3, [r7, #0]
 80011b4:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_1);
 80011b6:	2006      	movs	r0, #6
 80011b8:	f000 ff8c 	bl	80020d4 <HAL_NVIC_SetPriorityGrouping>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80011bc:	bf00      	nop
 80011be:	3708      	adds	r7, #8
 80011c0:	46bd      	mov	sp, r7
 80011c2:	bd80      	pop	{r7, pc}
 80011c4:	40023800 	.word	0x40023800

080011c8 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80011c8:	b480      	push	{r7}
 80011ca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80011cc:	bf00      	nop
 80011ce:	e7fd      	b.n	80011cc <NMI_Handler+0x4>

080011d0 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80011d0:	b480      	push	{r7}
 80011d2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80011d4:	bf00      	nop
 80011d6:	e7fd      	b.n	80011d4 <HardFault_Handler+0x4>

080011d8 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80011d8:	b480      	push	{r7}
 80011da:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80011dc:	bf00      	nop
 80011de:	e7fd      	b.n	80011dc <MemManage_Handler+0x4>

080011e0 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80011e0:	b480      	push	{r7}
 80011e2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80011e4:	bf00      	nop
 80011e6:	e7fd      	b.n	80011e4 <BusFault_Handler+0x4>

080011e8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80011e8:	b480      	push	{r7}
 80011ea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80011ec:	bf00      	nop
 80011ee:	e7fd      	b.n	80011ec <UsageFault_Handler+0x4>

080011f0 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80011f0:	b480      	push	{r7}
 80011f2:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80011f4:	bf00      	nop
 80011f6:	46bd      	mov	sp, r7
 80011f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011fc:	4770      	bx	lr

080011fe <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80011fe:	b480      	push	{r7}
 8001200:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001202:	bf00      	nop
 8001204:	46bd      	mov	sp, r7
 8001206:	f85d 7b04 	ldr.w	r7, [sp], #4
 800120a:	4770      	bx	lr

0800120c <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800120c:	b480      	push	{r7}
 800120e:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001210:	bf00      	nop
 8001212:	46bd      	mov	sp, r7
 8001214:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001218:	4770      	bx	lr

0800121a <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800121a:	b580      	push	{r7, lr}
 800121c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800121e:	f000 fe45 	bl	8001eac <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001222:	bf00      	nop
 8001224:	bd80      	pop	{r7, pc}
	...

08001228 <TIM1_CC_IRQHandler>:

/**
  * @brief This function handles TIM1 capture compare interrupt.
  */
void TIM1_CC_IRQHandler(void)
{
 8001228:	b580      	push	{r7, lr}
 800122a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_CC_IRQn 0 */

  /* USER CODE END TIM1_CC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 800122c:	4802      	ldr	r0, [pc, #8]	@ (8001238 <TIM1_CC_IRQHandler+0x10>)
 800122e:	f002 faf5 	bl	800381c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_CC_IRQn 1 */

  /* USER CODE END TIM1_CC_IRQn 1 */
}
 8001232:	bf00      	nop
 8001234:	bd80      	pop	{r7, pc}
 8001236:	bf00      	nop
 8001238:	2000011c 	.word	0x2000011c

0800123c <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 800123c:	b580      	push	{r7, lr}
 800123e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8001240:	4802      	ldr	r0, [pc, #8]	@ (800124c <TIM2_IRQHandler+0x10>)
 8001242:	f002 faeb 	bl	800381c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8001246:	bf00      	nop
 8001248:	bd80      	pop	{r7, pc}
 800124a:	bf00      	nop
 800124c:	20000164 	.word	0x20000164

08001250 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 8001250:	b580      	push	{r7, lr}
 8001252:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DISABLE_button_Pin);
 8001254:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 8001258:	f001 f946 	bl	80024e8 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 800125c:	bf00      	nop
 800125e:	bd80      	pop	{r7, pc}

08001260 <TIM8_BRK_TIM12_IRQHandler>:

/**
  * @brief This function handles TIM8 break interrupt and TIM12 global interrupt.
  */
void TIM8_BRK_TIM12_IRQHandler(void)
{
 8001260:	b580      	push	{r7, lr}
 8001262:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM8_BRK_TIM12_IRQn 0 */

  /* USER CODE END TIM8_BRK_TIM12_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 8001264:	4802      	ldr	r0, [pc, #8]	@ (8001270 <TIM8_BRK_TIM12_IRQHandler+0x10>)
 8001266:	f002 fad9 	bl	800381c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM8_BRK_TIM12_IRQn 1 */

  /* USER CODE END TIM8_BRK_TIM12_IRQn 1 */
}
 800126a:	bf00      	nop
 800126c:	bd80      	pop	{r7, pc}
 800126e:	bf00      	nop
 8001270:	20000284 	.word	0x20000284

08001274 <TIM8_UP_TIM13_IRQHandler>:

/**
  * @brief This function handles TIM8 update interrupt and TIM13 global interrupt.
  */
void TIM8_UP_TIM13_IRQHandler(void)
{
 8001274:	b580      	push	{r7, lr}
 8001276:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 0 */

  /* USER CODE END TIM8_UP_TIM13_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 8001278:	4802      	ldr	r0, [pc, #8]	@ (8001284 <TIM8_UP_TIM13_IRQHandler+0x10>)
 800127a:	f002 facf 	bl	800381c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 1 */

  /* USER CODE END TIM8_UP_TIM13_IRQn 1 */
}
 800127e:	bf00      	nop
 8001280:	bd80      	pop	{r7, pc}
 8001282:	bf00      	nop
 8001284:	20000284 	.word	0x20000284

08001288 <TIM8_TRG_COM_TIM14_IRQHandler>:

/**
  * @brief This function handles TIM8 trigger and commutation interrupts and TIM14 global interrupt.
  */
void TIM8_TRG_COM_TIM14_IRQHandler(void)
{
 8001288:	b580      	push	{r7, lr}
 800128a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM8_TRG_COM_TIM14_IRQn 0 */

  /* USER CODE END TIM8_TRG_COM_TIM14_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 800128c:	4802      	ldr	r0, [pc, #8]	@ (8001298 <TIM8_TRG_COM_TIM14_IRQHandler+0x10>)
 800128e:	f002 fac5 	bl	800381c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM8_TRG_COM_TIM14_IRQn 1 */

  /* USER CODE END TIM8_TRG_COM_TIM14_IRQn 1 */
}
 8001292:	bf00      	nop
 8001294:	bd80      	pop	{r7, pc}
 8001296:	bf00      	nop
 8001298:	20000284 	.word	0x20000284

0800129c <TIM8_CC_IRQHandler>:

/**
  * @brief This function handles TIM8 capture compare interrupt.
  */
void TIM8_CC_IRQHandler(void)
{
 800129c:	b580      	push	{r7, lr}
 800129e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM8_CC_IRQn 0 */

  /* USER CODE END TIM8_CC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 80012a0:	4802      	ldr	r0, [pc, #8]	@ (80012ac <TIM8_CC_IRQHandler+0x10>)
 80012a2:	f002 fabb 	bl	800381c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM8_CC_IRQn 1 */

  /* USER CODE END TIM8_CC_IRQn 1 */
}
 80012a6:	bf00      	nop
 80012a8:	bd80      	pop	{r7, pc}
 80012aa:	bf00      	nop
 80012ac:	20000284 	.word	0x20000284

080012b0 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80012b0:	b480      	push	{r7}
 80012b2:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80012b4:	4b06      	ldr	r3, [pc, #24]	@ (80012d0 <SystemInit+0x20>)
 80012b6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80012ba:	4a05      	ldr	r2, [pc, #20]	@ (80012d0 <SystemInit+0x20>)
 80012bc:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80012c0:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80012c4:	bf00      	nop
 80012c6:	46bd      	mov	sp, r7
 80012c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012cc:	4770      	bx	lr
 80012ce:	bf00      	nop
 80012d0:	e000ed00 	.word	0xe000ed00

080012d4 <MX_TIM1_Init>:
TIM_HandleTypeDef htim10;
TIM_HandleTypeDef htim11;

/* TIM1 init function */
void MX_TIM1_Init(void)
{
 80012d4:	b580      	push	{r7, lr}
 80012d6:	b096      	sub	sp, #88	@ 0x58
 80012d8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80012da:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 80012de:	2200      	movs	r2, #0
 80012e0:	601a      	str	r2, [r3, #0]
 80012e2:	605a      	str	r2, [r3, #4]
 80012e4:	609a      	str	r2, [r3, #8]
 80012e6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80012e8:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 80012ec:	2200      	movs	r2, #0
 80012ee:	601a      	str	r2, [r3, #0]
 80012f0:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80012f2:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80012f6:	2200      	movs	r2, #0
 80012f8:	601a      	str	r2, [r3, #0]
 80012fa:	605a      	str	r2, [r3, #4]
 80012fc:	609a      	str	r2, [r3, #8]
 80012fe:	60da      	str	r2, [r3, #12]
 8001300:	611a      	str	r2, [r3, #16]
 8001302:	615a      	str	r2, [r3, #20]
 8001304:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8001306:	1d3b      	adds	r3, r7, #4
 8001308:	2220      	movs	r2, #32
 800130a:	2100      	movs	r1, #0
 800130c:	4618      	mov	r0, r3
 800130e:	f003 f9ed 	bl	80046ec <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8001312:	4b3f      	ldr	r3, [pc, #252]	@ (8001410 <MX_TIM1_Init+0x13c>)
 8001314:	4a3f      	ldr	r2, [pc, #252]	@ (8001414 <MX_TIM1_Init+0x140>)
 8001316:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 4;
 8001318:	4b3d      	ldr	r3, [pc, #244]	@ (8001410 <MX_TIM1_Init+0x13c>)
 800131a:	2204      	movs	r2, #4
 800131c:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 800131e:	4b3c      	ldr	r3, [pc, #240]	@ (8001410 <MX_TIM1_Init+0x13c>)
 8001320:	2200      	movs	r2, #0
 8001322:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 8001324:	4b3a      	ldr	r3, [pc, #232]	@ (8001410 <MX_TIM1_Init+0x13c>)
 8001326:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800132a:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800132c:	4b38      	ldr	r3, [pc, #224]	@ (8001410 <MX_TIM1_Init+0x13c>)
 800132e:	2200      	movs	r2, #0
 8001330:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8001332:	4b37      	ldr	r3, [pc, #220]	@ (8001410 <MX_TIM1_Init+0x13c>)
 8001334:	2200      	movs	r2, #0
 8001336:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001338:	4b35      	ldr	r3, [pc, #212]	@ (8001410 <MX_TIM1_Init+0x13c>)
 800133a:	2280      	movs	r2, #128	@ 0x80
 800133c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800133e:	4834      	ldr	r0, [pc, #208]	@ (8001410 <MX_TIM1_Init+0x13c>)
 8001340:	f001 febe 	bl	80030c0 <HAL_TIM_Base_Init>
 8001344:	4603      	mov	r3, r0
 8001346:	2b00      	cmp	r3, #0
 8001348:	d001      	beq.n	800134e <MX_TIM1_Init+0x7a>
  {
    Error_Handler();
 800134a:	f7ff fd67 	bl	8000e1c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800134e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001352:	64bb      	str	r3, [r7, #72]	@ 0x48
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8001354:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 8001358:	4619      	mov	r1, r3
 800135a:	482d      	ldr	r0, [pc, #180]	@ (8001410 <MX_TIM1_Init+0x13c>)
 800135c:	f002 fc10 	bl	8003b80 <HAL_TIM_ConfigClockSource>
 8001360:	4603      	mov	r3, r0
 8001362:	2b00      	cmp	r3, #0
 8001364:	d001      	beq.n	800136a <MX_TIM1_Init+0x96>
  {
    Error_Handler();
 8001366:	f7ff fd59 	bl	8000e1c <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 800136a:	4829      	ldr	r0, [pc, #164]	@ (8001410 <MX_TIM1_Init+0x13c>)
 800136c:	f001 ff60 	bl	8003230 <HAL_TIM_PWM_Init>
 8001370:	4603      	mov	r3, r0
 8001372:	2b00      	cmp	r3, #0
 8001374:	d001      	beq.n	800137a <MX_TIM1_Init+0xa6>
  {
    Error_Handler();
 8001376:	f7ff fd51 	bl	8000e1c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 800137a:	2320      	movs	r3, #32
 800137c:	643b      	str	r3, [r7, #64]	@ 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_ENABLE;
 800137e:	2380      	movs	r3, #128	@ 0x80
 8001380:	647b      	str	r3, [r7, #68]	@ 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001382:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8001386:	4619      	mov	r1, r3
 8001388:	4821      	ldr	r0, [pc, #132]	@ (8001410 <MX_TIM1_Init+0x13c>)
 800138a:	f003 f8cd 	bl	8004528 <HAL_TIMEx_MasterConfigSynchronization>
 800138e:	4603      	mov	r3, r0
 8001390:	2b00      	cmp	r3, #0
 8001392:	d001      	beq.n	8001398 <MX_TIM1_Init+0xc4>
  {
    Error_Handler();
 8001394:	f7ff fd42 	bl	8000e1c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001398:	2360      	movs	r3, #96	@ 0x60
 800139a:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfigOC.Pulse = 32768;
 800139c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80013a0:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80013a2:	2300      	movs	r3, #0
 80013a4:	62fb      	str	r3, [r7, #44]	@ 0x2c
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 80013a6:	2300      	movs	r3, #0
 80013a8:	633b      	str	r3, [r7, #48]	@ 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 80013aa:	2304      	movs	r3, #4
 80013ac:	637b      	str	r3, [r7, #52]	@ 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 80013ae:	2300      	movs	r3, #0
 80013b0:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 80013b2:	2300      	movs	r3, #0
 80013b4:	63fb      	str	r3, [r7, #60]	@ 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80013b6:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80013ba:	2200      	movs	r2, #0
 80013bc:	4619      	mov	r1, r3
 80013be:	4814      	ldr	r0, [pc, #80]	@ (8001410 <MX_TIM1_Init+0x13c>)
 80013c0:	f002 fb1c 	bl	80039fc <HAL_TIM_PWM_ConfigChannel>
 80013c4:	4603      	mov	r3, r0
 80013c6:	2b00      	cmp	r3, #0
 80013c8:	d001      	beq.n	80013ce <MX_TIM1_Init+0xfa>
  {
    Error_Handler();
 80013ca:	f7ff fd27 	bl	8000e1c <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 80013ce:	2300      	movs	r3, #0
 80013d0:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 80013d2:	2300      	movs	r3, #0
 80013d4:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 80013d6:	2300      	movs	r3, #0
 80013d8:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 80013da:	2300      	movs	r3, #0
 80013dc:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 80013de:	2300      	movs	r3, #0
 80013e0:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 80013e2:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80013e6:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 80013e8:	2300      	movs	r3, #0
 80013ea:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 80013ec:	1d3b      	adds	r3, r7, #4
 80013ee:	4619      	mov	r1, r3
 80013f0:	4807      	ldr	r0, [pc, #28]	@ (8001410 <MX_TIM1_Init+0x13c>)
 80013f2:	f003 f915 	bl	8004620 <HAL_TIMEx_ConfigBreakDeadTime>
 80013f6:	4603      	mov	r3, r0
 80013f8:	2b00      	cmp	r3, #0
 80013fa:	d001      	beq.n	8001400 <MX_TIM1_Init+0x12c>
  {
    Error_Handler();
 80013fc:	f7ff fd0e 	bl	8000e1c <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8001400:	4803      	ldr	r0, [pc, #12]	@ (8001410 <MX_TIM1_Init+0x13c>)
 8001402:	f000 fbdd 	bl	8001bc0 <HAL_TIM_MspPostInit>

}
 8001406:	bf00      	nop
 8001408:	3758      	adds	r7, #88	@ 0x58
 800140a:	46bd      	mov	sp, r7
 800140c:	bd80      	pop	{r7, pc}
 800140e:	bf00      	nop
 8001410:	2000011c 	.word	0x2000011c
 8001414:	40010000 	.word	0x40010000

08001418 <MX_TIM2_Init>:
/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8001418:	b580      	push	{r7, lr}
 800141a:	b08e      	sub	sp, #56	@ 0x38
 800141c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800141e:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001422:	2200      	movs	r2, #0
 8001424:	601a      	str	r2, [r3, #0]
 8001426:	605a      	str	r2, [r3, #4]
 8001428:	609a      	str	r2, [r3, #8]
 800142a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800142c:	f107 0320 	add.w	r3, r7, #32
 8001430:	2200      	movs	r2, #0
 8001432:	601a      	str	r2, [r3, #0]
 8001434:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001436:	1d3b      	adds	r3, r7, #4
 8001438:	2200      	movs	r2, #0
 800143a:	601a      	str	r2, [r3, #0]
 800143c:	605a      	str	r2, [r3, #4]
 800143e:	609a      	str	r2, [r3, #8]
 8001440:	60da      	str	r2, [r3, #12]
 8001442:	611a      	str	r2, [r3, #16]
 8001444:	615a      	str	r2, [r3, #20]
 8001446:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8001448:	4b33      	ldr	r3, [pc, #204]	@ (8001518 <MX_TIM2_Init+0x100>)
 800144a:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800144e:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 4;
 8001450:	4b31      	ldr	r3, [pc, #196]	@ (8001518 <MX_TIM2_Init+0x100>)
 8001452:	2204      	movs	r2, #4
 8001454:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001456:	4b30      	ldr	r3, [pc, #192]	@ (8001518 <MX_TIM2_Init+0x100>)
 8001458:	2200      	movs	r2, #0
 800145a:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 65535;
 800145c:	4b2e      	ldr	r3, [pc, #184]	@ (8001518 <MX_TIM2_Init+0x100>)
 800145e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001462:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001464:	4b2c      	ldr	r3, [pc, #176]	@ (8001518 <MX_TIM2_Init+0x100>)
 8001466:	2200      	movs	r2, #0
 8001468:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800146a:	4b2b      	ldr	r3, [pc, #172]	@ (8001518 <MX_TIM2_Init+0x100>)
 800146c:	2280      	movs	r2, #128	@ 0x80
 800146e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001470:	4829      	ldr	r0, [pc, #164]	@ (8001518 <MX_TIM2_Init+0x100>)
 8001472:	f001 fe25 	bl	80030c0 <HAL_TIM_Base_Init>
 8001476:	4603      	mov	r3, r0
 8001478:	2b00      	cmp	r3, #0
 800147a:	d001      	beq.n	8001480 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 800147c:	f7ff fcce 	bl	8000e1c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001480:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001484:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001486:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800148a:	4619      	mov	r1, r3
 800148c:	4822      	ldr	r0, [pc, #136]	@ (8001518 <MX_TIM2_Init+0x100>)
 800148e:	f002 fb77 	bl	8003b80 <HAL_TIM_ConfigClockSource>
 8001492:	4603      	mov	r3, r0
 8001494:	2b00      	cmp	r3, #0
 8001496:	d001      	beq.n	800149c <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 8001498:	f7ff fcc0 	bl	8000e1c <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 800149c:	481e      	ldr	r0, [pc, #120]	@ (8001518 <MX_TIM2_Init+0x100>)
 800149e:	f001 fec7 	bl	8003230 <HAL_TIM_PWM_Init>
 80014a2:	4603      	mov	r3, r0
 80014a4:	2b00      	cmp	r3, #0
 80014a6:	d001      	beq.n	80014ac <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 80014a8:	f7ff fcb8 	bl	8000e1c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 80014ac:	2320      	movs	r3, #32
 80014ae:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_ENABLE;
 80014b0:	2380      	movs	r3, #128	@ 0x80
 80014b2:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80014b4:	f107 0320 	add.w	r3, r7, #32
 80014b8:	4619      	mov	r1, r3
 80014ba:	4817      	ldr	r0, [pc, #92]	@ (8001518 <MX_TIM2_Init+0x100>)
 80014bc:	f003 f834 	bl	8004528 <HAL_TIMEx_MasterConfigSynchronization>
 80014c0:	4603      	mov	r3, r0
 80014c2:	2b00      	cmp	r3, #0
 80014c4:	d001      	beq.n	80014ca <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 80014c6:	f7ff fca9 	bl	8000e1c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80014ca:	2360      	movs	r3, #96	@ 0x60
 80014cc:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 32768;
 80014ce:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80014d2:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80014d4:	2300      	movs	r3, #0
 80014d6:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 80014d8:	2304      	movs	r3, #4
 80014da:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80014dc:	1d3b      	adds	r3, r7, #4
 80014de:	2200      	movs	r2, #0
 80014e0:	4619      	mov	r1, r3
 80014e2:	480d      	ldr	r0, [pc, #52]	@ (8001518 <MX_TIM2_Init+0x100>)
 80014e4:	f002 fa8a 	bl	80039fc <HAL_TIM_PWM_ConfigChannel>
 80014e8:	4603      	mov	r3, r0
 80014ea:	2b00      	cmp	r3, #0
 80014ec:	d001      	beq.n	80014f2 <MX_TIM2_Init+0xda>
  {
    Error_Handler();
 80014ee:	f7ff fc95 	bl	8000e1c <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80014f2:	1d3b      	adds	r3, r7, #4
 80014f4:	2204      	movs	r2, #4
 80014f6:	4619      	mov	r1, r3
 80014f8:	4807      	ldr	r0, [pc, #28]	@ (8001518 <MX_TIM2_Init+0x100>)
 80014fa:	f002 fa7f 	bl	80039fc <HAL_TIM_PWM_ConfigChannel>
 80014fe:	4603      	mov	r3, r0
 8001500:	2b00      	cmp	r3, #0
 8001502:	d001      	beq.n	8001508 <MX_TIM2_Init+0xf0>
  {
    Error_Handler();
 8001504:	f7ff fc8a 	bl	8000e1c <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8001508:	4803      	ldr	r0, [pc, #12]	@ (8001518 <MX_TIM2_Init+0x100>)
 800150a:	f000 fb59 	bl	8001bc0 <HAL_TIM_MspPostInit>

}
 800150e:	bf00      	nop
 8001510:	3738      	adds	r7, #56	@ 0x38
 8001512:	46bd      	mov	sp, r7
 8001514:	bd80      	pop	{r7, pc}
 8001516:	bf00      	nop
 8001518:	20000164 	.word	0x20000164

0800151c <MX_TIM3_Init>:
/* TIM3 init function */
void MX_TIM3_Init(void)
{
 800151c:	b580      	push	{r7, lr}
 800151e:	b08c      	sub	sp, #48	@ 0x30
 8001520:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001522:	f107 0320 	add.w	r3, r7, #32
 8001526:	2200      	movs	r2, #0
 8001528:	601a      	str	r2, [r3, #0]
 800152a:	605a      	str	r2, [r3, #4]
 800152c:	609a      	str	r2, [r3, #8]
 800152e:	60da      	str	r2, [r3, #12]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001530:	f107 030c 	add.w	r3, r7, #12
 8001534:	2200      	movs	r2, #0
 8001536:	601a      	str	r2, [r3, #0]
 8001538:	605a      	str	r2, [r3, #4]
 800153a:	609a      	str	r2, [r3, #8]
 800153c:	60da      	str	r2, [r3, #12]
 800153e:	611a      	str	r2, [r3, #16]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001540:	1d3b      	adds	r3, r7, #4
 8001542:	2200      	movs	r2, #0
 8001544:	601a      	str	r2, [r3, #0]
 8001546:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8001548:	4b24      	ldr	r3, [pc, #144]	@ (80015dc <MX_TIM3_Init+0xc0>)
 800154a:	4a25      	ldr	r2, [pc, #148]	@ (80015e0 <MX_TIM3_Init+0xc4>)
 800154c:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 65535;
 800154e:	4b23      	ldr	r3, [pc, #140]	@ (80015dc <MX_TIM3_Init+0xc0>)
 8001550:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001554:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001556:	4b21      	ldr	r3, [pc, #132]	@ (80015dc <MX_TIM3_Init+0xc0>)
 8001558:	2200      	movs	r2, #0
 800155a:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 199;
 800155c:	4b1f      	ldr	r3, [pc, #124]	@ (80015dc <MX_TIM3_Init+0xc0>)
 800155e:	22c7      	movs	r2, #199	@ 0xc7
 8001560:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001562:	4b1e      	ldr	r3, [pc, #120]	@ (80015dc <MX_TIM3_Init+0xc0>)
 8001564:	2200      	movs	r2, #0
 8001566:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001568:	4b1c      	ldr	r3, [pc, #112]	@ (80015dc <MX_TIM3_Init+0xc0>)
 800156a:	2280      	movs	r2, #128	@ 0x80
 800156c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800156e:	481b      	ldr	r0, [pc, #108]	@ (80015dc <MX_TIM3_Init+0xc0>)
 8001570:	f001 fda6 	bl	80030c0 <HAL_TIM_Base_Init>
 8001574:	4603      	mov	r3, r0
 8001576:	2b00      	cmp	r3, #0
 8001578:	d001      	beq.n	800157e <MX_TIM3_Init+0x62>
  {
    Error_Handler();
 800157a:	f7ff fc4f 	bl	8000e1c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800157e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001582:	623b      	str	r3, [r7, #32]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001584:	f107 0320 	add.w	r3, r7, #32
 8001588:	4619      	mov	r1, r3
 800158a:	4814      	ldr	r0, [pc, #80]	@ (80015dc <MX_TIM3_Init+0xc0>)
 800158c:	f002 faf8 	bl	8003b80 <HAL_TIM_ConfigClockSource>
 8001590:	4603      	mov	r3, r0
 8001592:	2b00      	cmp	r3, #0
 8001594:	d001      	beq.n	800159a <MX_TIM3_Init+0x7e>
  {
    Error_Handler();
 8001596:	f7ff fc41 	bl	8000e1c <Error_Handler>
  }
  sSlaveConfig.SlaveMode = TIM_SLAVEMODE_TRIGGER;
 800159a:	2306      	movs	r3, #6
 800159c:	60fb      	str	r3, [r7, #12]
  sSlaveConfig.InputTrigger = TIM_TS_ITR1;
 800159e:	2310      	movs	r3, #16
 80015a0:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80015a2:	f107 030c 	add.w	r3, r7, #12
 80015a6:	4619      	mov	r1, r3
 80015a8:	480c      	ldr	r0, [pc, #48]	@ (80015dc <MX_TIM3_Init+0xc0>)
 80015aa:	f002 fbb0 	bl	8003d0e <HAL_TIM_SlaveConfigSynchro>
 80015ae:	4603      	mov	r3, r0
 80015b0:	2b00      	cmp	r3, #0
 80015b2:	d001      	beq.n	80015b8 <MX_TIM3_Init+0x9c>
  {
    Error_Handler();
 80015b4:	f7ff fc32 	bl	8000e1c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80015b8:	2300      	movs	r3, #0
 80015ba:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80015bc:	2300      	movs	r3, #0
 80015be:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80015c0:	1d3b      	adds	r3, r7, #4
 80015c2:	4619      	mov	r1, r3
 80015c4:	4805      	ldr	r0, [pc, #20]	@ (80015dc <MX_TIM3_Init+0xc0>)
 80015c6:	f002 ffaf 	bl	8004528 <HAL_TIMEx_MasterConfigSynchronization>
 80015ca:	4603      	mov	r3, r0
 80015cc:	2b00      	cmp	r3, #0
 80015ce:	d001      	beq.n	80015d4 <MX_TIM3_Init+0xb8>
  {
    Error_Handler();
 80015d0:	f7ff fc24 	bl	8000e1c <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 80015d4:	bf00      	nop
 80015d6:	3730      	adds	r7, #48	@ 0x30
 80015d8:	46bd      	mov	sp, r7
 80015da:	bd80      	pop	{r7, pc}
 80015dc:	200001ac 	.word	0x200001ac
 80015e0:	40000400 	.word	0x40000400

080015e4 <MX_TIM4_Init>:
/* TIM4 init function */
void MX_TIM4_Init(void)
{
 80015e4:	b580      	push	{r7, lr}
 80015e6:	b08c      	sub	sp, #48	@ 0x30
 80015e8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80015ea:	f107 0320 	add.w	r3, r7, #32
 80015ee:	2200      	movs	r2, #0
 80015f0:	601a      	str	r2, [r3, #0]
 80015f2:	605a      	str	r2, [r3, #4]
 80015f4:	609a      	str	r2, [r3, #8]
 80015f6:	60da      	str	r2, [r3, #12]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 80015f8:	f107 030c 	add.w	r3, r7, #12
 80015fc:	2200      	movs	r2, #0
 80015fe:	601a      	str	r2, [r3, #0]
 8001600:	605a      	str	r2, [r3, #4]
 8001602:	609a      	str	r2, [r3, #8]
 8001604:	60da      	str	r2, [r3, #12]
 8001606:	611a      	str	r2, [r3, #16]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001608:	1d3b      	adds	r3, r7, #4
 800160a:	2200      	movs	r2, #0
 800160c:	601a      	str	r2, [r3, #0]
 800160e:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8001610:	4b24      	ldr	r3, [pc, #144]	@ (80016a4 <MX_TIM4_Init+0xc0>)
 8001612:	4a25      	ldr	r2, [pc, #148]	@ (80016a8 <MX_TIM4_Init+0xc4>)
 8001614:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 65535;
 8001616:	4b23      	ldr	r3, [pc, #140]	@ (80016a4 <MX_TIM4_Init+0xc0>)
 8001618:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800161c:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 800161e:	4b21      	ldr	r3, [pc, #132]	@ (80016a4 <MX_TIM4_Init+0xc0>)
 8001620:	2200      	movs	r2, #0
 8001622:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 199;
 8001624:	4b1f      	ldr	r3, [pc, #124]	@ (80016a4 <MX_TIM4_Init+0xc0>)
 8001626:	22c7      	movs	r2, #199	@ 0xc7
 8001628:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800162a:	4b1e      	ldr	r3, [pc, #120]	@ (80016a4 <MX_TIM4_Init+0xc0>)
 800162c:	2200      	movs	r2, #0
 800162e:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001630:	4b1c      	ldr	r3, [pc, #112]	@ (80016a4 <MX_TIM4_Init+0xc0>)
 8001632:	2280      	movs	r2, #128	@ 0x80
 8001634:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8001636:	481b      	ldr	r0, [pc, #108]	@ (80016a4 <MX_TIM4_Init+0xc0>)
 8001638:	f001 fd42 	bl	80030c0 <HAL_TIM_Base_Init>
 800163c:	4603      	mov	r3, r0
 800163e:	2b00      	cmp	r3, #0
 8001640:	d001      	beq.n	8001646 <MX_TIM4_Init+0x62>
  {
    Error_Handler();
 8001642:	f7ff fbeb 	bl	8000e1c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001646:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800164a:	623b      	str	r3, [r7, #32]
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 800164c:	f107 0320 	add.w	r3, r7, #32
 8001650:	4619      	mov	r1, r3
 8001652:	4814      	ldr	r0, [pc, #80]	@ (80016a4 <MX_TIM4_Init+0xc0>)
 8001654:	f002 fa94 	bl	8003b80 <HAL_TIM_ConfigClockSource>
 8001658:	4603      	mov	r3, r0
 800165a:	2b00      	cmp	r3, #0
 800165c:	d001      	beq.n	8001662 <MX_TIM4_Init+0x7e>
  {
    Error_Handler();
 800165e:	f7ff fbdd 	bl	8000e1c <Error_Handler>
  }
  sSlaveConfig.SlaveMode = TIM_SLAVEMODE_TRIGGER;
 8001662:	2306      	movs	r3, #6
 8001664:	60fb      	str	r3, [r7, #12]
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8001666:	2300      	movs	r3, #0
 8001668:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_SlaveConfigSynchro(&htim4, &sSlaveConfig) != HAL_OK)
 800166a:	f107 030c 	add.w	r3, r7, #12
 800166e:	4619      	mov	r1, r3
 8001670:	480c      	ldr	r0, [pc, #48]	@ (80016a4 <MX_TIM4_Init+0xc0>)
 8001672:	f002 fb4c 	bl	8003d0e <HAL_TIM_SlaveConfigSynchro>
 8001676:	4603      	mov	r3, r0
 8001678:	2b00      	cmp	r3, #0
 800167a:	d001      	beq.n	8001680 <MX_TIM4_Init+0x9c>
  {
    Error_Handler();
 800167c:	f7ff fbce 	bl	8000e1c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001680:	2300      	movs	r3, #0
 8001682:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001684:	2300      	movs	r3, #0
 8001686:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8001688:	1d3b      	adds	r3, r7, #4
 800168a:	4619      	mov	r1, r3
 800168c:	4805      	ldr	r0, [pc, #20]	@ (80016a4 <MX_TIM4_Init+0xc0>)
 800168e:	f002 ff4b 	bl	8004528 <HAL_TIMEx_MasterConfigSynchronization>
 8001692:	4603      	mov	r3, r0
 8001694:	2b00      	cmp	r3, #0
 8001696:	d001      	beq.n	800169c <MX_TIM4_Init+0xb8>
  {
    Error_Handler();
 8001698:	f7ff fbc0 	bl	8000e1c <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 800169c:	bf00      	nop
 800169e:	3730      	adds	r7, #48	@ 0x30
 80016a0:	46bd      	mov	sp, r7
 80016a2:	bd80      	pop	{r7, pc}
 80016a4:	200001f4 	.word	0x200001f4
 80016a8:	40000800 	.word	0x40000800

080016ac <MX_TIM5_Init>:
/* TIM5 init function */
void MX_TIM5_Init(void)
{
 80016ac:	b580      	push	{r7, lr}
 80016ae:	b08c      	sub	sp, #48	@ 0x30
 80016b0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80016b2:	f107 0320 	add.w	r3, r7, #32
 80016b6:	2200      	movs	r2, #0
 80016b8:	601a      	str	r2, [r3, #0]
 80016ba:	605a      	str	r2, [r3, #4]
 80016bc:	609a      	str	r2, [r3, #8]
 80016be:	60da      	str	r2, [r3, #12]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 80016c0:	f107 030c 	add.w	r3, r7, #12
 80016c4:	2200      	movs	r2, #0
 80016c6:	601a      	str	r2, [r3, #0]
 80016c8:	605a      	str	r2, [r3, #4]
 80016ca:	609a      	str	r2, [r3, #8]
 80016cc:	60da      	str	r2, [r3, #12]
 80016ce:	611a      	str	r2, [r3, #16]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80016d0:	1d3b      	adds	r3, r7, #4
 80016d2:	2200      	movs	r2, #0
 80016d4:	601a      	str	r2, [r3, #0]
 80016d6:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 80016d8:	4b24      	ldr	r3, [pc, #144]	@ (800176c <MX_TIM5_Init+0xc0>)
 80016da:	4a25      	ldr	r2, [pc, #148]	@ (8001770 <MX_TIM5_Init+0xc4>)
 80016dc:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 65535;
 80016de:	4b23      	ldr	r3, [pc, #140]	@ (800176c <MX_TIM5_Init+0xc0>)
 80016e0:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80016e4:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 80016e6:	4b21      	ldr	r3, [pc, #132]	@ (800176c <MX_TIM5_Init+0xc0>)
 80016e8:	2200      	movs	r2, #0
 80016ea:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 199;
 80016ec:	4b1f      	ldr	r3, [pc, #124]	@ (800176c <MX_TIM5_Init+0xc0>)
 80016ee:	22c7      	movs	r2, #199	@ 0xc7
 80016f0:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80016f2:	4b1e      	ldr	r3, [pc, #120]	@ (800176c <MX_TIM5_Init+0xc0>)
 80016f4:	2200      	movs	r2, #0
 80016f6:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80016f8:	4b1c      	ldr	r3, [pc, #112]	@ (800176c <MX_TIM5_Init+0xc0>)
 80016fa:	2200      	movs	r2, #0
 80016fc:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 80016fe:	481b      	ldr	r0, [pc, #108]	@ (800176c <MX_TIM5_Init+0xc0>)
 8001700:	f001 fcde 	bl	80030c0 <HAL_TIM_Base_Init>
 8001704:	4603      	mov	r3, r0
 8001706:	2b00      	cmp	r3, #0
 8001708:	d001      	beq.n	800170e <MX_TIM5_Init+0x62>
  {
    Error_Handler();
 800170a:	f7ff fb87 	bl	8000e1c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800170e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001712:	623b      	str	r3, [r7, #32]
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 8001714:	f107 0320 	add.w	r3, r7, #32
 8001718:	4619      	mov	r1, r3
 800171a:	4814      	ldr	r0, [pc, #80]	@ (800176c <MX_TIM5_Init+0xc0>)
 800171c:	f002 fa30 	bl	8003b80 <HAL_TIM_ConfigClockSource>
 8001720:	4603      	mov	r3, r0
 8001722:	2b00      	cmp	r3, #0
 8001724:	d001      	beq.n	800172a <MX_TIM5_Init+0x7e>
  {
    Error_Handler();
 8001726:	f7ff fb79 	bl	8000e1c <Error_Handler>
  }
  sSlaveConfig.SlaveMode = TIM_SLAVEMODE_TRIGGER;
 800172a:	2306      	movs	r3, #6
 800172c:	60fb      	str	r3, [r7, #12]
  sSlaveConfig.InputTrigger = TIM_TS_ITR3;
 800172e:	2330      	movs	r3, #48	@ 0x30
 8001730:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_SlaveConfigSynchro(&htim5, &sSlaveConfig) != HAL_OK)
 8001732:	f107 030c 	add.w	r3, r7, #12
 8001736:	4619      	mov	r1, r3
 8001738:	480c      	ldr	r0, [pc, #48]	@ (800176c <MX_TIM5_Init+0xc0>)
 800173a:	f002 fae8 	bl	8003d0e <HAL_TIM_SlaveConfigSynchro>
 800173e:	4603      	mov	r3, r0
 8001740:	2b00      	cmp	r3, #0
 8001742:	d001      	beq.n	8001748 <MX_TIM5_Init+0x9c>
  {
    Error_Handler();
 8001744:	f7ff fb6a 	bl	8000e1c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001748:	2300      	movs	r3, #0
 800174a:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800174c:	2300      	movs	r3, #0
 800174e:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8001750:	1d3b      	adds	r3, r7, #4
 8001752:	4619      	mov	r1, r3
 8001754:	4805      	ldr	r0, [pc, #20]	@ (800176c <MX_TIM5_Init+0xc0>)
 8001756:	f002 fee7 	bl	8004528 <HAL_TIMEx_MasterConfigSynchronization>
 800175a:	4603      	mov	r3, r0
 800175c:	2b00      	cmp	r3, #0
 800175e:	d001      	beq.n	8001764 <MX_TIM5_Init+0xb8>
  {
    Error_Handler();
 8001760:	f7ff fb5c 	bl	8000e1c <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */

}
 8001764:	bf00      	nop
 8001766:	3730      	adds	r7, #48	@ 0x30
 8001768:	46bd      	mov	sp, r7
 800176a:	bd80      	pop	{r7, pc}
 800176c:	2000023c 	.word	0x2000023c
 8001770:	40000c00 	.word	0x40000c00

08001774 <MX_TIM8_Init>:
/* TIM8 init function */
void MX_TIM8_Init(void)
{
 8001774:	b580      	push	{r7, lr}
 8001776:	b096      	sub	sp, #88	@ 0x58
 8001778:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM8_Init 0 */

  /* USER CODE END TIM8_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800177a:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800177e:	2200      	movs	r2, #0
 8001780:	601a      	str	r2, [r3, #0]
 8001782:	605a      	str	r2, [r3, #4]
 8001784:	609a      	str	r2, [r3, #8]
 8001786:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001788:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 800178c:	2200      	movs	r2, #0
 800178e:	601a      	str	r2, [r3, #0]
 8001790:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001792:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001796:	2200      	movs	r2, #0
 8001798:	601a      	str	r2, [r3, #0]
 800179a:	605a      	str	r2, [r3, #4]
 800179c:	609a      	str	r2, [r3, #8]
 800179e:	60da      	str	r2, [r3, #12]
 80017a0:	611a      	str	r2, [r3, #16]
 80017a2:	615a      	str	r2, [r3, #20]
 80017a4:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 80017a6:	1d3b      	adds	r3, r7, #4
 80017a8:	2220      	movs	r2, #32
 80017aa:	2100      	movs	r1, #0
 80017ac:	4618      	mov	r0, r3
 80017ae:	f002 ff9d 	bl	80046ec <memset>

  /* USER CODE BEGIN TIM8_Init 1 */

  /* USER CODE END TIM8_Init 1 */
  htim8.Instance = TIM8;
 80017b2:	4b3f      	ldr	r3, [pc, #252]	@ (80018b0 <MX_TIM8_Init+0x13c>)
 80017b4:	4a3f      	ldr	r2, [pc, #252]	@ (80018b4 <MX_TIM8_Init+0x140>)
 80017b6:	601a      	str	r2, [r3, #0]
  htim8.Init.Prescaler = 4;
 80017b8:	4b3d      	ldr	r3, [pc, #244]	@ (80018b0 <MX_TIM8_Init+0x13c>)
 80017ba:	2204      	movs	r2, #4
 80017bc:	605a      	str	r2, [r3, #4]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 80017be:	4b3c      	ldr	r3, [pc, #240]	@ (80018b0 <MX_TIM8_Init+0x13c>)
 80017c0:	2200      	movs	r2, #0
 80017c2:	609a      	str	r2, [r3, #8]
  htim8.Init.Period = 65535;
 80017c4:	4b3a      	ldr	r3, [pc, #232]	@ (80018b0 <MX_TIM8_Init+0x13c>)
 80017c6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80017ca:	60da      	str	r2, [r3, #12]
  htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80017cc:	4b38      	ldr	r3, [pc, #224]	@ (80018b0 <MX_TIM8_Init+0x13c>)
 80017ce:	2200      	movs	r2, #0
 80017d0:	611a      	str	r2, [r3, #16]
  htim8.Init.RepetitionCounter = 0;
 80017d2:	4b37      	ldr	r3, [pc, #220]	@ (80018b0 <MX_TIM8_Init+0x13c>)
 80017d4:	2200      	movs	r2, #0
 80017d6:	615a      	str	r2, [r3, #20]
  htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80017d8:	4b35      	ldr	r3, [pc, #212]	@ (80018b0 <MX_TIM8_Init+0x13c>)
 80017da:	2280      	movs	r2, #128	@ 0x80
 80017dc:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 80017de:	4834      	ldr	r0, [pc, #208]	@ (80018b0 <MX_TIM8_Init+0x13c>)
 80017e0:	f001 fc6e 	bl	80030c0 <HAL_TIM_Base_Init>
 80017e4:	4603      	mov	r3, r0
 80017e6:	2b00      	cmp	r3, #0
 80017e8:	d001      	beq.n	80017ee <MX_TIM8_Init+0x7a>
  {
    Error_Handler();
 80017ea:	f7ff fb17 	bl	8000e1c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80017ee:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80017f2:	64bb      	str	r3, [r7, #72]	@ 0x48
  if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 80017f4:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 80017f8:	4619      	mov	r1, r3
 80017fa:	482d      	ldr	r0, [pc, #180]	@ (80018b0 <MX_TIM8_Init+0x13c>)
 80017fc:	f002 f9c0 	bl	8003b80 <HAL_TIM_ConfigClockSource>
 8001800:	4603      	mov	r3, r0
 8001802:	2b00      	cmp	r3, #0
 8001804:	d001      	beq.n	800180a <MX_TIM8_Init+0x96>
  {
    Error_Handler();
 8001806:	f7ff fb09 	bl	8000e1c <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim8) != HAL_OK)
 800180a:	4829      	ldr	r0, [pc, #164]	@ (80018b0 <MX_TIM8_Init+0x13c>)
 800180c:	f001 fd10 	bl	8003230 <HAL_TIM_PWM_Init>
 8001810:	4603      	mov	r3, r0
 8001812:	2b00      	cmp	r3, #0
 8001814:	d001      	beq.n	800181a <MX_TIM8_Init+0xa6>
  {
    Error_Handler();
 8001816:	f7ff fb01 	bl	8000e1c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 800181a:	2320      	movs	r3, #32
 800181c:	643b      	str	r3, [r7, #64]	@ 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_ENABLE;
 800181e:	2380      	movs	r3, #128	@ 0x80
 8001820:	647b      	str	r3, [r7, #68]	@ 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 8001822:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8001826:	4619      	mov	r1, r3
 8001828:	4821      	ldr	r0, [pc, #132]	@ (80018b0 <MX_TIM8_Init+0x13c>)
 800182a:	f002 fe7d 	bl	8004528 <HAL_TIMEx_MasterConfigSynchronization>
 800182e:	4603      	mov	r3, r0
 8001830:	2b00      	cmp	r3, #0
 8001832:	d001      	beq.n	8001838 <MX_TIM8_Init+0xc4>
  {
    Error_Handler();
 8001834:	f7ff faf2 	bl	8000e1c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001838:	2360      	movs	r3, #96	@ 0x60
 800183a:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfigOC.Pulse = 32768;
 800183c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8001840:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001842:	2300      	movs	r3, #0
 8001844:	62fb      	str	r3, [r7, #44]	@ 0x2c
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8001846:	2300      	movs	r3, #0
 8001848:	633b      	str	r3, [r7, #48]	@ 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 800184a:	2304      	movs	r3, #4
 800184c:	637b      	str	r3, [r7, #52]	@ 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 800184e:	2300      	movs	r3, #0
 8001850:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8001852:	2300      	movs	r3, #0
 8001854:	63fb      	str	r3, [r7, #60]	@ 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001856:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800185a:	2200      	movs	r2, #0
 800185c:	4619      	mov	r1, r3
 800185e:	4814      	ldr	r0, [pc, #80]	@ (80018b0 <MX_TIM8_Init+0x13c>)
 8001860:	f002 f8cc 	bl	80039fc <HAL_TIM_PWM_ConfigChannel>
 8001864:	4603      	mov	r3, r0
 8001866:	2b00      	cmp	r3, #0
 8001868:	d001      	beq.n	800186e <MX_TIM8_Init+0xfa>
  {
    Error_Handler();
 800186a:	f7ff fad7 	bl	8000e1c <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 800186e:	2300      	movs	r3, #0
 8001870:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8001872:	2300      	movs	r3, #0
 8001874:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8001876:	2300      	movs	r3, #0
 8001878:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 800187a:	2300      	movs	r3, #0
 800187c:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 800187e:	2300      	movs	r3, #0
 8001880:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8001882:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001886:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8001888:	2300      	movs	r3, #0
 800188a:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 800188c:	1d3b      	adds	r3, r7, #4
 800188e:	4619      	mov	r1, r3
 8001890:	4807      	ldr	r0, [pc, #28]	@ (80018b0 <MX_TIM8_Init+0x13c>)
 8001892:	f002 fec5 	bl	8004620 <HAL_TIMEx_ConfigBreakDeadTime>
 8001896:	4603      	mov	r3, r0
 8001898:	2b00      	cmp	r3, #0
 800189a:	d001      	beq.n	80018a0 <MX_TIM8_Init+0x12c>
  {
    Error_Handler();
 800189c:	f7ff fabe 	bl	8000e1c <Error_Handler>
  }
  /* USER CODE BEGIN TIM8_Init 2 */

  /* USER CODE END TIM8_Init 2 */
  HAL_TIM_MspPostInit(&htim8);
 80018a0:	4803      	ldr	r0, [pc, #12]	@ (80018b0 <MX_TIM8_Init+0x13c>)
 80018a2:	f000 f98d 	bl	8001bc0 <HAL_TIM_MspPostInit>

}
 80018a6:	bf00      	nop
 80018a8:	3758      	adds	r7, #88	@ 0x58
 80018aa:	46bd      	mov	sp, r7
 80018ac:	bd80      	pop	{r7, pc}
 80018ae:	bf00      	nop
 80018b0:	20000284 	.word	0x20000284
 80018b4:	40010400 	.word	0x40010400

080018b8 <MX_TIM10_Init>:
/* TIM10 init function */
void MX_TIM10_Init(void)
{
 80018b8:	b580      	push	{r7, lr}
 80018ba:	b088      	sub	sp, #32
 80018bc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM10_Init 0 */

  /* USER CODE END TIM10_Init 0 */

  TIM_OC_InitTypeDef sConfigOC = {0};
 80018be:	1d3b      	adds	r3, r7, #4
 80018c0:	2200      	movs	r2, #0
 80018c2:	601a      	str	r2, [r3, #0]
 80018c4:	605a      	str	r2, [r3, #4]
 80018c6:	609a      	str	r2, [r3, #8]
 80018c8:	60da      	str	r2, [r3, #12]
 80018ca:	611a      	str	r2, [r3, #16]
 80018cc:	615a      	str	r2, [r3, #20]
 80018ce:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM10_Init 1 */

  /* USER CODE END TIM10_Init 1 */
  htim10.Instance = TIM10;
 80018d0:	4b1e      	ldr	r3, [pc, #120]	@ (800194c <MX_TIM10_Init+0x94>)
 80018d2:	4a1f      	ldr	r2, [pc, #124]	@ (8001950 <MX_TIM10_Init+0x98>)
 80018d4:	601a      	str	r2, [r3, #0]
  htim10.Init.Prescaler = 0;
 80018d6:	4b1d      	ldr	r3, [pc, #116]	@ (800194c <MX_TIM10_Init+0x94>)
 80018d8:	2200      	movs	r2, #0
 80018da:	605a      	str	r2, [r3, #4]
  htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 80018dc:	4b1b      	ldr	r3, [pc, #108]	@ (800194c <MX_TIM10_Init+0x94>)
 80018de:	2200      	movs	r2, #0
 80018e0:	609a      	str	r2, [r3, #8]
  htim10.Init.Period = 65535;
 80018e2:	4b1a      	ldr	r3, [pc, #104]	@ (800194c <MX_TIM10_Init+0x94>)
 80018e4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80018e8:	60da      	str	r2, [r3, #12]
  htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80018ea:	4b18      	ldr	r3, [pc, #96]	@ (800194c <MX_TIM10_Init+0x94>)
 80018ec:	2200      	movs	r2, #0
 80018ee:	611a      	str	r2, [r3, #16]
  htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80018f0:	4b16      	ldr	r3, [pc, #88]	@ (800194c <MX_TIM10_Init+0x94>)
 80018f2:	2280      	movs	r2, #128	@ 0x80
 80018f4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 80018f6:	4815      	ldr	r0, [pc, #84]	@ (800194c <MX_TIM10_Init+0x94>)
 80018f8:	f001 fbe2 	bl	80030c0 <HAL_TIM_Base_Init>
 80018fc:	4603      	mov	r3, r0
 80018fe:	2b00      	cmp	r3, #0
 8001900:	d001      	beq.n	8001906 <MX_TIM10_Init+0x4e>
  {
    Error_Handler();
 8001902:	f7ff fa8b 	bl	8000e1c <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim10) != HAL_OK)
 8001906:	4811      	ldr	r0, [pc, #68]	@ (800194c <MX_TIM10_Init+0x94>)
 8001908:	f001 fc92 	bl	8003230 <HAL_TIM_PWM_Init>
 800190c:	4603      	mov	r3, r0
 800190e:	2b00      	cmp	r3, #0
 8001910:	d001      	beq.n	8001916 <MX_TIM10_Init+0x5e>
  {
    Error_Handler();
 8001912:	f7ff fa83 	bl	8000e1c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001916:	2360      	movs	r3, #96	@ 0x60
 8001918:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 1;
 800191a:	2301      	movs	r3, #1
 800191c:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800191e:	2300      	movs	r3, #0
 8001920:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 8001922:	2304      	movs	r3, #4
 8001924:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim10, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001926:	1d3b      	adds	r3, r7, #4
 8001928:	2200      	movs	r2, #0
 800192a:	4619      	mov	r1, r3
 800192c:	4807      	ldr	r0, [pc, #28]	@ (800194c <MX_TIM10_Init+0x94>)
 800192e:	f002 f865 	bl	80039fc <HAL_TIM_PWM_ConfigChannel>
 8001932:	4603      	mov	r3, r0
 8001934:	2b00      	cmp	r3, #0
 8001936:	d001      	beq.n	800193c <MX_TIM10_Init+0x84>
  {
    Error_Handler();
 8001938:	f7ff fa70 	bl	8000e1c <Error_Handler>
  }
  /* USER CODE BEGIN TIM10_Init 2 */

  /* USER CODE END TIM10_Init 2 */
  HAL_TIM_MspPostInit(&htim10);
 800193c:	4803      	ldr	r0, [pc, #12]	@ (800194c <MX_TIM10_Init+0x94>)
 800193e:	f000 f93f 	bl	8001bc0 <HAL_TIM_MspPostInit>

}
 8001942:	bf00      	nop
 8001944:	3720      	adds	r7, #32
 8001946:	46bd      	mov	sp, r7
 8001948:	bd80      	pop	{r7, pc}
 800194a:	bf00      	nop
 800194c:	200002cc 	.word	0x200002cc
 8001950:	40014400 	.word	0x40014400

08001954 <MX_TIM11_Init>:
/* TIM11 init function */
void MX_TIM11_Init(void)
{
 8001954:	b580      	push	{r7, lr}
 8001956:	b088      	sub	sp, #32
 8001958:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM11_Init 0 */

  /* USER CODE END TIM11_Init 0 */

  TIM_OC_InitTypeDef sConfigOC = {0};
 800195a:	1d3b      	adds	r3, r7, #4
 800195c:	2200      	movs	r2, #0
 800195e:	601a      	str	r2, [r3, #0]
 8001960:	605a      	str	r2, [r3, #4]
 8001962:	609a      	str	r2, [r3, #8]
 8001964:	60da      	str	r2, [r3, #12]
 8001966:	611a      	str	r2, [r3, #16]
 8001968:	615a      	str	r2, [r3, #20]
 800196a:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM11_Init 1 */

  /* USER CODE END TIM11_Init 1 */
  htim11.Instance = TIM11;
 800196c:	4b1e      	ldr	r3, [pc, #120]	@ (80019e8 <MX_TIM11_Init+0x94>)
 800196e:	4a1f      	ldr	r2, [pc, #124]	@ (80019ec <MX_TIM11_Init+0x98>)
 8001970:	601a      	str	r2, [r3, #0]
  htim11.Init.Prescaler = 0;
 8001972:	4b1d      	ldr	r3, [pc, #116]	@ (80019e8 <MX_TIM11_Init+0x94>)
 8001974:	2200      	movs	r2, #0
 8001976:	605a      	str	r2, [r3, #4]
  htim11.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001978:	4b1b      	ldr	r3, [pc, #108]	@ (80019e8 <MX_TIM11_Init+0x94>)
 800197a:	2200      	movs	r2, #0
 800197c:	609a      	str	r2, [r3, #8]
  htim11.Init.Period = 65535;
 800197e:	4b1a      	ldr	r3, [pc, #104]	@ (80019e8 <MX_TIM11_Init+0x94>)
 8001980:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001984:	60da      	str	r2, [r3, #12]
  htim11.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001986:	4b18      	ldr	r3, [pc, #96]	@ (80019e8 <MX_TIM11_Init+0x94>)
 8001988:	2200      	movs	r2, #0
 800198a:	611a      	str	r2, [r3, #16]
  htim11.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800198c:	4b16      	ldr	r3, [pc, #88]	@ (80019e8 <MX_TIM11_Init+0x94>)
 800198e:	2280      	movs	r2, #128	@ 0x80
 8001990:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim11) != HAL_OK)
 8001992:	4815      	ldr	r0, [pc, #84]	@ (80019e8 <MX_TIM11_Init+0x94>)
 8001994:	f001 fb94 	bl	80030c0 <HAL_TIM_Base_Init>
 8001998:	4603      	mov	r3, r0
 800199a:	2b00      	cmp	r3, #0
 800199c:	d001      	beq.n	80019a2 <MX_TIM11_Init+0x4e>
  {
    Error_Handler();
 800199e:	f7ff fa3d 	bl	8000e1c <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim11) != HAL_OK)
 80019a2:	4811      	ldr	r0, [pc, #68]	@ (80019e8 <MX_TIM11_Init+0x94>)
 80019a4:	f001 fc44 	bl	8003230 <HAL_TIM_PWM_Init>
 80019a8:	4603      	mov	r3, r0
 80019aa:	2b00      	cmp	r3, #0
 80019ac:	d001      	beq.n	80019b2 <MX_TIM11_Init+0x5e>
  {
    Error_Handler();
 80019ae:	f7ff fa35 	bl	8000e1c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80019b2:	2360      	movs	r3, #96	@ 0x60
 80019b4:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 1;
 80019b6:	2301      	movs	r3, #1
 80019b8:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80019ba:	2300      	movs	r3, #0
 80019bc:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 80019be:	2304      	movs	r3, #4
 80019c0:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim11, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80019c2:	1d3b      	adds	r3, r7, #4
 80019c4:	2200      	movs	r2, #0
 80019c6:	4619      	mov	r1, r3
 80019c8:	4807      	ldr	r0, [pc, #28]	@ (80019e8 <MX_TIM11_Init+0x94>)
 80019ca:	f002 f817 	bl	80039fc <HAL_TIM_PWM_ConfigChannel>
 80019ce:	4603      	mov	r3, r0
 80019d0:	2b00      	cmp	r3, #0
 80019d2:	d001      	beq.n	80019d8 <MX_TIM11_Init+0x84>
  {
    Error_Handler();
 80019d4:	f7ff fa22 	bl	8000e1c <Error_Handler>
  }
  /* USER CODE BEGIN TIM11_Init 2 */

  /* USER CODE END TIM11_Init 2 */
  HAL_TIM_MspPostInit(&htim11);
 80019d8:	4803      	ldr	r0, [pc, #12]	@ (80019e8 <MX_TIM11_Init+0x94>)
 80019da:	f000 f8f1 	bl	8001bc0 <HAL_TIM_MspPostInit>

}
 80019de:	bf00      	nop
 80019e0:	3720      	adds	r7, #32
 80019e2:	46bd      	mov	sp, r7
 80019e4:	bd80      	pop	{r7, pc}
 80019e6:	bf00      	nop
 80019e8:	20000314 	.word	0x20000314
 80019ec:	40014800 	.word	0x40014800

080019f0 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 80019f0:	b580      	push	{r7, lr}
 80019f2:	b08a      	sub	sp, #40	@ 0x28
 80019f4:	af00      	add	r7, sp, #0
 80019f6:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM1)
 80019f8:	687b      	ldr	r3, [r7, #4]
 80019fa:	681b      	ldr	r3, [r3, #0]
 80019fc:	4a68      	ldr	r2, [pc, #416]	@ (8001ba0 <HAL_TIM_Base_MspInit+0x1b0>)
 80019fe:	4293      	cmp	r3, r2
 8001a00:	d116      	bne.n	8001a30 <HAL_TIM_Base_MspInit+0x40>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* TIM1 clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001a02:	2300      	movs	r3, #0
 8001a04:	627b      	str	r3, [r7, #36]	@ 0x24
 8001a06:	4b67      	ldr	r3, [pc, #412]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001a08:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001a0a:	4a66      	ldr	r2, [pc, #408]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001a0c:	f043 0301 	orr.w	r3, r3, #1
 8001a10:	6453      	str	r3, [r2, #68]	@ 0x44
 8001a12:	4b64      	ldr	r3, [pc, #400]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001a14:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001a16:	f003 0301 	and.w	r3, r3, #1
 8001a1a:	627b      	str	r3, [r7, #36]	@ 0x24
 8001a1c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24

    /* TIM1 interrupt Init */
    HAL_NVIC_SetPriority(TIM1_CC_IRQn, 1, 0);
 8001a1e:	2200      	movs	r2, #0
 8001a20:	2101      	movs	r1, #1
 8001a22:	201b      	movs	r0, #27
 8001a24:	f000 fb61 	bl	80020ea <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_CC_IRQn);
 8001a28:	201b      	movs	r0, #27
 8001a2a:	f000 fb7a 	bl	8002122 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_TIM11_CLK_ENABLE();
  /* USER CODE BEGIN TIM11_MspInit 1 */

  /* USER CODE END TIM11_MspInit 1 */
  }
}
 8001a2e:	e0b2      	b.n	8001b96 <HAL_TIM_Base_MspInit+0x1a6>
  else if(tim_baseHandle->Instance==TIM2)
 8001a30:	687b      	ldr	r3, [r7, #4]
 8001a32:	681b      	ldr	r3, [r3, #0]
 8001a34:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001a38:	d116      	bne.n	8001a68 <HAL_TIM_Base_MspInit+0x78>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001a3a:	2300      	movs	r3, #0
 8001a3c:	623b      	str	r3, [r7, #32]
 8001a3e:	4b59      	ldr	r3, [pc, #356]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001a40:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a42:	4a58      	ldr	r2, [pc, #352]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001a44:	f043 0301 	orr.w	r3, r3, #1
 8001a48:	6413      	str	r3, [r2, #64]	@ 0x40
 8001a4a:	4b56      	ldr	r3, [pc, #344]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001a4c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a4e:	f003 0301 	and.w	r3, r3, #1
 8001a52:	623b      	str	r3, [r7, #32]
 8001a54:	6a3b      	ldr	r3, [r7, #32]
    HAL_NVIC_SetPriority(TIM2_IRQn, 1, 0);
 8001a56:	2200      	movs	r2, #0
 8001a58:	2101      	movs	r1, #1
 8001a5a:	201c      	movs	r0, #28
 8001a5c:	f000 fb45 	bl	80020ea <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001a60:	201c      	movs	r0, #28
 8001a62:	f000 fb5e 	bl	8002122 <HAL_NVIC_EnableIRQ>
}
 8001a66:	e096      	b.n	8001b96 <HAL_TIM_Base_MspInit+0x1a6>
  else if(tim_baseHandle->Instance==TIM3)
 8001a68:	687b      	ldr	r3, [r7, #4]
 8001a6a:	681b      	ldr	r3, [r3, #0]
 8001a6c:	4a4e      	ldr	r2, [pc, #312]	@ (8001ba8 <HAL_TIM_Base_MspInit+0x1b8>)
 8001a6e:	4293      	cmp	r3, r2
 8001a70:	d10e      	bne.n	8001a90 <HAL_TIM_Base_MspInit+0xa0>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001a72:	2300      	movs	r3, #0
 8001a74:	61fb      	str	r3, [r7, #28]
 8001a76:	4b4b      	ldr	r3, [pc, #300]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001a78:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a7a:	4a4a      	ldr	r2, [pc, #296]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001a7c:	f043 0302 	orr.w	r3, r3, #2
 8001a80:	6413      	str	r3, [r2, #64]	@ 0x40
 8001a82:	4b48      	ldr	r3, [pc, #288]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001a84:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a86:	f003 0302 	and.w	r3, r3, #2
 8001a8a:	61fb      	str	r3, [r7, #28]
 8001a8c:	69fb      	ldr	r3, [r7, #28]
}
 8001a8e:	e082      	b.n	8001b96 <HAL_TIM_Base_MspInit+0x1a6>
  else if(tim_baseHandle->Instance==TIM4)
 8001a90:	687b      	ldr	r3, [r7, #4]
 8001a92:	681b      	ldr	r3, [r3, #0]
 8001a94:	4a45      	ldr	r2, [pc, #276]	@ (8001bac <HAL_TIM_Base_MspInit+0x1bc>)
 8001a96:	4293      	cmp	r3, r2
 8001a98:	d10e      	bne.n	8001ab8 <HAL_TIM_Base_MspInit+0xc8>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8001a9a:	2300      	movs	r3, #0
 8001a9c:	61bb      	str	r3, [r7, #24]
 8001a9e:	4b41      	ldr	r3, [pc, #260]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001aa0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001aa2:	4a40      	ldr	r2, [pc, #256]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001aa4:	f043 0304 	orr.w	r3, r3, #4
 8001aa8:	6413      	str	r3, [r2, #64]	@ 0x40
 8001aaa:	4b3e      	ldr	r3, [pc, #248]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001aac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001aae:	f003 0304 	and.w	r3, r3, #4
 8001ab2:	61bb      	str	r3, [r7, #24]
 8001ab4:	69bb      	ldr	r3, [r7, #24]
}
 8001ab6:	e06e      	b.n	8001b96 <HAL_TIM_Base_MspInit+0x1a6>
  else if(tim_baseHandle->Instance==TIM5)
 8001ab8:	687b      	ldr	r3, [r7, #4]
 8001aba:	681b      	ldr	r3, [r3, #0]
 8001abc:	4a3c      	ldr	r2, [pc, #240]	@ (8001bb0 <HAL_TIM_Base_MspInit+0x1c0>)
 8001abe:	4293      	cmp	r3, r2
 8001ac0:	d10e      	bne.n	8001ae0 <HAL_TIM_Base_MspInit+0xf0>
    __HAL_RCC_TIM5_CLK_ENABLE();
 8001ac2:	2300      	movs	r3, #0
 8001ac4:	617b      	str	r3, [r7, #20]
 8001ac6:	4b37      	ldr	r3, [pc, #220]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001ac8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001aca:	4a36      	ldr	r2, [pc, #216]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001acc:	f043 0308 	orr.w	r3, r3, #8
 8001ad0:	6413      	str	r3, [r2, #64]	@ 0x40
 8001ad2:	4b34      	ldr	r3, [pc, #208]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001ad4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ad6:	f003 0308 	and.w	r3, r3, #8
 8001ada:	617b      	str	r3, [r7, #20]
 8001adc:	697b      	ldr	r3, [r7, #20]
}
 8001ade:	e05a      	b.n	8001b96 <HAL_TIM_Base_MspInit+0x1a6>
  else if(tim_baseHandle->Instance==TIM8)
 8001ae0:	687b      	ldr	r3, [r7, #4]
 8001ae2:	681b      	ldr	r3, [r3, #0]
 8001ae4:	4a33      	ldr	r2, [pc, #204]	@ (8001bb4 <HAL_TIM_Base_MspInit+0x1c4>)
 8001ae6:	4293      	cmp	r3, r2
 8001ae8:	d12e      	bne.n	8001b48 <HAL_TIM_Base_MspInit+0x158>
    __HAL_RCC_TIM8_CLK_ENABLE();
 8001aea:	2300      	movs	r3, #0
 8001aec:	613b      	str	r3, [r7, #16]
 8001aee:	4b2d      	ldr	r3, [pc, #180]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001af0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001af2:	4a2c      	ldr	r2, [pc, #176]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001af4:	f043 0302 	orr.w	r3, r3, #2
 8001af8:	6453      	str	r3, [r2, #68]	@ 0x44
 8001afa:	4b2a      	ldr	r3, [pc, #168]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001afc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001afe:	f003 0302 	and.w	r3, r3, #2
 8001b02:	613b      	str	r3, [r7, #16]
 8001b04:	693b      	ldr	r3, [r7, #16]
    HAL_NVIC_SetPriority(TIM8_BRK_TIM12_IRQn, 1, 0);
 8001b06:	2200      	movs	r2, #0
 8001b08:	2101      	movs	r1, #1
 8001b0a:	202b      	movs	r0, #43	@ 0x2b
 8001b0c:	f000 faed 	bl	80020ea <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM8_BRK_TIM12_IRQn);
 8001b10:	202b      	movs	r0, #43	@ 0x2b
 8001b12:	f000 fb06 	bl	8002122 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(TIM8_UP_TIM13_IRQn, 1, 0);
 8001b16:	2200      	movs	r2, #0
 8001b18:	2101      	movs	r1, #1
 8001b1a:	202c      	movs	r0, #44	@ 0x2c
 8001b1c:	f000 fae5 	bl	80020ea <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 8001b20:	202c      	movs	r0, #44	@ 0x2c
 8001b22:	f000 fafe 	bl	8002122 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(TIM8_TRG_COM_TIM14_IRQn, 1, 0);
 8001b26:	2200      	movs	r2, #0
 8001b28:	2101      	movs	r1, #1
 8001b2a:	202d      	movs	r0, #45	@ 0x2d
 8001b2c:	f000 fadd 	bl	80020ea <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM8_TRG_COM_TIM14_IRQn);
 8001b30:	202d      	movs	r0, #45	@ 0x2d
 8001b32:	f000 faf6 	bl	8002122 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(TIM8_CC_IRQn, 1, 0);
 8001b36:	2200      	movs	r2, #0
 8001b38:	2101      	movs	r1, #1
 8001b3a:	202e      	movs	r0, #46	@ 0x2e
 8001b3c:	f000 fad5 	bl	80020ea <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM8_CC_IRQn);
 8001b40:	202e      	movs	r0, #46	@ 0x2e
 8001b42:	f000 faee 	bl	8002122 <HAL_NVIC_EnableIRQ>
}
 8001b46:	e026      	b.n	8001b96 <HAL_TIM_Base_MspInit+0x1a6>
  else if(tim_baseHandle->Instance==TIM10)
 8001b48:	687b      	ldr	r3, [r7, #4]
 8001b4a:	681b      	ldr	r3, [r3, #0]
 8001b4c:	4a1a      	ldr	r2, [pc, #104]	@ (8001bb8 <HAL_TIM_Base_MspInit+0x1c8>)
 8001b4e:	4293      	cmp	r3, r2
 8001b50:	d10e      	bne.n	8001b70 <HAL_TIM_Base_MspInit+0x180>
    __HAL_RCC_TIM10_CLK_ENABLE();
 8001b52:	2300      	movs	r3, #0
 8001b54:	60fb      	str	r3, [r7, #12]
 8001b56:	4b13      	ldr	r3, [pc, #76]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001b58:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001b5a:	4a12      	ldr	r2, [pc, #72]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001b5c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001b60:	6453      	str	r3, [r2, #68]	@ 0x44
 8001b62:	4b10      	ldr	r3, [pc, #64]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001b64:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001b66:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001b6a:	60fb      	str	r3, [r7, #12]
 8001b6c:	68fb      	ldr	r3, [r7, #12]
}
 8001b6e:	e012      	b.n	8001b96 <HAL_TIM_Base_MspInit+0x1a6>
  else if(tim_baseHandle->Instance==TIM11)
 8001b70:	687b      	ldr	r3, [r7, #4]
 8001b72:	681b      	ldr	r3, [r3, #0]
 8001b74:	4a11      	ldr	r2, [pc, #68]	@ (8001bbc <HAL_TIM_Base_MspInit+0x1cc>)
 8001b76:	4293      	cmp	r3, r2
 8001b78:	d10d      	bne.n	8001b96 <HAL_TIM_Base_MspInit+0x1a6>
    __HAL_RCC_TIM11_CLK_ENABLE();
 8001b7a:	2300      	movs	r3, #0
 8001b7c:	60bb      	str	r3, [r7, #8]
 8001b7e:	4b09      	ldr	r3, [pc, #36]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001b80:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001b82:	4a08      	ldr	r2, [pc, #32]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001b84:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001b88:	6453      	str	r3, [r2, #68]	@ 0x44
 8001b8a:	4b06      	ldr	r3, [pc, #24]	@ (8001ba4 <HAL_TIM_Base_MspInit+0x1b4>)
 8001b8c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001b8e:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8001b92:	60bb      	str	r3, [r7, #8]
 8001b94:	68bb      	ldr	r3, [r7, #8]
}
 8001b96:	bf00      	nop
 8001b98:	3728      	adds	r7, #40	@ 0x28
 8001b9a:	46bd      	mov	sp, r7
 8001b9c:	bd80      	pop	{r7, pc}
 8001b9e:	bf00      	nop
 8001ba0:	40010000 	.word	0x40010000
 8001ba4:	40023800 	.word	0x40023800
 8001ba8:	40000400 	.word	0x40000400
 8001bac:	40000800 	.word	0x40000800
 8001bb0:	40000c00 	.word	0x40000c00
 8001bb4:	40010400 	.word	0x40010400
 8001bb8:	40014400 	.word	0x40014400
 8001bbc:	40014800 	.word	0x40014800

08001bc0 <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 8001bc0:	b580      	push	{r7, lr}
 8001bc2:	b08c      	sub	sp, #48	@ 0x30
 8001bc4:	af00      	add	r7, sp, #0
 8001bc6:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bc8:	f107 031c 	add.w	r3, r7, #28
 8001bcc:	2200      	movs	r2, #0
 8001bce:	601a      	str	r2, [r3, #0]
 8001bd0:	605a      	str	r2, [r3, #4]
 8001bd2:	609a      	str	r2, [r3, #8]
 8001bd4:	60da      	str	r2, [r3, #12]
 8001bd6:	611a      	str	r2, [r3, #16]
  if(timHandle->Instance==TIM1)
 8001bd8:	687b      	ldr	r3, [r7, #4]
 8001bda:	681b      	ldr	r3, [r3, #0]
 8001bdc:	4a5b      	ldr	r2, [pc, #364]	@ (8001d4c <HAL_TIM_MspPostInit+0x18c>)
 8001bde:	4293      	cmp	r3, r2
 8001be0:	d11f      	bne.n	8001c22 <HAL_TIM_MspPostInit+0x62>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001be2:	2300      	movs	r3, #0
 8001be4:	61bb      	str	r3, [r7, #24]
 8001be6:	4b5a      	ldr	r3, [pc, #360]	@ (8001d50 <HAL_TIM_MspPostInit+0x190>)
 8001be8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001bea:	4a59      	ldr	r2, [pc, #356]	@ (8001d50 <HAL_TIM_MspPostInit+0x190>)
 8001bec:	f043 0301 	orr.w	r3, r3, #1
 8001bf0:	6313      	str	r3, [r2, #48]	@ 0x30
 8001bf2:	4b57      	ldr	r3, [pc, #348]	@ (8001d50 <HAL_TIM_MspPostInit+0x190>)
 8001bf4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001bf6:	f003 0301 	and.w	r3, r3, #1
 8001bfa:	61bb      	str	r3, [r7, #24]
 8001bfc:	69bb      	ldr	r3, [r7, #24]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    */
    GPIO_InitStruct.Pin = PWM1_Pin;
 8001bfe:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001c02:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c04:	2302      	movs	r3, #2
 8001c06:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c08:	2300      	movs	r3, #0
 8001c0a:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001c0c:	2300      	movs	r3, #0
 8001c0e:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 8001c10:	2301      	movs	r3, #1
 8001c12:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(PWM1_GPIO_Port, &GPIO_InitStruct);
 8001c14:	f107 031c 	add.w	r3, r7, #28
 8001c18:	4619      	mov	r1, r3
 8001c1a:	484e      	ldr	r0, [pc, #312]	@ (8001d54 <HAL_TIM_MspPostInit+0x194>)
 8001c1c:	f000 fa9c 	bl	8002158 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM11_MspPostInit 1 */

  /* USER CODE END TIM11_MspPostInit 1 */
  }

}
 8001c20:	e090      	b.n	8001d44 <HAL_TIM_MspPostInit+0x184>
  else if(timHandle->Instance==TIM2)
 8001c22:	687b      	ldr	r3, [r7, #4]
 8001c24:	681b      	ldr	r3, [r3, #0]
 8001c26:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001c2a:	d11e      	bne.n	8001c6a <HAL_TIM_MspPostInit+0xaa>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c2c:	2300      	movs	r3, #0
 8001c2e:	617b      	str	r3, [r7, #20]
 8001c30:	4b47      	ldr	r3, [pc, #284]	@ (8001d50 <HAL_TIM_MspPostInit+0x190>)
 8001c32:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001c34:	4a46      	ldr	r2, [pc, #280]	@ (8001d50 <HAL_TIM_MspPostInit+0x190>)
 8001c36:	f043 0301 	orr.w	r3, r3, #1
 8001c3a:	6313      	str	r3, [r2, #48]	@ 0x30
 8001c3c:	4b44      	ldr	r3, [pc, #272]	@ (8001d50 <HAL_TIM_MspPostInit+0x190>)
 8001c3e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001c40:	f003 0301 	and.w	r3, r3, #1
 8001c44:	617b      	str	r3, [r7, #20]
 8001c46:	697b      	ldr	r3, [r7, #20]
    GPIO_InitStruct.Pin = PWM2_Pin|PWM3_Pin;
 8001c48:	2303      	movs	r3, #3
 8001c4a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c4c:	2302      	movs	r3, #2
 8001c4e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c50:	2300      	movs	r3, #0
 8001c52:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001c54:	2300      	movs	r3, #0
 8001c56:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8001c58:	2301      	movs	r3, #1
 8001c5a:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c5c:	f107 031c 	add.w	r3, r7, #28
 8001c60:	4619      	mov	r1, r3
 8001c62:	483c      	ldr	r0, [pc, #240]	@ (8001d54 <HAL_TIM_MspPostInit+0x194>)
 8001c64:	f000 fa78 	bl	8002158 <HAL_GPIO_Init>
}
 8001c68:	e06c      	b.n	8001d44 <HAL_TIM_MspPostInit+0x184>
  else if(timHandle->Instance==TIM8)
 8001c6a:	687b      	ldr	r3, [r7, #4]
 8001c6c:	681b      	ldr	r3, [r3, #0]
 8001c6e:	4a3a      	ldr	r2, [pc, #232]	@ (8001d58 <HAL_TIM_MspPostInit+0x198>)
 8001c70:	4293      	cmp	r3, r2
 8001c72:	d11e      	bne.n	8001cb2 <HAL_TIM_MspPostInit+0xf2>
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c74:	2300      	movs	r3, #0
 8001c76:	613b      	str	r3, [r7, #16]
 8001c78:	4b35      	ldr	r3, [pc, #212]	@ (8001d50 <HAL_TIM_MspPostInit+0x190>)
 8001c7a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001c7c:	4a34      	ldr	r2, [pc, #208]	@ (8001d50 <HAL_TIM_MspPostInit+0x190>)
 8001c7e:	f043 0304 	orr.w	r3, r3, #4
 8001c82:	6313      	str	r3, [r2, #48]	@ 0x30
 8001c84:	4b32      	ldr	r3, [pc, #200]	@ (8001d50 <HAL_TIM_MspPostInit+0x190>)
 8001c86:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001c88:	f003 0304 	and.w	r3, r3, #4
 8001c8c:	613b      	str	r3, [r7, #16]
 8001c8e:	693b      	ldr	r3, [r7, #16]
    GPIO_InitStruct.Pin = PWM4_Pin;
 8001c90:	2340      	movs	r3, #64	@ 0x40
 8001c92:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c94:	2302      	movs	r3, #2
 8001c96:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c98:	2300      	movs	r3, #0
 8001c9a:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001c9c:	2300      	movs	r3, #0
 8001c9e:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 8001ca0:	2303      	movs	r3, #3
 8001ca2:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(PWM4_GPIO_Port, &GPIO_InitStruct);
 8001ca4:	f107 031c 	add.w	r3, r7, #28
 8001ca8:	4619      	mov	r1, r3
 8001caa:	482c      	ldr	r0, [pc, #176]	@ (8001d5c <HAL_TIM_MspPostInit+0x19c>)
 8001cac:	f000 fa54 	bl	8002158 <HAL_GPIO_Init>
}
 8001cb0:	e048      	b.n	8001d44 <HAL_TIM_MspPostInit+0x184>
  else if(timHandle->Instance==TIM10)
 8001cb2:	687b      	ldr	r3, [r7, #4]
 8001cb4:	681b      	ldr	r3, [r3, #0]
 8001cb6:	4a2a      	ldr	r2, [pc, #168]	@ (8001d60 <HAL_TIM_MspPostInit+0x1a0>)
 8001cb8:	4293      	cmp	r3, r2
 8001cba:	d11f      	bne.n	8001cfc <HAL_TIM_MspPostInit+0x13c>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001cbc:	2300      	movs	r3, #0
 8001cbe:	60fb      	str	r3, [r7, #12]
 8001cc0:	4b23      	ldr	r3, [pc, #140]	@ (8001d50 <HAL_TIM_MspPostInit+0x190>)
 8001cc2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001cc4:	4a22      	ldr	r2, [pc, #136]	@ (8001d50 <HAL_TIM_MspPostInit+0x190>)
 8001cc6:	f043 0302 	orr.w	r3, r3, #2
 8001cca:	6313      	str	r3, [r2, #48]	@ 0x30
 8001ccc:	4b20      	ldr	r3, [pc, #128]	@ (8001d50 <HAL_TIM_MspPostInit+0x190>)
 8001cce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001cd0:	f003 0302 	and.w	r3, r3, #2
 8001cd4:	60fb      	str	r3, [r7, #12]
 8001cd6:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = SERVO_1_Pin;
 8001cd8:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001cdc:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cde:	2302      	movs	r3, #2
 8001ce0:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ce2:	2300      	movs	r3, #0
 8001ce4:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001ce6:	2300      	movs	r3, #0
 8001ce8:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM10;
 8001cea:	2303      	movs	r3, #3
 8001cec:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(SERVO_1_GPIO_Port, &GPIO_InitStruct);
 8001cee:	f107 031c 	add.w	r3, r7, #28
 8001cf2:	4619      	mov	r1, r3
 8001cf4:	481b      	ldr	r0, [pc, #108]	@ (8001d64 <HAL_TIM_MspPostInit+0x1a4>)
 8001cf6:	f000 fa2f 	bl	8002158 <HAL_GPIO_Init>
}
 8001cfa:	e023      	b.n	8001d44 <HAL_TIM_MspPostInit+0x184>
  else if(timHandle->Instance==TIM11)
 8001cfc:	687b      	ldr	r3, [r7, #4]
 8001cfe:	681b      	ldr	r3, [r3, #0]
 8001d00:	4a19      	ldr	r2, [pc, #100]	@ (8001d68 <HAL_TIM_MspPostInit+0x1a8>)
 8001d02:	4293      	cmp	r3, r2
 8001d04:	d11e      	bne.n	8001d44 <HAL_TIM_MspPostInit+0x184>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d06:	2300      	movs	r3, #0
 8001d08:	60bb      	str	r3, [r7, #8]
 8001d0a:	4b11      	ldr	r3, [pc, #68]	@ (8001d50 <HAL_TIM_MspPostInit+0x190>)
 8001d0c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d0e:	4a10      	ldr	r2, [pc, #64]	@ (8001d50 <HAL_TIM_MspPostInit+0x190>)
 8001d10:	f043 0302 	orr.w	r3, r3, #2
 8001d14:	6313      	str	r3, [r2, #48]	@ 0x30
 8001d16:	4b0e      	ldr	r3, [pc, #56]	@ (8001d50 <HAL_TIM_MspPostInit+0x190>)
 8001d18:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d1a:	f003 0302 	and.w	r3, r3, #2
 8001d1e:	60bb      	str	r3, [r7, #8]
 8001d20:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = SERVO_2_Pin;
 8001d22:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8001d26:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d28:	2302      	movs	r3, #2
 8001d2a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d2c:	2300      	movs	r3, #0
 8001d2e:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d30:	2300      	movs	r3, #0
 8001d32:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM11;
 8001d34:	2303      	movs	r3, #3
 8001d36:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(SERVO_2_GPIO_Port, &GPIO_InitStruct);
 8001d38:	f107 031c 	add.w	r3, r7, #28
 8001d3c:	4619      	mov	r1, r3
 8001d3e:	4809      	ldr	r0, [pc, #36]	@ (8001d64 <HAL_TIM_MspPostInit+0x1a4>)
 8001d40:	f000 fa0a 	bl	8002158 <HAL_GPIO_Init>
}
 8001d44:	bf00      	nop
 8001d46:	3730      	adds	r7, #48	@ 0x30
 8001d48:	46bd      	mov	sp, r7
 8001d4a:	bd80      	pop	{r7, pc}
 8001d4c:	40010000 	.word	0x40010000
 8001d50:	40023800 	.word	0x40023800
 8001d54:	40020000 	.word	0x40020000
 8001d58:	40010400 	.word	0x40010400
 8001d5c:	40020800 	.word	0x40020800
 8001d60:	40014400 	.word	0x40014400
 8001d64:	40020400 	.word	0x40020400
 8001d68:	40014800 	.word	0x40014800

08001d6c <HAL_GPIO_EXTI_Callback>:
}

/* USER CODE BEGIN 1 */

//emergency stop button, negative enable logic
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {
 8001d6c:	b580      	push	{r7, lr}
 8001d6e:	b082      	sub	sp, #8
 8001d70:	af00      	add	r7, sp, #0
 8001d72:	4603      	mov	r3, r0
 8001d74:	80fb      	strh	r3, [r7, #6]
	if (GPIO_Pin == DISABLE_button_Pin) {
 8001d76:	88fb      	ldrh	r3, [r7, #6]
 8001d78:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8001d7c:	d112      	bne.n	8001da4 <HAL_GPIO_EXTI_Callback+0x38>
		HAL_GPIO_WritePin(ENABLE_GPIO_Port, ENABLE_Pin, GPIO_PIN_SET); //disable the servo the stepper motors
 8001d7e:	2201      	movs	r2, #1
 8001d80:	2120      	movs	r1, #32
 8001d82:	480a      	ldr	r0, [pc, #40]	@ (8001dac <HAL_GPIO_EXTI_Callback+0x40>)
 8001d84:	f000 fb7c 	bl	8002480 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(SERVO_en_GPIO_Port, SERVO_en_Pin, GPIO_PIN_SET); //disable the servo
 8001d88:	2201      	movs	r2, #1
 8001d8a:	2102      	movs	r1, #2
 8001d8c:	4808      	ldr	r0, [pc, #32]	@ (8001db0 <HAL_GPIO_EXTI_Callback+0x44>)
 8001d8e:	f000 fb77 	bl	8002480 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(ENDEFF_en_GPIO_Port, ENDEFF_en_Pin, GPIO_PIN_SET); //disable the end_eff
 8001d92:	2201      	movs	r2, #1
 8001d94:	2104      	movs	r1, #4
 8001d96:	4806      	ldr	r0, [pc, #24]	@ (8001db0 <HAL_GPIO_EXTI_Callback+0x44>)
 8001d98:	f000 fb72 	bl	8002480 <HAL_GPIO_WritePin>
  __ASM volatile ("cpsid i" : : : "memory");
 8001d9c:	b672      	cpsid	i
}
 8001d9e:	bf00      	nop
		__disable_irq();

		while (1) {
 8001da0:	bf00      	nop
 8001da2:	e7fd      	b.n	8001da0 <HAL_GPIO_EXTI_Callback+0x34>

		}
	}
}
 8001da4:	bf00      	nop
 8001da6:	3708      	adds	r7, #8
 8001da8:	46bd      	mov	sp, r7
 8001daa:	bd80      	pop	{r7, pc}
 8001dac:	40020800 	.word	0x40020800
 8001db0:	40020400 	.word	0x40020400

08001db4 <Reset_Handler>:
 8001db4:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001dec <LoopFillZerobss+0xe>
 8001db8:	f7ff fa7a 	bl	80012b0 <SystemInit>
 8001dbc:	480c      	ldr	r0, [pc, #48]	@ (8001df0 <LoopFillZerobss+0x12>)
 8001dbe:	490d      	ldr	r1, [pc, #52]	@ (8001df4 <LoopFillZerobss+0x16>)
 8001dc0:	4a0d      	ldr	r2, [pc, #52]	@ (8001df8 <LoopFillZerobss+0x1a>)
 8001dc2:	2300      	movs	r3, #0
 8001dc4:	e002      	b.n	8001dcc <LoopCopyDataInit>

08001dc6 <CopyDataInit>:
 8001dc6:	58d4      	ldr	r4, [r2, r3]
 8001dc8:	50c4      	str	r4, [r0, r3]
 8001dca:	3304      	adds	r3, #4

08001dcc <LoopCopyDataInit>:
 8001dcc:	18c4      	adds	r4, r0, r3
 8001dce:	428c      	cmp	r4, r1
 8001dd0:	d3f9      	bcc.n	8001dc6 <CopyDataInit>
 8001dd2:	4a0a      	ldr	r2, [pc, #40]	@ (8001dfc <LoopFillZerobss+0x1e>)
 8001dd4:	4c0a      	ldr	r4, [pc, #40]	@ (8001e00 <LoopFillZerobss+0x22>)
 8001dd6:	2300      	movs	r3, #0
 8001dd8:	e001      	b.n	8001dde <LoopFillZerobss>

08001dda <FillZerobss>:
 8001dda:	6013      	str	r3, [r2, #0]
 8001ddc:	3204      	adds	r2, #4

08001dde <LoopFillZerobss>:
 8001dde:	42a2      	cmp	r2, r4
 8001de0:	d3fb      	bcc.n	8001dda <FillZerobss>
 8001de2:	f002 fc8b 	bl	80046fc <__libc_init_array>
 8001de6:	f7fe fe7b 	bl	8000ae0 <main>
 8001dea:	4770      	bx	lr
 8001dec:	20020000 	.word	0x20020000
 8001df0:	20000000 	.word	0x20000000
 8001df4:	2000003c 	.word	0x2000003c
 8001df8:	08004784 	.word	0x08004784
 8001dfc:	2000003c 	.word	0x2000003c
 8001e00:	20000360 	.word	0x20000360

08001e04 <ADC_IRQHandler>:
 8001e04:	e7fe      	b.n	8001e04 <ADC_IRQHandler>
	...

08001e08 <HAL_Init>:
 8001e08:	b580      	push	{r7, lr}
 8001e0a:	af00      	add	r7, sp, #0
 8001e0c:	4b0e      	ldr	r3, [pc, #56]	@ (8001e48 <HAL_Init+0x40>)
 8001e0e:	681b      	ldr	r3, [r3, #0]
 8001e10:	4a0d      	ldr	r2, [pc, #52]	@ (8001e48 <HAL_Init+0x40>)
 8001e12:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001e16:	6013      	str	r3, [r2, #0]
 8001e18:	4b0b      	ldr	r3, [pc, #44]	@ (8001e48 <HAL_Init+0x40>)
 8001e1a:	681b      	ldr	r3, [r3, #0]
 8001e1c:	4a0a      	ldr	r2, [pc, #40]	@ (8001e48 <HAL_Init+0x40>)
 8001e1e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001e22:	6013      	str	r3, [r2, #0]
 8001e24:	4b08      	ldr	r3, [pc, #32]	@ (8001e48 <HAL_Init+0x40>)
 8001e26:	681b      	ldr	r3, [r3, #0]
 8001e28:	4a07      	ldr	r2, [pc, #28]	@ (8001e48 <HAL_Init+0x40>)
 8001e2a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001e2e:	6013      	str	r3, [r2, #0]
 8001e30:	2003      	movs	r0, #3
 8001e32:	f000 f94f 	bl	80020d4 <HAL_NVIC_SetPriorityGrouping>
 8001e36:	2000      	movs	r0, #0
 8001e38:	f000 f808 	bl	8001e4c <HAL_InitTick>
 8001e3c:	f7ff f99c 	bl	8001178 <HAL_MspInit>
 8001e40:	2300      	movs	r3, #0
 8001e42:	4618      	mov	r0, r3
 8001e44:	bd80      	pop	{r7, pc}
 8001e46:	bf00      	nop
 8001e48:	40023c00 	.word	0x40023c00

08001e4c <HAL_InitTick>:
 8001e4c:	b580      	push	{r7, lr}
 8001e4e:	b082      	sub	sp, #8
 8001e50:	af00      	add	r7, sp, #0
 8001e52:	6078      	str	r0, [r7, #4]
 8001e54:	4b12      	ldr	r3, [pc, #72]	@ (8001ea0 <HAL_InitTick+0x54>)
 8001e56:	681a      	ldr	r2, [r3, #0]
 8001e58:	4b12      	ldr	r3, [pc, #72]	@ (8001ea4 <HAL_InitTick+0x58>)
 8001e5a:	781b      	ldrb	r3, [r3, #0]
 8001e5c:	4619      	mov	r1, r3
 8001e5e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001e62:	fbb3 f3f1 	udiv	r3, r3, r1
 8001e66:	fbb2 f3f3 	udiv	r3, r2, r3
 8001e6a:	4618      	mov	r0, r3
 8001e6c:	f000 f967 	bl	800213e <HAL_SYSTICK_Config>
 8001e70:	4603      	mov	r3, r0
 8001e72:	2b00      	cmp	r3, #0
 8001e74:	d001      	beq.n	8001e7a <HAL_InitTick+0x2e>
 8001e76:	2301      	movs	r3, #1
 8001e78:	e00e      	b.n	8001e98 <HAL_InitTick+0x4c>
 8001e7a:	687b      	ldr	r3, [r7, #4]
 8001e7c:	2b0f      	cmp	r3, #15
 8001e7e:	d80a      	bhi.n	8001e96 <HAL_InitTick+0x4a>
 8001e80:	2200      	movs	r2, #0
 8001e82:	6879      	ldr	r1, [r7, #4]
 8001e84:	f04f 30ff 	mov.w	r0, #4294967295
 8001e88:	f000 f92f 	bl	80020ea <HAL_NVIC_SetPriority>
 8001e8c:	4a06      	ldr	r2, [pc, #24]	@ (8001ea8 <HAL_InitTick+0x5c>)
 8001e8e:	687b      	ldr	r3, [r7, #4]
 8001e90:	6013      	str	r3, [r2, #0]
 8001e92:	2300      	movs	r3, #0
 8001e94:	e000      	b.n	8001e98 <HAL_InitTick+0x4c>
 8001e96:	2301      	movs	r3, #1
 8001e98:	4618      	mov	r0, r3
 8001e9a:	3708      	adds	r7, #8
 8001e9c:	46bd      	mov	sp, r7
 8001e9e:	bd80      	pop	{r7, pc}
 8001ea0:	20000030 	.word	0x20000030
 8001ea4:	20000038 	.word	0x20000038
 8001ea8:	20000034 	.word	0x20000034

08001eac <HAL_IncTick>:
 8001eac:	b480      	push	{r7}
 8001eae:	af00      	add	r7, sp, #0
 8001eb0:	4b06      	ldr	r3, [pc, #24]	@ (8001ecc <HAL_IncTick+0x20>)
 8001eb2:	781b      	ldrb	r3, [r3, #0]
 8001eb4:	461a      	mov	r2, r3
 8001eb6:	4b06      	ldr	r3, [pc, #24]	@ (8001ed0 <HAL_IncTick+0x24>)
 8001eb8:	681b      	ldr	r3, [r3, #0]
 8001eba:	4413      	add	r3, r2
 8001ebc:	4a04      	ldr	r2, [pc, #16]	@ (8001ed0 <HAL_IncTick+0x24>)
 8001ebe:	6013      	str	r3, [r2, #0]
 8001ec0:	bf00      	nop
 8001ec2:	46bd      	mov	sp, r7
 8001ec4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ec8:	4770      	bx	lr
 8001eca:	bf00      	nop
 8001ecc:	20000038 	.word	0x20000038
 8001ed0:	2000035c 	.word	0x2000035c

08001ed4 <HAL_GetTick>:
 8001ed4:	b480      	push	{r7}
 8001ed6:	af00      	add	r7, sp, #0
 8001ed8:	4b03      	ldr	r3, [pc, #12]	@ (8001ee8 <HAL_GetTick+0x14>)
 8001eda:	681b      	ldr	r3, [r3, #0]
 8001edc:	4618      	mov	r0, r3
 8001ede:	46bd      	mov	sp, r7
 8001ee0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ee4:	4770      	bx	lr
 8001ee6:	bf00      	nop
 8001ee8:	2000035c 	.word	0x2000035c

08001eec <HAL_Delay>:
 8001eec:	b580      	push	{r7, lr}
 8001eee:	b084      	sub	sp, #16
 8001ef0:	af00      	add	r7, sp, #0
 8001ef2:	6078      	str	r0, [r7, #4]
 8001ef4:	f7ff ffee 	bl	8001ed4 <HAL_GetTick>
 8001ef8:	60b8      	str	r0, [r7, #8]
 8001efa:	687b      	ldr	r3, [r7, #4]
 8001efc:	60fb      	str	r3, [r7, #12]
 8001efe:	68fb      	ldr	r3, [r7, #12]
 8001f00:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001f04:	d005      	beq.n	8001f12 <HAL_Delay+0x26>
 8001f06:	4b0a      	ldr	r3, [pc, #40]	@ (8001f30 <HAL_Delay+0x44>)
 8001f08:	781b      	ldrb	r3, [r3, #0]
 8001f0a:	461a      	mov	r2, r3
 8001f0c:	68fb      	ldr	r3, [r7, #12]
 8001f0e:	4413      	add	r3, r2
 8001f10:	60fb      	str	r3, [r7, #12]
 8001f12:	bf00      	nop
 8001f14:	f7ff ffde 	bl	8001ed4 <HAL_GetTick>
 8001f18:	4602      	mov	r2, r0
 8001f1a:	68bb      	ldr	r3, [r7, #8]
 8001f1c:	1ad3      	subs	r3, r2, r3
 8001f1e:	68fa      	ldr	r2, [r7, #12]
 8001f20:	429a      	cmp	r2, r3
 8001f22:	d8f7      	bhi.n	8001f14 <HAL_Delay+0x28>
 8001f24:	bf00      	nop
 8001f26:	bf00      	nop
 8001f28:	3710      	adds	r7, #16
 8001f2a:	46bd      	mov	sp, r7
 8001f2c:	bd80      	pop	{r7, pc}
 8001f2e:	bf00      	nop
 8001f30:	20000038 	.word	0x20000038

08001f34 <__NVIC_SetPriorityGrouping>:
 8001f34:	b480      	push	{r7}
 8001f36:	b085      	sub	sp, #20
 8001f38:	af00      	add	r7, sp, #0
 8001f3a:	6078      	str	r0, [r7, #4]
 8001f3c:	687b      	ldr	r3, [r7, #4]
 8001f3e:	f003 0307 	and.w	r3, r3, #7
 8001f42:	60fb      	str	r3, [r7, #12]
 8001f44:	4b0c      	ldr	r3, [pc, #48]	@ (8001f78 <__NVIC_SetPriorityGrouping+0x44>)
 8001f46:	68db      	ldr	r3, [r3, #12]
 8001f48:	60bb      	str	r3, [r7, #8]
 8001f4a:	68ba      	ldr	r2, [r7, #8]
 8001f4c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001f50:	4013      	ands	r3, r2
 8001f52:	60bb      	str	r3, [r7, #8]
 8001f54:	68fb      	ldr	r3, [r7, #12]
 8001f56:	021a      	lsls	r2, r3, #8
 8001f58:	68bb      	ldr	r3, [r7, #8]
 8001f5a:	4313      	orrs	r3, r2
 8001f5c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001f60:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001f64:	60bb      	str	r3, [r7, #8]
 8001f66:	4a04      	ldr	r2, [pc, #16]	@ (8001f78 <__NVIC_SetPriorityGrouping+0x44>)
 8001f68:	68bb      	ldr	r3, [r7, #8]
 8001f6a:	60d3      	str	r3, [r2, #12]
 8001f6c:	bf00      	nop
 8001f6e:	3714      	adds	r7, #20
 8001f70:	46bd      	mov	sp, r7
 8001f72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f76:	4770      	bx	lr
 8001f78:	e000ed00 	.word	0xe000ed00

08001f7c <__NVIC_GetPriorityGrouping>:
 8001f7c:	b480      	push	{r7}
 8001f7e:	af00      	add	r7, sp, #0
 8001f80:	4b04      	ldr	r3, [pc, #16]	@ (8001f94 <__NVIC_GetPriorityGrouping+0x18>)
 8001f82:	68db      	ldr	r3, [r3, #12]
 8001f84:	0a1b      	lsrs	r3, r3, #8
 8001f86:	f003 0307 	and.w	r3, r3, #7
 8001f8a:	4618      	mov	r0, r3
 8001f8c:	46bd      	mov	sp, r7
 8001f8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f92:	4770      	bx	lr
 8001f94:	e000ed00 	.word	0xe000ed00

08001f98 <__NVIC_EnableIRQ>:
 8001f98:	b480      	push	{r7}
 8001f9a:	b083      	sub	sp, #12
 8001f9c:	af00      	add	r7, sp, #0
 8001f9e:	4603      	mov	r3, r0
 8001fa0:	71fb      	strb	r3, [r7, #7]
 8001fa2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001fa6:	2b00      	cmp	r3, #0
 8001fa8:	db0b      	blt.n	8001fc2 <__NVIC_EnableIRQ+0x2a>
 8001faa:	79fb      	ldrb	r3, [r7, #7]
 8001fac:	f003 021f 	and.w	r2, r3, #31
 8001fb0:	4907      	ldr	r1, [pc, #28]	@ (8001fd0 <__NVIC_EnableIRQ+0x38>)
 8001fb2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001fb6:	095b      	lsrs	r3, r3, #5
 8001fb8:	2001      	movs	r0, #1
 8001fba:	fa00 f202 	lsl.w	r2, r0, r2
 8001fbe:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001fc2:	bf00      	nop
 8001fc4:	370c      	adds	r7, #12
 8001fc6:	46bd      	mov	sp, r7
 8001fc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fcc:	4770      	bx	lr
 8001fce:	bf00      	nop
 8001fd0:	e000e100 	.word	0xe000e100

08001fd4 <__NVIC_SetPriority>:
 8001fd4:	b480      	push	{r7}
 8001fd6:	b083      	sub	sp, #12
 8001fd8:	af00      	add	r7, sp, #0
 8001fda:	4603      	mov	r3, r0
 8001fdc:	6039      	str	r1, [r7, #0]
 8001fde:	71fb      	strb	r3, [r7, #7]
 8001fe0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001fe4:	2b00      	cmp	r3, #0
 8001fe6:	db0a      	blt.n	8001ffe <__NVIC_SetPriority+0x2a>
 8001fe8:	683b      	ldr	r3, [r7, #0]
 8001fea:	b2da      	uxtb	r2, r3
 8001fec:	490c      	ldr	r1, [pc, #48]	@ (8002020 <__NVIC_SetPriority+0x4c>)
 8001fee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001ff2:	0112      	lsls	r2, r2, #4
 8001ff4:	b2d2      	uxtb	r2, r2
 8001ff6:	440b      	add	r3, r1
 8001ff8:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001ffc:	e00a      	b.n	8002014 <__NVIC_SetPriority+0x40>
 8001ffe:	683b      	ldr	r3, [r7, #0]
 8002000:	b2da      	uxtb	r2, r3
 8002002:	4908      	ldr	r1, [pc, #32]	@ (8002024 <__NVIC_SetPriority+0x50>)
 8002004:	79fb      	ldrb	r3, [r7, #7]
 8002006:	f003 030f 	and.w	r3, r3, #15
 800200a:	3b04      	subs	r3, #4
 800200c:	0112      	lsls	r2, r2, #4
 800200e:	b2d2      	uxtb	r2, r2
 8002010:	440b      	add	r3, r1
 8002012:	761a      	strb	r2, [r3, #24]
 8002014:	bf00      	nop
 8002016:	370c      	adds	r7, #12
 8002018:	46bd      	mov	sp, r7
 800201a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800201e:	4770      	bx	lr
 8002020:	e000e100 	.word	0xe000e100
 8002024:	e000ed00 	.word	0xe000ed00

08002028 <NVIC_EncodePriority>:
 8002028:	b480      	push	{r7}
 800202a:	b089      	sub	sp, #36	@ 0x24
 800202c:	af00      	add	r7, sp, #0
 800202e:	60f8      	str	r0, [r7, #12]
 8002030:	60b9      	str	r1, [r7, #8]
 8002032:	607a      	str	r2, [r7, #4]
 8002034:	68fb      	ldr	r3, [r7, #12]
 8002036:	f003 0307 	and.w	r3, r3, #7
 800203a:	61fb      	str	r3, [r7, #28]
 800203c:	69fb      	ldr	r3, [r7, #28]
 800203e:	f1c3 0307 	rsb	r3, r3, #7
 8002042:	2b04      	cmp	r3, #4
 8002044:	bf28      	it	cs
 8002046:	2304      	movcs	r3, #4
 8002048:	61bb      	str	r3, [r7, #24]
 800204a:	69fb      	ldr	r3, [r7, #28]
 800204c:	3304      	adds	r3, #4
 800204e:	2b06      	cmp	r3, #6
 8002050:	d902      	bls.n	8002058 <NVIC_EncodePriority+0x30>
 8002052:	69fb      	ldr	r3, [r7, #28]
 8002054:	3b03      	subs	r3, #3
 8002056:	e000      	b.n	800205a <NVIC_EncodePriority+0x32>
 8002058:	2300      	movs	r3, #0
 800205a:	617b      	str	r3, [r7, #20]
 800205c:	f04f 32ff 	mov.w	r2, #4294967295
 8002060:	69bb      	ldr	r3, [r7, #24]
 8002062:	fa02 f303 	lsl.w	r3, r2, r3
 8002066:	43da      	mvns	r2, r3
 8002068:	68bb      	ldr	r3, [r7, #8]
 800206a:	401a      	ands	r2, r3
 800206c:	697b      	ldr	r3, [r7, #20]
 800206e:	409a      	lsls	r2, r3
 8002070:	f04f 31ff 	mov.w	r1, #4294967295
 8002074:	697b      	ldr	r3, [r7, #20]
 8002076:	fa01 f303 	lsl.w	r3, r1, r3
 800207a:	43d9      	mvns	r1, r3
 800207c:	687b      	ldr	r3, [r7, #4]
 800207e:	400b      	ands	r3, r1
 8002080:	4313      	orrs	r3, r2
 8002082:	4618      	mov	r0, r3
 8002084:	3724      	adds	r7, #36	@ 0x24
 8002086:	46bd      	mov	sp, r7
 8002088:	f85d 7b04 	ldr.w	r7, [sp], #4
 800208c:	4770      	bx	lr
	...

08002090 <SysTick_Config>:
 8002090:	b580      	push	{r7, lr}
 8002092:	b082      	sub	sp, #8
 8002094:	af00      	add	r7, sp, #0
 8002096:	6078      	str	r0, [r7, #4]
 8002098:	687b      	ldr	r3, [r7, #4]
 800209a:	3b01      	subs	r3, #1
 800209c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80020a0:	d301      	bcc.n	80020a6 <SysTick_Config+0x16>
 80020a2:	2301      	movs	r3, #1
 80020a4:	e00f      	b.n	80020c6 <SysTick_Config+0x36>
 80020a6:	4a0a      	ldr	r2, [pc, #40]	@ (80020d0 <SysTick_Config+0x40>)
 80020a8:	687b      	ldr	r3, [r7, #4]
 80020aa:	3b01      	subs	r3, #1
 80020ac:	6053      	str	r3, [r2, #4]
 80020ae:	210f      	movs	r1, #15
 80020b0:	f04f 30ff 	mov.w	r0, #4294967295
 80020b4:	f7ff ff8e 	bl	8001fd4 <__NVIC_SetPriority>
 80020b8:	4b05      	ldr	r3, [pc, #20]	@ (80020d0 <SysTick_Config+0x40>)
 80020ba:	2200      	movs	r2, #0
 80020bc:	609a      	str	r2, [r3, #8]
 80020be:	4b04      	ldr	r3, [pc, #16]	@ (80020d0 <SysTick_Config+0x40>)
 80020c0:	2207      	movs	r2, #7
 80020c2:	601a      	str	r2, [r3, #0]
 80020c4:	2300      	movs	r3, #0
 80020c6:	4618      	mov	r0, r3
 80020c8:	3708      	adds	r7, #8
 80020ca:	46bd      	mov	sp, r7
 80020cc:	bd80      	pop	{r7, pc}
 80020ce:	bf00      	nop
 80020d0:	e000e010 	.word	0xe000e010

080020d4 <HAL_NVIC_SetPriorityGrouping>:
 80020d4:	b580      	push	{r7, lr}
 80020d6:	b082      	sub	sp, #8
 80020d8:	af00      	add	r7, sp, #0
 80020da:	6078      	str	r0, [r7, #4]
 80020dc:	6878      	ldr	r0, [r7, #4]
 80020de:	f7ff ff29 	bl	8001f34 <__NVIC_SetPriorityGrouping>
 80020e2:	bf00      	nop
 80020e4:	3708      	adds	r7, #8
 80020e6:	46bd      	mov	sp, r7
 80020e8:	bd80      	pop	{r7, pc}

080020ea <HAL_NVIC_SetPriority>:
 80020ea:	b580      	push	{r7, lr}
 80020ec:	b086      	sub	sp, #24
 80020ee:	af00      	add	r7, sp, #0
 80020f0:	4603      	mov	r3, r0
 80020f2:	60b9      	str	r1, [r7, #8]
 80020f4:	607a      	str	r2, [r7, #4]
 80020f6:	73fb      	strb	r3, [r7, #15]
 80020f8:	2300      	movs	r3, #0
 80020fa:	617b      	str	r3, [r7, #20]
 80020fc:	f7ff ff3e 	bl	8001f7c <__NVIC_GetPriorityGrouping>
 8002100:	6178      	str	r0, [r7, #20]
 8002102:	687a      	ldr	r2, [r7, #4]
 8002104:	68b9      	ldr	r1, [r7, #8]
 8002106:	6978      	ldr	r0, [r7, #20]
 8002108:	f7ff ff8e 	bl	8002028 <NVIC_EncodePriority>
 800210c:	4602      	mov	r2, r0
 800210e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002112:	4611      	mov	r1, r2
 8002114:	4618      	mov	r0, r3
 8002116:	f7ff ff5d 	bl	8001fd4 <__NVIC_SetPriority>
 800211a:	bf00      	nop
 800211c:	3718      	adds	r7, #24
 800211e:	46bd      	mov	sp, r7
 8002120:	bd80      	pop	{r7, pc}

08002122 <HAL_NVIC_EnableIRQ>:
 8002122:	b580      	push	{r7, lr}
 8002124:	b082      	sub	sp, #8
 8002126:	af00      	add	r7, sp, #0
 8002128:	4603      	mov	r3, r0
 800212a:	71fb      	strb	r3, [r7, #7]
 800212c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002130:	4618      	mov	r0, r3
 8002132:	f7ff ff31 	bl	8001f98 <__NVIC_EnableIRQ>
 8002136:	bf00      	nop
 8002138:	3708      	adds	r7, #8
 800213a:	46bd      	mov	sp, r7
 800213c:	bd80      	pop	{r7, pc}

0800213e <HAL_SYSTICK_Config>:
 800213e:	b580      	push	{r7, lr}
 8002140:	b082      	sub	sp, #8
 8002142:	af00      	add	r7, sp, #0
 8002144:	6078      	str	r0, [r7, #4]
 8002146:	6878      	ldr	r0, [r7, #4]
 8002148:	f7ff ffa2 	bl	8002090 <SysTick_Config>
 800214c:	4603      	mov	r3, r0
 800214e:	4618      	mov	r0, r3
 8002150:	3708      	adds	r7, #8
 8002152:	46bd      	mov	sp, r7
 8002154:	bd80      	pop	{r7, pc}
	...

08002158 <HAL_GPIO_Init>:
 8002158:	b480      	push	{r7}
 800215a:	b089      	sub	sp, #36	@ 0x24
 800215c:	af00      	add	r7, sp, #0
 800215e:	6078      	str	r0, [r7, #4]
 8002160:	6039      	str	r1, [r7, #0]
 8002162:	2300      	movs	r3, #0
 8002164:	617b      	str	r3, [r7, #20]
 8002166:	2300      	movs	r3, #0
 8002168:	613b      	str	r3, [r7, #16]
 800216a:	2300      	movs	r3, #0
 800216c:	61bb      	str	r3, [r7, #24]
 800216e:	2300      	movs	r3, #0
 8002170:	61fb      	str	r3, [r7, #28]
 8002172:	e165      	b.n	8002440 <HAL_GPIO_Init+0x2e8>
 8002174:	2201      	movs	r2, #1
 8002176:	69fb      	ldr	r3, [r7, #28]
 8002178:	fa02 f303 	lsl.w	r3, r2, r3
 800217c:	617b      	str	r3, [r7, #20]
 800217e:	683b      	ldr	r3, [r7, #0]
 8002180:	681b      	ldr	r3, [r3, #0]
 8002182:	697a      	ldr	r2, [r7, #20]
 8002184:	4013      	ands	r3, r2
 8002186:	613b      	str	r3, [r7, #16]
 8002188:	693a      	ldr	r2, [r7, #16]
 800218a:	697b      	ldr	r3, [r7, #20]
 800218c:	429a      	cmp	r2, r3
 800218e:	f040 8154 	bne.w	800243a <HAL_GPIO_Init+0x2e2>
 8002192:	683b      	ldr	r3, [r7, #0]
 8002194:	685b      	ldr	r3, [r3, #4]
 8002196:	f003 0303 	and.w	r3, r3, #3
 800219a:	2b01      	cmp	r3, #1
 800219c:	d005      	beq.n	80021aa <HAL_GPIO_Init+0x52>
 800219e:	683b      	ldr	r3, [r7, #0]
 80021a0:	685b      	ldr	r3, [r3, #4]
 80021a2:	f003 0303 	and.w	r3, r3, #3
 80021a6:	2b02      	cmp	r3, #2
 80021a8:	d130      	bne.n	800220c <HAL_GPIO_Init+0xb4>
 80021aa:	687b      	ldr	r3, [r7, #4]
 80021ac:	689b      	ldr	r3, [r3, #8]
 80021ae:	61bb      	str	r3, [r7, #24]
 80021b0:	69fb      	ldr	r3, [r7, #28]
 80021b2:	005b      	lsls	r3, r3, #1
 80021b4:	2203      	movs	r2, #3
 80021b6:	fa02 f303 	lsl.w	r3, r2, r3
 80021ba:	43db      	mvns	r3, r3
 80021bc:	69ba      	ldr	r2, [r7, #24]
 80021be:	4013      	ands	r3, r2
 80021c0:	61bb      	str	r3, [r7, #24]
 80021c2:	683b      	ldr	r3, [r7, #0]
 80021c4:	68da      	ldr	r2, [r3, #12]
 80021c6:	69fb      	ldr	r3, [r7, #28]
 80021c8:	005b      	lsls	r3, r3, #1
 80021ca:	fa02 f303 	lsl.w	r3, r2, r3
 80021ce:	69ba      	ldr	r2, [r7, #24]
 80021d0:	4313      	orrs	r3, r2
 80021d2:	61bb      	str	r3, [r7, #24]
 80021d4:	687b      	ldr	r3, [r7, #4]
 80021d6:	69ba      	ldr	r2, [r7, #24]
 80021d8:	609a      	str	r2, [r3, #8]
 80021da:	687b      	ldr	r3, [r7, #4]
 80021dc:	685b      	ldr	r3, [r3, #4]
 80021de:	61bb      	str	r3, [r7, #24]
 80021e0:	2201      	movs	r2, #1
 80021e2:	69fb      	ldr	r3, [r7, #28]
 80021e4:	fa02 f303 	lsl.w	r3, r2, r3
 80021e8:	43db      	mvns	r3, r3
 80021ea:	69ba      	ldr	r2, [r7, #24]
 80021ec:	4013      	ands	r3, r2
 80021ee:	61bb      	str	r3, [r7, #24]
 80021f0:	683b      	ldr	r3, [r7, #0]
 80021f2:	685b      	ldr	r3, [r3, #4]
 80021f4:	091b      	lsrs	r3, r3, #4
 80021f6:	f003 0201 	and.w	r2, r3, #1
 80021fa:	69fb      	ldr	r3, [r7, #28]
 80021fc:	fa02 f303 	lsl.w	r3, r2, r3
 8002200:	69ba      	ldr	r2, [r7, #24]
 8002202:	4313      	orrs	r3, r2
 8002204:	61bb      	str	r3, [r7, #24]
 8002206:	687b      	ldr	r3, [r7, #4]
 8002208:	69ba      	ldr	r2, [r7, #24]
 800220a:	605a      	str	r2, [r3, #4]
 800220c:	683b      	ldr	r3, [r7, #0]
 800220e:	685b      	ldr	r3, [r3, #4]
 8002210:	f003 0303 	and.w	r3, r3, #3
 8002214:	2b03      	cmp	r3, #3
 8002216:	d017      	beq.n	8002248 <HAL_GPIO_Init+0xf0>
 8002218:	687b      	ldr	r3, [r7, #4]
 800221a:	68db      	ldr	r3, [r3, #12]
 800221c:	61bb      	str	r3, [r7, #24]
 800221e:	69fb      	ldr	r3, [r7, #28]
 8002220:	005b      	lsls	r3, r3, #1
 8002222:	2203      	movs	r2, #3
 8002224:	fa02 f303 	lsl.w	r3, r2, r3
 8002228:	43db      	mvns	r3, r3
 800222a:	69ba      	ldr	r2, [r7, #24]
 800222c:	4013      	ands	r3, r2
 800222e:	61bb      	str	r3, [r7, #24]
 8002230:	683b      	ldr	r3, [r7, #0]
 8002232:	689a      	ldr	r2, [r3, #8]
 8002234:	69fb      	ldr	r3, [r7, #28]
 8002236:	005b      	lsls	r3, r3, #1
 8002238:	fa02 f303 	lsl.w	r3, r2, r3
 800223c:	69ba      	ldr	r2, [r7, #24]
 800223e:	4313      	orrs	r3, r2
 8002240:	61bb      	str	r3, [r7, #24]
 8002242:	687b      	ldr	r3, [r7, #4]
 8002244:	69ba      	ldr	r2, [r7, #24]
 8002246:	60da      	str	r2, [r3, #12]
 8002248:	683b      	ldr	r3, [r7, #0]
 800224a:	685b      	ldr	r3, [r3, #4]
 800224c:	f003 0303 	and.w	r3, r3, #3
 8002250:	2b02      	cmp	r3, #2
 8002252:	d123      	bne.n	800229c <HAL_GPIO_Init+0x144>
 8002254:	69fb      	ldr	r3, [r7, #28]
 8002256:	08da      	lsrs	r2, r3, #3
 8002258:	687b      	ldr	r3, [r7, #4]
 800225a:	3208      	adds	r2, #8
 800225c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002260:	61bb      	str	r3, [r7, #24]
 8002262:	69fb      	ldr	r3, [r7, #28]
 8002264:	f003 0307 	and.w	r3, r3, #7
 8002268:	009b      	lsls	r3, r3, #2
 800226a:	220f      	movs	r2, #15
 800226c:	fa02 f303 	lsl.w	r3, r2, r3
 8002270:	43db      	mvns	r3, r3
 8002272:	69ba      	ldr	r2, [r7, #24]
 8002274:	4013      	ands	r3, r2
 8002276:	61bb      	str	r3, [r7, #24]
 8002278:	683b      	ldr	r3, [r7, #0]
 800227a:	691a      	ldr	r2, [r3, #16]
 800227c:	69fb      	ldr	r3, [r7, #28]
 800227e:	f003 0307 	and.w	r3, r3, #7
 8002282:	009b      	lsls	r3, r3, #2
 8002284:	fa02 f303 	lsl.w	r3, r2, r3
 8002288:	69ba      	ldr	r2, [r7, #24]
 800228a:	4313      	orrs	r3, r2
 800228c:	61bb      	str	r3, [r7, #24]
 800228e:	69fb      	ldr	r3, [r7, #28]
 8002290:	08da      	lsrs	r2, r3, #3
 8002292:	687b      	ldr	r3, [r7, #4]
 8002294:	3208      	adds	r2, #8
 8002296:	69b9      	ldr	r1, [r7, #24]
 8002298:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800229c:	687b      	ldr	r3, [r7, #4]
 800229e:	681b      	ldr	r3, [r3, #0]
 80022a0:	61bb      	str	r3, [r7, #24]
 80022a2:	69fb      	ldr	r3, [r7, #28]
 80022a4:	005b      	lsls	r3, r3, #1
 80022a6:	2203      	movs	r2, #3
 80022a8:	fa02 f303 	lsl.w	r3, r2, r3
 80022ac:	43db      	mvns	r3, r3
 80022ae:	69ba      	ldr	r2, [r7, #24]
 80022b0:	4013      	ands	r3, r2
 80022b2:	61bb      	str	r3, [r7, #24]
 80022b4:	683b      	ldr	r3, [r7, #0]
 80022b6:	685b      	ldr	r3, [r3, #4]
 80022b8:	f003 0203 	and.w	r2, r3, #3
 80022bc:	69fb      	ldr	r3, [r7, #28]
 80022be:	005b      	lsls	r3, r3, #1
 80022c0:	fa02 f303 	lsl.w	r3, r2, r3
 80022c4:	69ba      	ldr	r2, [r7, #24]
 80022c6:	4313      	orrs	r3, r2
 80022c8:	61bb      	str	r3, [r7, #24]
 80022ca:	687b      	ldr	r3, [r7, #4]
 80022cc:	69ba      	ldr	r2, [r7, #24]
 80022ce:	601a      	str	r2, [r3, #0]
 80022d0:	683b      	ldr	r3, [r7, #0]
 80022d2:	685b      	ldr	r3, [r3, #4]
 80022d4:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80022d8:	2b00      	cmp	r3, #0
 80022da:	f000 80ae 	beq.w	800243a <HAL_GPIO_Init+0x2e2>
 80022de:	2300      	movs	r3, #0
 80022e0:	60fb      	str	r3, [r7, #12]
 80022e2:	4b5d      	ldr	r3, [pc, #372]	@ (8002458 <HAL_GPIO_Init+0x300>)
 80022e4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80022e6:	4a5c      	ldr	r2, [pc, #368]	@ (8002458 <HAL_GPIO_Init+0x300>)
 80022e8:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80022ec:	6453      	str	r3, [r2, #68]	@ 0x44
 80022ee:	4b5a      	ldr	r3, [pc, #360]	@ (8002458 <HAL_GPIO_Init+0x300>)
 80022f0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80022f2:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80022f6:	60fb      	str	r3, [r7, #12]
 80022f8:	68fb      	ldr	r3, [r7, #12]
 80022fa:	4a58      	ldr	r2, [pc, #352]	@ (800245c <HAL_GPIO_Init+0x304>)
 80022fc:	69fb      	ldr	r3, [r7, #28]
 80022fe:	089b      	lsrs	r3, r3, #2
 8002300:	3302      	adds	r3, #2
 8002302:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002306:	61bb      	str	r3, [r7, #24]
 8002308:	69fb      	ldr	r3, [r7, #28]
 800230a:	f003 0303 	and.w	r3, r3, #3
 800230e:	009b      	lsls	r3, r3, #2
 8002310:	220f      	movs	r2, #15
 8002312:	fa02 f303 	lsl.w	r3, r2, r3
 8002316:	43db      	mvns	r3, r3
 8002318:	69ba      	ldr	r2, [r7, #24]
 800231a:	4013      	ands	r3, r2
 800231c:	61bb      	str	r3, [r7, #24]
 800231e:	687b      	ldr	r3, [r7, #4]
 8002320:	4a4f      	ldr	r2, [pc, #316]	@ (8002460 <HAL_GPIO_Init+0x308>)
 8002322:	4293      	cmp	r3, r2
 8002324:	d025      	beq.n	8002372 <HAL_GPIO_Init+0x21a>
 8002326:	687b      	ldr	r3, [r7, #4]
 8002328:	4a4e      	ldr	r2, [pc, #312]	@ (8002464 <HAL_GPIO_Init+0x30c>)
 800232a:	4293      	cmp	r3, r2
 800232c:	d01f      	beq.n	800236e <HAL_GPIO_Init+0x216>
 800232e:	687b      	ldr	r3, [r7, #4]
 8002330:	4a4d      	ldr	r2, [pc, #308]	@ (8002468 <HAL_GPIO_Init+0x310>)
 8002332:	4293      	cmp	r3, r2
 8002334:	d019      	beq.n	800236a <HAL_GPIO_Init+0x212>
 8002336:	687b      	ldr	r3, [r7, #4]
 8002338:	4a4c      	ldr	r2, [pc, #304]	@ (800246c <HAL_GPIO_Init+0x314>)
 800233a:	4293      	cmp	r3, r2
 800233c:	d013      	beq.n	8002366 <HAL_GPIO_Init+0x20e>
 800233e:	687b      	ldr	r3, [r7, #4]
 8002340:	4a4b      	ldr	r2, [pc, #300]	@ (8002470 <HAL_GPIO_Init+0x318>)
 8002342:	4293      	cmp	r3, r2
 8002344:	d00d      	beq.n	8002362 <HAL_GPIO_Init+0x20a>
 8002346:	687b      	ldr	r3, [r7, #4]
 8002348:	4a4a      	ldr	r2, [pc, #296]	@ (8002474 <HAL_GPIO_Init+0x31c>)
 800234a:	4293      	cmp	r3, r2
 800234c:	d007      	beq.n	800235e <HAL_GPIO_Init+0x206>
 800234e:	687b      	ldr	r3, [r7, #4]
 8002350:	4a49      	ldr	r2, [pc, #292]	@ (8002478 <HAL_GPIO_Init+0x320>)
 8002352:	4293      	cmp	r3, r2
 8002354:	d101      	bne.n	800235a <HAL_GPIO_Init+0x202>
 8002356:	2306      	movs	r3, #6
 8002358:	e00c      	b.n	8002374 <HAL_GPIO_Init+0x21c>
 800235a:	2307      	movs	r3, #7
 800235c:	e00a      	b.n	8002374 <HAL_GPIO_Init+0x21c>
 800235e:	2305      	movs	r3, #5
 8002360:	e008      	b.n	8002374 <HAL_GPIO_Init+0x21c>
 8002362:	2304      	movs	r3, #4
 8002364:	e006      	b.n	8002374 <HAL_GPIO_Init+0x21c>
 8002366:	2303      	movs	r3, #3
 8002368:	e004      	b.n	8002374 <HAL_GPIO_Init+0x21c>
 800236a:	2302      	movs	r3, #2
 800236c:	e002      	b.n	8002374 <HAL_GPIO_Init+0x21c>
 800236e:	2301      	movs	r3, #1
 8002370:	e000      	b.n	8002374 <HAL_GPIO_Init+0x21c>
 8002372:	2300      	movs	r3, #0
 8002374:	69fa      	ldr	r2, [r7, #28]
 8002376:	f002 0203 	and.w	r2, r2, #3
 800237a:	0092      	lsls	r2, r2, #2
 800237c:	4093      	lsls	r3, r2
 800237e:	69ba      	ldr	r2, [r7, #24]
 8002380:	4313      	orrs	r3, r2
 8002382:	61bb      	str	r3, [r7, #24]
 8002384:	4935      	ldr	r1, [pc, #212]	@ (800245c <HAL_GPIO_Init+0x304>)
 8002386:	69fb      	ldr	r3, [r7, #28]
 8002388:	089b      	lsrs	r3, r3, #2
 800238a:	3302      	adds	r3, #2
 800238c:	69ba      	ldr	r2, [r7, #24]
 800238e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002392:	4b3a      	ldr	r3, [pc, #232]	@ (800247c <HAL_GPIO_Init+0x324>)
 8002394:	689b      	ldr	r3, [r3, #8]
 8002396:	61bb      	str	r3, [r7, #24]
 8002398:	693b      	ldr	r3, [r7, #16]
 800239a:	43db      	mvns	r3, r3
 800239c:	69ba      	ldr	r2, [r7, #24]
 800239e:	4013      	ands	r3, r2
 80023a0:	61bb      	str	r3, [r7, #24]
 80023a2:	683b      	ldr	r3, [r7, #0]
 80023a4:	685b      	ldr	r3, [r3, #4]
 80023a6:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80023aa:	2b00      	cmp	r3, #0
 80023ac:	d003      	beq.n	80023b6 <HAL_GPIO_Init+0x25e>
 80023ae:	69ba      	ldr	r2, [r7, #24]
 80023b0:	693b      	ldr	r3, [r7, #16]
 80023b2:	4313      	orrs	r3, r2
 80023b4:	61bb      	str	r3, [r7, #24]
 80023b6:	4a31      	ldr	r2, [pc, #196]	@ (800247c <HAL_GPIO_Init+0x324>)
 80023b8:	69bb      	ldr	r3, [r7, #24]
 80023ba:	6093      	str	r3, [r2, #8]
 80023bc:	4b2f      	ldr	r3, [pc, #188]	@ (800247c <HAL_GPIO_Init+0x324>)
 80023be:	68db      	ldr	r3, [r3, #12]
 80023c0:	61bb      	str	r3, [r7, #24]
 80023c2:	693b      	ldr	r3, [r7, #16]
 80023c4:	43db      	mvns	r3, r3
 80023c6:	69ba      	ldr	r2, [r7, #24]
 80023c8:	4013      	ands	r3, r2
 80023ca:	61bb      	str	r3, [r7, #24]
 80023cc:	683b      	ldr	r3, [r7, #0]
 80023ce:	685b      	ldr	r3, [r3, #4]
 80023d0:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80023d4:	2b00      	cmp	r3, #0
 80023d6:	d003      	beq.n	80023e0 <HAL_GPIO_Init+0x288>
 80023d8:	69ba      	ldr	r2, [r7, #24]
 80023da:	693b      	ldr	r3, [r7, #16]
 80023dc:	4313      	orrs	r3, r2
 80023de:	61bb      	str	r3, [r7, #24]
 80023e0:	4a26      	ldr	r2, [pc, #152]	@ (800247c <HAL_GPIO_Init+0x324>)
 80023e2:	69bb      	ldr	r3, [r7, #24]
 80023e4:	60d3      	str	r3, [r2, #12]
 80023e6:	4b25      	ldr	r3, [pc, #148]	@ (800247c <HAL_GPIO_Init+0x324>)
 80023e8:	685b      	ldr	r3, [r3, #4]
 80023ea:	61bb      	str	r3, [r7, #24]
 80023ec:	693b      	ldr	r3, [r7, #16]
 80023ee:	43db      	mvns	r3, r3
 80023f0:	69ba      	ldr	r2, [r7, #24]
 80023f2:	4013      	ands	r3, r2
 80023f4:	61bb      	str	r3, [r7, #24]
 80023f6:	683b      	ldr	r3, [r7, #0]
 80023f8:	685b      	ldr	r3, [r3, #4]
 80023fa:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80023fe:	2b00      	cmp	r3, #0
 8002400:	d003      	beq.n	800240a <HAL_GPIO_Init+0x2b2>
 8002402:	69ba      	ldr	r2, [r7, #24]
 8002404:	693b      	ldr	r3, [r7, #16]
 8002406:	4313      	orrs	r3, r2
 8002408:	61bb      	str	r3, [r7, #24]
 800240a:	4a1c      	ldr	r2, [pc, #112]	@ (800247c <HAL_GPIO_Init+0x324>)
 800240c:	69bb      	ldr	r3, [r7, #24]
 800240e:	6053      	str	r3, [r2, #4]
 8002410:	4b1a      	ldr	r3, [pc, #104]	@ (800247c <HAL_GPIO_Init+0x324>)
 8002412:	681b      	ldr	r3, [r3, #0]
 8002414:	61bb      	str	r3, [r7, #24]
 8002416:	693b      	ldr	r3, [r7, #16]
 8002418:	43db      	mvns	r3, r3
 800241a:	69ba      	ldr	r2, [r7, #24]
 800241c:	4013      	ands	r3, r2
 800241e:	61bb      	str	r3, [r7, #24]
 8002420:	683b      	ldr	r3, [r7, #0]
 8002422:	685b      	ldr	r3, [r3, #4]
 8002424:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002428:	2b00      	cmp	r3, #0
 800242a:	d003      	beq.n	8002434 <HAL_GPIO_Init+0x2dc>
 800242c:	69ba      	ldr	r2, [r7, #24]
 800242e:	693b      	ldr	r3, [r7, #16]
 8002430:	4313      	orrs	r3, r2
 8002432:	61bb      	str	r3, [r7, #24]
 8002434:	4a11      	ldr	r2, [pc, #68]	@ (800247c <HAL_GPIO_Init+0x324>)
 8002436:	69bb      	ldr	r3, [r7, #24]
 8002438:	6013      	str	r3, [r2, #0]
 800243a:	69fb      	ldr	r3, [r7, #28]
 800243c:	3301      	adds	r3, #1
 800243e:	61fb      	str	r3, [r7, #28]
 8002440:	69fb      	ldr	r3, [r7, #28]
 8002442:	2b0f      	cmp	r3, #15
 8002444:	f67f ae96 	bls.w	8002174 <HAL_GPIO_Init+0x1c>
 8002448:	bf00      	nop
 800244a:	bf00      	nop
 800244c:	3724      	adds	r7, #36	@ 0x24
 800244e:	46bd      	mov	sp, r7
 8002450:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002454:	4770      	bx	lr
 8002456:	bf00      	nop
 8002458:	40023800 	.word	0x40023800
 800245c:	40013800 	.word	0x40013800
 8002460:	40020000 	.word	0x40020000
 8002464:	40020400 	.word	0x40020400
 8002468:	40020800 	.word	0x40020800
 800246c:	40020c00 	.word	0x40020c00
 8002470:	40021000 	.word	0x40021000
 8002474:	40021400 	.word	0x40021400
 8002478:	40021800 	.word	0x40021800
 800247c:	40013c00 	.word	0x40013c00

08002480 <HAL_GPIO_WritePin>:
 8002480:	b480      	push	{r7}
 8002482:	b083      	sub	sp, #12
 8002484:	af00      	add	r7, sp, #0
 8002486:	6078      	str	r0, [r7, #4]
 8002488:	460b      	mov	r3, r1
 800248a:	807b      	strh	r3, [r7, #2]
 800248c:	4613      	mov	r3, r2
 800248e:	707b      	strb	r3, [r7, #1]
 8002490:	787b      	ldrb	r3, [r7, #1]
 8002492:	2b00      	cmp	r3, #0
 8002494:	d003      	beq.n	800249e <HAL_GPIO_WritePin+0x1e>
 8002496:	887a      	ldrh	r2, [r7, #2]
 8002498:	687b      	ldr	r3, [r7, #4]
 800249a:	619a      	str	r2, [r3, #24]
 800249c:	e003      	b.n	80024a6 <HAL_GPIO_WritePin+0x26>
 800249e:	887b      	ldrh	r3, [r7, #2]
 80024a0:	041a      	lsls	r2, r3, #16
 80024a2:	687b      	ldr	r3, [r7, #4]
 80024a4:	619a      	str	r2, [r3, #24]
 80024a6:	bf00      	nop
 80024a8:	370c      	adds	r7, #12
 80024aa:	46bd      	mov	sp, r7
 80024ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024b0:	4770      	bx	lr

080024b2 <HAL_GPIO_TogglePin>:
 80024b2:	b480      	push	{r7}
 80024b4:	b085      	sub	sp, #20
 80024b6:	af00      	add	r7, sp, #0
 80024b8:	6078      	str	r0, [r7, #4]
 80024ba:	460b      	mov	r3, r1
 80024bc:	807b      	strh	r3, [r7, #2]
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	695b      	ldr	r3, [r3, #20]
 80024c2:	60fb      	str	r3, [r7, #12]
 80024c4:	887a      	ldrh	r2, [r7, #2]
 80024c6:	68fb      	ldr	r3, [r7, #12]
 80024c8:	4013      	ands	r3, r2
 80024ca:	041a      	lsls	r2, r3, #16
 80024cc:	68fb      	ldr	r3, [r7, #12]
 80024ce:	43d9      	mvns	r1, r3
 80024d0:	887b      	ldrh	r3, [r7, #2]
 80024d2:	400b      	ands	r3, r1
 80024d4:	431a      	orrs	r2, r3
 80024d6:	687b      	ldr	r3, [r7, #4]
 80024d8:	619a      	str	r2, [r3, #24]
 80024da:	bf00      	nop
 80024dc:	3714      	adds	r7, #20
 80024de:	46bd      	mov	sp, r7
 80024e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024e4:	4770      	bx	lr
	...

080024e8 <HAL_GPIO_EXTI_IRQHandler>:
 80024e8:	b580      	push	{r7, lr}
 80024ea:	b082      	sub	sp, #8
 80024ec:	af00      	add	r7, sp, #0
 80024ee:	4603      	mov	r3, r0
 80024f0:	80fb      	strh	r3, [r7, #6]
 80024f2:	4b08      	ldr	r3, [pc, #32]	@ (8002514 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80024f4:	695a      	ldr	r2, [r3, #20]
 80024f6:	88fb      	ldrh	r3, [r7, #6]
 80024f8:	4013      	ands	r3, r2
 80024fa:	2b00      	cmp	r3, #0
 80024fc:	d006      	beq.n	800250c <HAL_GPIO_EXTI_IRQHandler+0x24>
 80024fe:	4a05      	ldr	r2, [pc, #20]	@ (8002514 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002500:	88fb      	ldrh	r3, [r7, #6]
 8002502:	6153      	str	r3, [r2, #20]
 8002504:	88fb      	ldrh	r3, [r7, #6]
 8002506:	4618      	mov	r0, r3
 8002508:	f7ff fc30 	bl	8001d6c <HAL_GPIO_EXTI_Callback>
 800250c:	bf00      	nop
 800250e:	3708      	adds	r7, #8
 8002510:	46bd      	mov	sp, r7
 8002512:	bd80      	pop	{r7, pc}
 8002514:	40013c00 	.word	0x40013c00

08002518 <HAL_RCC_ClockConfig>:
 8002518:	b580      	push	{r7, lr}
 800251a:	b084      	sub	sp, #16
 800251c:	af00      	add	r7, sp, #0
 800251e:	6078      	str	r0, [r7, #4]
 8002520:	6039      	str	r1, [r7, #0]
 8002522:	687b      	ldr	r3, [r7, #4]
 8002524:	2b00      	cmp	r3, #0
 8002526:	d101      	bne.n	800252c <HAL_RCC_ClockConfig+0x14>
 8002528:	2301      	movs	r3, #1
 800252a:	e0cc      	b.n	80026c6 <HAL_RCC_ClockConfig+0x1ae>
 800252c:	4b68      	ldr	r3, [pc, #416]	@ (80026d0 <HAL_RCC_ClockConfig+0x1b8>)
 800252e:	681b      	ldr	r3, [r3, #0]
 8002530:	f003 030f 	and.w	r3, r3, #15
 8002534:	683a      	ldr	r2, [r7, #0]
 8002536:	429a      	cmp	r2, r3
 8002538:	d90c      	bls.n	8002554 <HAL_RCC_ClockConfig+0x3c>
 800253a:	4b65      	ldr	r3, [pc, #404]	@ (80026d0 <HAL_RCC_ClockConfig+0x1b8>)
 800253c:	683a      	ldr	r2, [r7, #0]
 800253e:	b2d2      	uxtb	r2, r2
 8002540:	701a      	strb	r2, [r3, #0]
 8002542:	4b63      	ldr	r3, [pc, #396]	@ (80026d0 <HAL_RCC_ClockConfig+0x1b8>)
 8002544:	681b      	ldr	r3, [r3, #0]
 8002546:	f003 030f 	and.w	r3, r3, #15
 800254a:	683a      	ldr	r2, [r7, #0]
 800254c:	429a      	cmp	r2, r3
 800254e:	d001      	beq.n	8002554 <HAL_RCC_ClockConfig+0x3c>
 8002550:	2301      	movs	r3, #1
 8002552:	e0b8      	b.n	80026c6 <HAL_RCC_ClockConfig+0x1ae>
 8002554:	687b      	ldr	r3, [r7, #4]
 8002556:	681b      	ldr	r3, [r3, #0]
 8002558:	f003 0302 	and.w	r3, r3, #2
 800255c:	2b00      	cmp	r3, #0
 800255e:	d020      	beq.n	80025a2 <HAL_RCC_ClockConfig+0x8a>
 8002560:	687b      	ldr	r3, [r7, #4]
 8002562:	681b      	ldr	r3, [r3, #0]
 8002564:	f003 0304 	and.w	r3, r3, #4
 8002568:	2b00      	cmp	r3, #0
 800256a:	d005      	beq.n	8002578 <HAL_RCC_ClockConfig+0x60>
 800256c:	4b59      	ldr	r3, [pc, #356]	@ (80026d4 <HAL_RCC_ClockConfig+0x1bc>)
 800256e:	689b      	ldr	r3, [r3, #8]
 8002570:	4a58      	ldr	r2, [pc, #352]	@ (80026d4 <HAL_RCC_ClockConfig+0x1bc>)
 8002572:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8002576:	6093      	str	r3, [r2, #8]
 8002578:	687b      	ldr	r3, [r7, #4]
 800257a:	681b      	ldr	r3, [r3, #0]
 800257c:	f003 0308 	and.w	r3, r3, #8
 8002580:	2b00      	cmp	r3, #0
 8002582:	d005      	beq.n	8002590 <HAL_RCC_ClockConfig+0x78>
 8002584:	4b53      	ldr	r3, [pc, #332]	@ (80026d4 <HAL_RCC_ClockConfig+0x1bc>)
 8002586:	689b      	ldr	r3, [r3, #8]
 8002588:	4a52      	ldr	r2, [pc, #328]	@ (80026d4 <HAL_RCC_ClockConfig+0x1bc>)
 800258a:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 800258e:	6093      	str	r3, [r2, #8]
 8002590:	4b50      	ldr	r3, [pc, #320]	@ (80026d4 <HAL_RCC_ClockConfig+0x1bc>)
 8002592:	689b      	ldr	r3, [r3, #8]
 8002594:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002598:	687b      	ldr	r3, [r7, #4]
 800259a:	689b      	ldr	r3, [r3, #8]
 800259c:	494d      	ldr	r1, [pc, #308]	@ (80026d4 <HAL_RCC_ClockConfig+0x1bc>)
 800259e:	4313      	orrs	r3, r2
 80025a0:	608b      	str	r3, [r1, #8]
 80025a2:	687b      	ldr	r3, [r7, #4]
 80025a4:	681b      	ldr	r3, [r3, #0]
 80025a6:	f003 0301 	and.w	r3, r3, #1
 80025aa:	2b00      	cmp	r3, #0
 80025ac:	d044      	beq.n	8002638 <HAL_RCC_ClockConfig+0x120>
 80025ae:	687b      	ldr	r3, [r7, #4]
 80025b0:	685b      	ldr	r3, [r3, #4]
 80025b2:	2b01      	cmp	r3, #1
 80025b4:	d107      	bne.n	80025c6 <HAL_RCC_ClockConfig+0xae>
 80025b6:	4b47      	ldr	r3, [pc, #284]	@ (80026d4 <HAL_RCC_ClockConfig+0x1bc>)
 80025b8:	681b      	ldr	r3, [r3, #0]
 80025ba:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80025be:	2b00      	cmp	r3, #0
 80025c0:	d119      	bne.n	80025f6 <HAL_RCC_ClockConfig+0xde>
 80025c2:	2301      	movs	r3, #1
 80025c4:	e07f      	b.n	80026c6 <HAL_RCC_ClockConfig+0x1ae>
 80025c6:	687b      	ldr	r3, [r7, #4]
 80025c8:	685b      	ldr	r3, [r3, #4]
 80025ca:	2b02      	cmp	r3, #2
 80025cc:	d003      	beq.n	80025d6 <HAL_RCC_ClockConfig+0xbe>
 80025ce:	687b      	ldr	r3, [r7, #4]
 80025d0:	685b      	ldr	r3, [r3, #4]
 80025d2:	2b03      	cmp	r3, #3
 80025d4:	d107      	bne.n	80025e6 <HAL_RCC_ClockConfig+0xce>
 80025d6:	4b3f      	ldr	r3, [pc, #252]	@ (80026d4 <HAL_RCC_ClockConfig+0x1bc>)
 80025d8:	681b      	ldr	r3, [r3, #0]
 80025da:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80025de:	2b00      	cmp	r3, #0
 80025e0:	d109      	bne.n	80025f6 <HAL_RCC_ClockConfig+0xde>
 80025e2:	2301      	movs	r3, #1
 80025e4:	e06f      	b.n	80026c6 <HAL_RCC_ClockConfig+0x1ae>
 80025e6:	4b3b      	ldr	r3, [pc, #236]	@ (80026d4 <HAL_RCC_ClockConfig+0x1bc>)
 80025e8:	681b      	ldr	r3, [r3, #0]
 80025ea:	f003 0302 	and.w	r3, r3, #2
 80025ee:	2b00      	cmp	r3, #0
 80025f0:	d101      	bne.n	80025f6 <HAL_RCC_ClockConfig+0xde>
 80025f2:	2301      	movs	r3, #1
 80025f4:	e067      	b.n	80026c6 <HAL_RCC_ClockConfig+0x1ae>
 80025f6:	4b37      	ldr	r3, [pc, #220]	@ (80026d4 <HAL_RCC_ClockConfig+0x1bc>)
 80025f8:	689b      	ldr	r3, [r3, #8]
 80025fa:	f023 0203 	bic.w	r2, r3, #3
 80025fe:	687b      	ldr	r3, [r7, #4]
 8002600:	685b      	ldr	r3, [r3, #4]
 8002602:	4934      	ldr	r1, [pc, #208]	@ (80026d4 <HAL_RCC_ClockConfig+0x1bc>)
 8002604:	4313      	orrs	r3, r2
 8002606:	608b      	str	r3, [r1, #8]
 8002608:	f7ff fc64 	bl	8001ed4 <HAL_GetTick>
 800260c:	60f8      	str	r0, [r7, #12]
 800260e:	e00a      	b.n	8002626 <HAL_RCC_ClockConfig+0x10e>
 8002610:	f7ff fc60 	bl	8001ed4 <HAL_GetTick>
 8002614:	4602      	mov	r2, r0
 8002616:	68fb      	ldr	r3, [r7, #12]
 8002618:	1ad3      	subs	r3, r2, r3
 800261a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800261e:	4293      	cmp	r3, r2
 8002620:	d901      	bls.n	8002626 <HAL_RCC_ClockConfig+0x10e>
 8002622:	2303      	movs	r3, #3
 8002624:	e04f      	b.n	80026c6 <HAL_RCC_ClockConfig+0x1ae>
 8002626:	4b2b      	ldr	r3, [pc, #172]	@ (80026d4 <HAL_RCC_ClockConfig+0x1bc>)
 8002628:	689b      	ldr	r3, [r3, #8]
 800262a:	f003 020c 	and.w	r2, r3, #12
 800262e:	687b      	ldr	r3, [r7, #4]
 8002630:	685b      	ldr	r3, [r3, #4]
 8002632:	009b      	lsls	r3, r3, #2
 8002634:	429a      	cmp	r2, r3
 8002636:	d1eb      	bne.n	8002610 <HAL_RCC_ClockConfig+0xf8>
 8002638:	4b25      	ldr	r3, [pc, #148]	@ (80026d0 <HAL_RCC_ClockConfig+0x1b8>)
 800263a:	681b      	ldr	r3, [r3, #0]
 800263c:	f003 030f 	and.w	r3, r3, #15
 8002640:	683a      	ldr	r2, [r7, #0]
 8002642:	429a      	cmp	r2, r3
 8002644:	d20c      	bcs.n	8002660 <HAL_RCC_ClockConfig+0x148>
 8002646:	4b22      	ldr	r3, [pc, #136]	@ (80026d0 <HAL_RCC_ClockConfig+0x1b8>)
 8002648:	683a      	ldr	r2, [r7, #0]
 800264a:	b2d2      	uxtb	r2, r2
 800264c:	701a      	strb	r2, [r3, #0]
 800264e:	4b20      	ldr	r3, [pc, #128]	@ (80026d0 <HAL_RCC_ClockConfig+0x1b8>)
 8002650:	681b      	ldr	r3, [r3, #0]
 8002652:	f003 030f 	and.w	r3, r3, #15
 8002656:	683a      	ldr	r2, [r7, #0]
 8002658:	429a      	cmp	r2, r3
 800265a:	d001      	beq.n	8002660 <HAL_RCC_ClockConfig+0x148>
 800265c:	2301      	movs	r3, #1
 800265e:	e032      	b.n	80026c6 <HAL_RCC_ClockConfig+0x1ae>
 8002660:	687b      	ldr	r3, [r7, #4]
 8002662:	681b      	ldr	r3, [r3, #0]
 8002664:	f003 0304 	and.w	r3, r3, #4
 8002668:	2b00      	cmp	r3, #0
 800266a:	d008      	beq.n	800267e <HAL_RCC_ClockConfig+0x166>
 800266c:	4b19      	ldr	r3, [pc, #100]	@ (80026d4 <HAL_RCC_ClockConfig+0x1bc>)
 800266e:	689b      	ldr	r3, [r3, #8]
 8002670:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8002674:	687b      	ldr	r3, [r7, #4]
 8002676:	68db      	ldr	r3, [r3, #12]
 8002678:	4916      	ldr	r1, [pc, #88]	@ (80026d4 <HAL_RCC_ClockConfig+0x1bc>)
 800267a:	4313      	orrs	r3, r2
 800267c:	608b      	str	r3, [r1, #8]
 800267e:	687b      	ldr	r3, [r7, #4]
 8002680:	681b      	ldr	r3, [r3, #0]
 8002682:	f003 0308 	and.w	r3, r3, #8
 8002686:	2b00      	cmp	r3, #0
 8002688:	d009      	beq.n	800269e <HAL_RCC_ClockConfig+0x186>
 800268a:	4b12      	ldr	r3, [pc, #72]	@ (80026d4 <HAL_RCC_ClockConfig+0x1bc>)
 800268c:	689b      	ldr	r3, [r3, #8]
 800268e:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8002692:	687b      	ldr	r3, [r7, #4]
 8002694:	691b      	ldr	r3, [r3, #16]
 8002696:	00db      	lsls	r3, r3, #3
 8002698:	490e      	ldr	r1, [pc, #56]	@ (80026d4 <HAL_RCC_ClockConfig+0x1bc>)
 800269a:	4313      	orrs	r3, r2
 800269c:	608b      	str	r3, [r1, #8]
 800269e:	f000 f841 	bl	8002724 <HAL_RCC_GetSysClockFreq>
 80026a2:	4602      	mov	r2, r0
 80026a4:	4b0b      	ldr	r3, [pc, #44]	@ (80026d4 <HAL_RCC_ClockConfig+0x1bc>)
 80026a6:	689b      	ldr	r3, [r3, #8]
 80026a8:	091b      	lsrs	r3, r3, #4
 80026aa:	f003 030f 	and.w	r3, r3, #15
 80026ae:	490a      	ldr	r1, [pc, #40]	@ (80026d8 <HAL_RCC_ClockConfig+0x1c0>)
 80026b0:	5ccb      	ldrb	r3, [r1, r3]
 80026b2:	fa22 f303 	lsr.w	r3, r2, r3
 80026b6:	4a09      	ldr	r2, [pc, #36]	@ (80026dc <HAL_RCC_ClockConfig+0x1c4>)
 80026b8:	6013      	str	r3, [r2, #0]
 80026ba:	4b09      	ldr	r3, [pc, #36]	@ (80026e0 <HAL_RCC_ClockConfig+0x1c8>)
 80026bc:	681b      	ldr	r3, [r3, #0]
 80026be:	4618      	mov	r0, r3
 80026c0:	f7ff fbc4 	bl	8001e4c <HAL_InitTick>
 80026c4:	2300      	movs	r3, #0
 80026c6:	4618      	mov	r0, r3
 80026c8:	3710      	adds	r7, #16
 80026ca:	46bd      	mov	sp, r7
 80026cc:	bd80      	pop	{r7, pc}
 80026ce:	bf00      	nop
 80026d0:	40023c00 	.word	0x40023c00
 80026d4:	40023800 	.word	0x40023800
 80026d8:	0800475c 	.word	0x0800475c
 80026dc:	20000030 	.word	0x20000030
 80026e0:	20000034 	.word	0x20000034

080026e4 <HAL_RCC_GetHCLKFreq>:
 80026e4:	b480      	push	{r7}
 80026e6:	af00      	add	r7, sp, #0
 80026e8:	4b03      	ldr	r3, [pc, #12]	@ (80026f8 <HAL_RCC_GetHCLKFreq+0x14>)
 80026ea:	681b      	ldr	r3, [r3, #0]
 80026ec:	4618      	mov	r0, r3
 80026ee:	46bd      	mov	sp, r7
 80026f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026f4:	4770      	bx	lr
 80026f6:	bf00      	nop
 80026f8:	20000030 	.word	0x20000030

080026fc <HAL_RCC_GetPCLK2Freq>:
 80026fc:	b580      	push	{r7, lr}
 80026fe:	af00      	add	r7, sp, #0
 8002700:	f7ff fff0 	bl	80026e4 <HAL_RCC_GetHCLKFreq>
 8002704:	4602      	mov	r2, r0
 8002706:	4b05      	ldr	r3, [pc, #20]	@ (800271c <HAL_RCC_GetPCLK2Freq+0x20>)
 8002708:	689b      	ldr	r3, [r3, #8]
 800270a:	0b5b      	lsrs	r3, r3, #13
 800270c:	f003 0307 	and.w	r3, r3, #7
 8002710:	4903      	ldr	r1, [pc, #12]	@ (8002720 <HAL_RCC_GetPCLK2Freq+0x24>)
 8002712:	5ccb      	ldrb	r3, [r1, r3]
 8002714:	fa22 f303 	lsr.w	r3, r2, r3
 8002718:	4618      	mov	r0, r3
 800271a:	bd80      	pop	{r7, pc}
 800271c:	40023800 	.word	0x40023800
 8002720:	0800476c 	.word	0x0800476c

08002724 <HAL_RCC_GetSysClockFreq>:
 8002724:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002728:	b0ae      	sub	sp, #184	@ 0xb8
 800272a:	af00      	add	r7, sp, #0
 800272c:	2300      	movs	r3, #0
 800272e:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8002732:	2300      	movs	r3, #0
 8002734:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8002738:	2300      	movs	r3, #0
 800273a:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 800273e:	2300      	movs	r3, #0
 8002740:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8002744:	2300      	movs	r3, #0
 8002746:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800274a:	4bcb      	ldr	r3, [pc, #812]	@ (8002a78 <HAL_RCC_GetSysClockFreq+0x354>)
 800274c:	689b      	ldr	r3, [r3, #8]
 800274e:	f003 030c 	and.w	r3, r3, #12
 8002752:	2b0c      	cmp	r3, #12
 8002754:	f200 8206 	bhi.w	8002b64 <HAL_RCC_GetSysClockFreq+0x440>
 8002758:	a201      	add	r2, pc, #4	@ (adr r2, 8002760 <HAL_RCC_GetSysClockFreq+0x3c>)
 800275a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800275e:	bf00      	nop
 8002760:	08002795 	.word	0x08002795
 8002764:	08002b65 	.word	0x08002b65
 8002768:	08002b65 	.word	0x08002b65
 800276c:	08002b65 	.word	0x08002b65
 8002770:	0800279d 	.word	0x0800279d
 8002774:	08002b65 	.word	0x08002b65
 8002778:	08002b65 	.word	0x08002b65
 800277c:	08002b65 	.word	0x08002b65
 8002780:	080027a5 	.word	0x080027a5
 8002784:	08002b65 	.word	0x08002b65
 8002788:	08002b65 	.word	0x08002b65
 800278c:	08002b65 	.word	0x08002b65
 8002790:	08002995 	.word	0x08002995
 8002794:	4bb9      	ldr	r3, [pc, #740]	@ (8002a7c <HAL_RCC_GetSysClockFreq+0x358>)
 8002796:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800279a:	e1e7      	b.n	8002b6c <HAL_RCC_GetSysClockFreq+0x448>
 800279c:	4bb8      	ldr	r3, [pc, #736]	@ (8002a80 <HAL_RCC_GetSysClockFreq+0x35c>)
 800279e:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80027a2:	e1e3      	b.n	8002b6c <HAL_RCC_GetSysClockFreq+0x448>
 80027a4:	4bb4      	ldr	r3, [pc, #720]	@ (8002a78 <HAL_RCC_GetSysClockFreq+0x354>)
 80027a6:	685b      	ldr	r3, [r3, #4]
 80027a8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80027ac:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80027b0:	4bb1      	ldr	r3, [pc, #708]	@ (8002a78 <HAL_RCC_GetSysClockFreq+0x354>)
 80027b2:	685b      	ldr	r3, [r3, #4]
 80027b4:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80027b8:	2b00      	cmp	r3, #0
 80027ba:	d071      	beq.n	80028a0 <HAL_RCC_GetSysClockFreq+0x17c>
 80027bc:	4bae      	ldr	r3, [pc, #696]	@ (8002a78 <HAL_RCC_GetSysClockFreq+0x354>)
 80027be:	685b      	ldr	r3, [r3, #4]
 80027c0:	099b      	lsrs	r3, r3, #6
 80027c2:	2200      	movs	r2, #0
 80027c4:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80027c8:	f8c7 209c 	str.w	r2, [r7, #156]	@ 0x9c
 80027cc:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80027d0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80027d4:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80027d8:	2300      	movs	r3, #0
 80027da:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80027de:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 80027e2:	4622      	mov	r2, r4
 80027e4:	462b      	mov	r3, r5
 80027e6:	f04f 0000 	mov.w	r0, #0
 80027ea:	f04f 0100 	mov.w	r1, #0
 80027ee:	0159      	lsls	r1, r3, #5
 80027f0:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80027f4:	0150      	lsls	r0, r2, #5
 80027f6:	4602      	mov	r2, r0
 80027f8:	460b      	mov	r3, r1
 80027fa:	4621      	mov	r1, r4
 80027fc:	1a51      	subs	r1, r2, r1
 80027fe:	6439      	str	r1, [r7, #64]	@ 0x40
 8002800:	4629      	mov	r1, r5
 8002802:	eb63 0301 	sbc.w	r3, r3, r1
 8002806:	647b      	str	r3, [r7, #68]	@ 0x44
 8002808:	f04f 0200 	mov.w	r2, #0
 800280c:	f04f 0300 	mov.w	r3, #0
 8002810:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	@ 0x40
 8002814:	4649      	mov	r1, r9
 8002816:	018b      	lsls	r3, r1, #6
 8002818:	4641      	mov	r1, r8
 800281a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800281e:	4641      	mov	r1, r8
 8002820:	018a      	lsls	r2, r1, #6
 8002822:	4641      	mov	r1, r8
 8002824:	1a51      	subs	r1, r2, r1
 8002826:	63b9      	str	r1, [r7, #56]	@ 0x38
 8002828:	4649      	mov	r1, r9
 800282a:	eb63 0301 	sbc.w	r3, r3, r1
 800282e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8002830:	f04f 0200 	mov.w	r2, #0
 8002834:	f04f 0300 	mov.w	r3, #0
 8002838:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	@ 0x38
 800283c:	4649      	mov	r1, r9
 800283e:	00cb      	lsls	r3, r1, #3
 8002840:	4641      	mov	r1, r8
 8002842:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8002846:	4641      	mov	r1, r8
 8002848:	00ca      	lsls	r2, r1, #3
 800284a:	4610      	mov	r0, r2
 800284c:	4619      	mov	r1, r3
 800284e:	4603      	mov	r3, r0
 8002850:	4622      	mov	r2, r4
 8002852:	189b      	adds	r3, r3, r2
 8002854:	633b      	str	r3, [r7, #48]	@ 0x30
 8002856:	462b      	mov	r3, r5
 8002858:	460a      	mov	r2, r1
 800285a:	eb42 0303 	adc.w	r3, r2, r3
 800285e:	637b      	str	r3, [r7, #52]	@ 0x34
 8002860:	f04f 0200 	mov.w	r2, #0
 8002864:	f04f 0300 	mov.w	r3, #0
 8002868:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 800286c:	4629      	mov	r1, r5
 800286e:	024b      	lsls	r3, r1, #9
 8002870:	4621      	mov	r1, r4
 8002872:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8002876:	4621      	mov	r1, r4
 8002878:	024a      	lsls	r2, r1, #9
 800287a:	4610      	mov	r0, r2
 800287c:	4619      	mov	r1, r3
 800287e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8002882:	2200      	movs	r2, #0
 8002884:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8002888:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 800288c:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 8002890:	f7fd fcb8 	bl	8000204 <__aeabi_uldivmod>
 8002894:	4602      	mov	r2, r0
 8002896:	460b      	mov	r3, r1
 8002898:	4613      	mov	r3, r2
 800289a:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800289e:	e067      	b.n	8002970 <HAL_RCC_GetSysClockFreq+0x24c>
 80028a0:	4b75      	ldr	r3, [pc, #468]	@ (8002a78 <HAL_RCC_GetSysClockFreq+0x354>)
 80028a2:	685b      	ldr	r3, [r3, #4]
 80028a4:	099b      	lsrs	r3, r3, #6
 80028a6:	2200      	movs	r2, #0
 80028a8:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80028ac:	f8c7 2084 	str.w	r2, [r7, #132]	@ 0x84
 80028b0:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 80028b4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80028b8:	67bb      	str	r3, [r7, #120]	@ 0x78
 80028ba:	2300      	movs	r3, #0
 80028bc:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80028be:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	@ 0x78
 80028c2:	4622      	mov	r2, r4
 80028c4:	462b      	mov	r3, r5
 80028c6:	f04f 0000 	mov.w	r0, #0
 80028ca:	f04f 0100 	mov.w	r1, #0
 80028ce:	0159      	lsls	r1, r3, #5
 80028d0:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80028d4:	0150      	lsls	r0, r2, #5
 80028d6:	4602      	mov	r2, r0
 80028d8:	460b      	mov	r3, r1
 80028da:	4621      	mov	r1, r4
 80028dc:	1a51      	subs	r1, r2, r1
 80028de:	62b9      	str	r1, [r7, #40]	@ 0x28
 80028e0:	4629      	mov	r1, r5
 80028e2:	eb63 0301 	sbc.w	r3, r3, r1
 80028e6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80028e8:	f04f 0200 	mov.w	r2, #0
 80028ec:	f04f 0300 	mov.w	r3, #0
 80028f0:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	@ 0x28
 80028f4:	4649      	mov	r1, r9
 80028f6:	018b      	lsls	r3, r1, #6
 80028f8:	4641      	mov	r1, r8
 80028fa:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80028fe:	4641      	mov	r1, r8
 8002900:	018a      	lsls	r2, r1, #6
 8002902:	4641      	mov	r1, r8
 8002904:	ebb2 0a01 	subs.w	sl, r2, r1
 8002908:	4649      	mov	r1, r9
 800290a:	eb63 0b01 	sbc.w	fp, r3, r1
 800290e:	f04f 0200 	mov.w	r2, #0
 8002912:	f04f 0300 	mov.w	r3, #0
 8002916:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800291a:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800291e:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8002922:	4692      	mov	sl, r2
 8002924:	469b      	mov	fp, r3
 8002926:	4623      	mov	r3, r4
 8002928:	eb1a 0303 	adds.w	r3, sl, r3
 800292c:	623b      	str	r3, [r7, #32]
 800292e:	462b      	mov	r3, r5
 8002930:	eb4b 0303 	adc.w	r3, fp, r3
 8002934:	627b      	str	r3, [r7, #36]	@ 0x24
 8002936:	f04f 0200 	mov.w	r2, #0
 800293a:	f04f 0300 	mov.w	r3, #0
 800293e:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 8002942:	4629      	mov	r1, r5
 8002944:	028b      	lsls	r3, r1, #10
 8002946:	4621      	mov	r1, r4
 8002948:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 800294c:	4621      	mov	r1, r4
 800294e:	028a      	lsls	r2, r1, #10
 8002950:	4610      	mov	r0, r2
 8002952:	4619      	mov	r1, r3
 8002954:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8002958:	2200      	movs	r2, #0
 800295a:	673b      	str	r3, [r7, #112]	@ 0x70
 800295c:	677a      	str	r2, [r7, #116]	@ 0x74
 800295e:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 8002962:	f7fd fc4f 	bl	8000204 <__aeabi_uldivmod>
 8002966:	4602      	mov	r2, r0
 8002968:	460b      	mov	r3, r1
 800296a:	4613      	mov	r3, r2
 800296c:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8002970:	4b41      	ldr	r3, [pc, #260]	@ (8002a78 <HAL_RCC_GetSysClockFreq+0x354>)
 8002972:	685b      	ldr	r3, [r3, #4]
 8002974:	0c1b      	lsrs	r3, r3, #16
 8002976:	f003 0303 	and.w	r3, r3, #3
 800297a:	3301      	adds	r3, #1
 800297c:	005b      	lsls	r3, r3, #1
 800297e:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8002982:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8002986:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 800298a:	fbb2 f3f3 	udiv	r3, r2, r3
 800298e:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8002992:	e0eb      	b.n	8002b6c <HAL_RCC_GetSysClockFreq+0x448>
 8002994:	4b38      	ldr	r3, [pc, #224]	@ (8002a78 <HAL_RCC_GetSysClockFreq+0x354>)
 8002996:	685b      	ldr	r3, [r3, #4]
 8002998:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800299c:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80029a0:	4b35      	ldr	r3, [pc, #212]	@ (8002a78 <HAL_RCC_GetSysClockFreq+0x354>)
 80029a2:	685b      	ldr	r3, [r3, #4]
 80029a4:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80029a8:	2b00      	cmp	r3, #0
 80029aa:	d06b      	beq.n	8002a84 <HAL_RCC_GetSysClockFreq+0x360>
 80029ac:	4b32      	ldr	r3, [pc, #200]	@ (8002a78 <HAL_RCC_GetSysClockFreq+0x354>)
 80029ae:	685b      	ldr	r3, [r3, #4]
 80029b0:	099b      	lsrs	r3, r3, #6
 80029b2:	2200      	movs	r2, #0
 80029b4:	66bb      	str	r3, [r7, #104]	@ 0x68
 80029b6:	66fa      	str	r2, [r7, #108]	@ 0x6c
 80029b8:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80029ba:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80029be:	663b      	str	r3, [r7, #96]	@ 0x60
 80029c0:	2300      	movs	r3, #0
 80029c2:	667b      	str	r3, [r7, #100]	@ 0x64
 80029c4:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 80029c8:	4622      	mov	r2, r4
 80029ca:	462b      	mov	r3, r5
 80029cc:	f04f 0000 	mov.w	r0, #0
 80029d0:	f04f 0100 	mov.w	r1, #0
 80029d4:	0159      	lsls	r1, r3, #5
 80029d6:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80029da:	0150      	lsls	r0, r2, #5
 80029dc:	4602      	mov	r2, r0
 80029de:	460b      	mov	r3, r1
 80029e0:	4621      	mov	r1, r4
 80029e2:	1a51      	subs	r1, r2, r1
 80029e4:	61b9      	str	r1, [r7, #24]
 80029e6:	4629      	mov	r1, r5
 80029e8:	eb63 0301 	sbc.w	r3, r3, r1
 80029ec:	61fb      	str	r3, [r7, #28]
 80029ee:	f04f 0200 	mov.w	r2, #0
 80029f2:	f04f 0300 	mov.w	r3, #0
 80029f6:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 80029fa:	4659      	mov	r1, fp
 80029fc:	018b      	lsls	r3, r1, #6
 80029fe:	4651      	mov	r1, sl
 8002a00:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8002a04:	4651      	mov	r1, sl
 8002a06:	018a      	lsls	r2, r1, #6
 8002a08:	4651      	mov	r1, sl
 8002a0a:	ebb2 0801 	subs.w	r8, r2, r1
 8002a0e:	4659      	mov	r1, fp
 8002a10:	eb63 0901 	sbc.w	r9, r3, r1
 8002a14:	f04f 0200 	mov.w	r2, #0
 8002a18:	f04f 0300 	mov.w	r3, #0
 8002a1c:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8002a20:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8002a24:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8002a28:	4690      	mov	r8, r2
 8002a2a:	4699      	mov	r9, r3
 8002a2c:	4623      	mov	r3, r4
 8002a2e:	eb18 0303 	adds.w	r3, r8, r3
 8002a32:	613b      	str	r3, [r7, #16]
 8002a34:	462b      	mov	r3, r5
 8002a36:	eb49 0303 	adc.w	r3, r9, r3
 8002a3a:	617b      	str	r3, [r7, #20]
 8002a3c:	f04f 0200 	mov.w	r2, #0
 8002a40:	f04f 0300 	mov.w	r3, #0
 8002a44:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 8002a48:	4629      	mov	r1, r5
 8002a4a:	024b      	lsls	r3, r1, #9
 8002a4c:	4621      	mov	r1, r4
 8002a4e:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8002a52:	4621      	mov	r1, r4
 8002a54:	024a      	lsls	r2, r1, #9
 8002a56:	4610      	mov	r0, r2
 8002a58:	4619      	mov	r1, r3
 8002a5a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8002a5e:	2200      	movs	r2, #0
 8002a60:	65bb      	str	r3, [r7, #88]	@ 0x58
 8002a62:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8002a64:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8002a68:	f7fd fbcc 	bl	8000204 <__aeabi_uldivmod>
 8002a6c:	4602      	mov	r2, r0
 8002a6e:	460b      	mov	r3, r1
 8002a70:	4613      	mov	r3, r2
 8002a72:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8002a76:	e065      	b.n	8002b44 <HAL_RCC_GetSysClockFreq+0x420>
 8002a78:	40023800 	.word	0x40023800
 8002a7c:	00f42400 	.word	0x00f42400
 8002a80:	007a1200 	.word	0x007a1200
 8002a84:	4b3d      	ldr	r3, [pc, #244]	@ (8002b7c <HAL_RCC_GetSysClockFreq+0x458>)
 8002a86:	685b      	ldr	r3, [r3, #4]
 8002a88:	099b      	lsrs	r3, r3, #6
 8002a8a:	2200      	movs	r2, #0
 8002a8c:	4618      	mov	r0, r3
 8002a8e:	4611      	mov	r1, r2
 8002a90:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8002a94:	653b      	str	r3, [r7, #80]	@ 0x50
 8002a96:	2300      	movs	r3, #0
 8002a98:	657b      	str	r3, [r7, #84]	@ 0x54
 8002a9a:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	@ 0x50
 8002a9e:	4642      	mov	r2, r8
 8002aa0:	464b      	mov	r3, r9
 8002aa2:	f04f 0000 	mov.w	r0, #0
 8002aa6:	f04f 0100 	mov.w	r1, #0
 8002aaa:	0159      	lsls	r1, r3, #5
 8002aac:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002ab0:	0150      	lsls	r0, r2, #5
 8002ab2:	4602      	mov	r2, r0
 8002ab4:	460b      	mov	r3, r1
 8002ab6:	4641      	mov	r1, r8
 8002ab8:	1a51      	subs	r1, r2, r1
 8002aba:	60b9      	str	r1, [r7, #8]
 8002abc:	4649      	mov	r1, r9
 8002abe:	eb63 0301 	sbc.w	r3, r3, r1
 8002ac2:	60fb      	str	r3, [r7, #12]
 8002ac4:	f04f 0200 	mov.w	r2, #0
 8002ac8:	f04f 0300 	mov.w	r3, #0
 8002acc:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 8002ad0:	4659      	mov	r1, fp
 8002ad2:	018b      	lsls	r3, r1, #6
 8002ad4:	4651      	mov	r1, sl
 8002ad6:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8002ada:	4651      	mov	r1, sl
 8002adc:	018a      	lsls	r2, r1, #6
 8002ade:	4651      	mov	r1, sl
 8002ae0:	1a54      	subs	r4, r2, r1
 8002ae2:	4659      	mov	r1, fp
 8002ae4:	eb63 0501 	sbc.w	r5, r3, r1
 8002ae8:	f04f 0200 	mov.w	r2, #0
 8002aec:	f04f 0300 	mov.w	r3, #0
 8002af0:	00eb      	lsls	r3, r5, #3
 8002af2:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002af6:	00e2      	lsls	r2, r4, #3
 8002af8:	4614      	mov	r4, r2
 8002afa:	461d      	mov	r5, r3
 8002afc:	4643      	mov	r3, r8
 8002afe:	18e3      	adds	r3, r4, r3
 8002b00:	603b      	str	r3, [r7, #0]
 8002b02:	464b      	mov	r3, r9
 8002b04:	eb45 0303 	adc.w	r3, r5, r3
 8002b08:	607b      	str	r3, [r7, #4]
 8002b0a:	f04f 0200 	mov.w	r2, #0
 8002b0e:	f04f 0300 	mov.w	r3, #0
 8002b12:	e9d7 4500 	ldrd	r4, r5, [r7]
 8002b16:	4629      	mov	r1, r5
 8002b18:	028b      	lsls	r3, r1, #10
 8002b1a:	4621      	mov	r1, r4
 8002b1c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8002b20:	4621      	mov	r1, r4
 8002b22:	028a      	lsls	r2, r1, #10
 8002b24:	4610      	mov	r0, r2
 8002b26:	4619      	mov	r1, r3
 8002b28:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8002b2c:	2200      	movs	r2, #0
 8002b2e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8002b30:	64fa      	str	r2, [r7, #76]	@ 0x4c
 8002b32:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8002b36:	f7fd fb65 	bl	8000204 <__aeabi_uldivmod>
 8002b3a:	4602      	mov	r2, r0
 8002b3c:	460b      	mov	r3, r1
 8002b3e:	4613      	mov	r3, r2
 8002b40:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8002b44:	4b0d      	ldr	r3, [pc, #52]	@ (8002b7c <HAL_RCC_GetSysClockFreq+0x458>)
 8002b46:	685b      	ldr	r3, [r3, #4]
 8002b48:	0f1b      	lsrs	r3, r3, #28
 8002b4a:	f003 0307 	and.w	r3, r3, #7
 8002b4e:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8002b52:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8002b56:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8002b5a:	fbb2 f3f3 	udiv	r3, r2, r3
 8002b5e:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8002b62:	e003      	b.n	8002b6c <HAL_RCC_GetSysClockFreq+0x448>
 8002b64:	4b06      	ldr	r3, [pc, #24]	@ (8002b80 <HAL_RCC_GetSysClockFreq+0x45c>)
 8002b66:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8002b6a:	bf00      	nop
 8002b6c:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8002b70:	4618      	mov	r0, r3
 8002b72:	37b8      	adds	r7, #184	@ 0xb8
 8002b74:	46bd      	mov	sp, r7
 8002b76:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8002b7a:	bf00      	nop
 8002b7c:	40023800 	.word	0x40023800
 8002b80:	00f42400 	.word	0x00f42400

08002b84 <HAL_RCC_OscConfig>:
 8002b84:	b580      	push	{r7, lr}
 8002b86:	b086      	sub	sp, #24
 8002b88:	af00      	add	r7, sp, #0
 8002b8a:	6078      	str	r0, [r7, #4]
 8002b8c:	687b      	ldr	r3, [r7, #4]
 8002b8e:	2b00      	cmp	r3, #0
 8002b90:	d101      	bne.n	8002b96 <HAL_RCC_OscConfig+0x12>
 8002b92:	2301      	movs	r3, #1
 8002b94:	e28d      	b.n	80030b2 <HAL_RCC_OscConfig+0x52e>
 8002b96:	687b      	ldr	r3, [r7, #4]
 8002b98:	681b      	ldr	r3, [r3, #0]
 8002b9a:	f003 0301 	and.w	r3, r3, #1
 8002b9e:	2b00      	cmp	r3, #0
 8002ba0:	f000 8083 	beq.w	8002caa <HAL_RCC_OscConfig+0x126>
 8002ba4:	4b94      	ldr	r3, [pc, #592]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002ba6:	689b      	ldr	r3, [r3, #8]
 8002ba8:	f003 030c 	and.w	r3, r3, #12
 8002bac:	2b04      	cmp	r3, #4
 8002bae:	d019      	beq.n	8002be4 <HAL_RCC_OscConfig+0x60>
 8002bb0:	4b91      	ldr	r3, [pc, #580]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002bb2:	689b      	ldr	r3, [r3, #8]
 8002bb4:	f003 030c 	and.w	r3, r3, #12
 8002bb8:	2b08      	cmp	r3, #8
 8002bba:	d106      	bne.n	8002bca <HAL_RCC_OscConfig+0x46>
 8002bbc:	4b8e      	ldr	r3, [pc, #568]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002bbe:	685b      	ldr	r3, [r3, #4]
 8002bc0:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002bc4:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8002bc8:	d00c      	beq.n	8002be4 <HAL_RCC_OscConfig+0x60>
 8002bca:	4b8b      	ldr	r3, [pc, #556]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002bcc:	689b      	ldr	r3, [r3, #8]
 8002bce:	f003 030c 	and.w	r3, r3, #12
 8002bd2:	2b0c      	cmp	r3, #12
 8002bd4:	d112      	bne.n	8002bfc <HAL_RCC_OscConfig+0x78>
 8002bd6:	4b88      	ldr	r3, [pc, #544]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002bd8:	685b      	ldr	r3, [r3, #4]
 8002bda:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002bde:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8002be2:	d10b      	bne.n	8002bfc <HAL_RCC_OscConfig+0x78>
 8002be4:	4b84      	ldr	r3, [pc, #528]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002be6:	681b      	ldr	r3, [r3, #0]
 8002be8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002bec:	2b00      	cmp	r3, #0
 8002bee:	d05b      	beq.n	8002ca8 <HAL_RCC_OscConfig+0x124>
 8002bf0:	687b      	ldr	r3, [r7, #4]
 8002bf2:	685b      	ldr	r3, [r3, #4]
 8002bf4:	2b00      	cmp	r3, #0
 8002bf6:	d157      	bne.n	8002ca8 <HAL_RCC_OscConfig+0x124>
 8002bf8:	2301      	movs	r3, #1
 8002bfa:	e25a      	b.n	80030b2 <HAL_RCC_OscConfig+0x52e>
 8002bfc:	687b      	ldr	r3, [r7, #4]
 8002bfe:	685b      	ldr	r3, [r3, #4]
 8002c00:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002c04:	d106      	bne.n	8002c14 <HAL_RCC_OscConfig+0x90>
 8002c06:	4b7c      	ldr	r3, [pc, #496]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002c08:	681b      	ldr	r3, [r3, #0]
 8002c0a:	4a7b      	ldr	r2, [pc, #492]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002c0c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002c10:	6013      	str	r3, [r2, #0]
 8002c12:	e01d      	b.n	8002c50 <HAL_RCC_OscConfig+0xcc>
 8002c14:	687b      	ldr	r3, [r7, #4]
 8002c16:	685b      	ldr	r3, [r3, #4]
 8002c18:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8002c1c:	d10c      	bne.n	8002c38 <HAL_RCC_OscConfig+0xb4>
 8002c1e:	4b76      	ldr	r3, [pc, #472]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002c20:	681b      	ldr	r3, [r3, #0]
 8002c22:	4a75      	ldr	r2, [pc, #468]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002c24:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002c28:	6013      	str	r3, [r2, #0]
 8002c2a:	4b73      	ldr	r3, [pc, #460]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002c2c:	681b      	ldr	r3, [r3, #0]
 8002c2e:	4a72      	ldr	r2, [pc, #456]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002c30:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002c34:	6013      	str	r3, [r2, #0]
 8002c36:	e00b      	b.n	8002c50 <HAL_RCC_OscConfig+0xcc>
 8002c38:	4b6f      	ldr	r3, [pc, #444]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002c3a:	681b      	ldr	r3, [r3, #0]
 8002c3c:	4a6e      	ldr	r2, [pc, #440]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002c3e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002c42:	6013      	str	r3, [r2, #0]
 8002c44:	4b6c      	ldr	r3, [pc, #432]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002c46:	681b      	ldr	r3, [r3, #0]
 8002c48:	4a6b      	ldr	r2, [pc, #428]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002c4a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002c4e:	6013      	str	r3, [r2, #0]
 8002c50:	687b      	ldr	r3, [r7, #4]
 8002c52:	685b      	ldr	r3, [r3, #4]
 8002c54:	2b00      	cmp	r3, #0
 8002c56:	d013      	beq.n	8002c80 <HAL_RCC_OscConfig+0xfc>
 8002c58:	f7ff f93c 	bl	8001ed4 <HAL_GetTick>
 8002c5c:	6138      	str	r0, [r7, #16]
 8002c5e:	e008      	b.n	8002c72 <HAL_RCC_OscConfig+0xee>
 8002c60:	f7ff f938 	bl	8001ed4 <HAL_GetTick>
 8002c64:	4602      	mov	r2, r0
 8002c66:	693b      	ldr	r3, [r7, #16]
 8002c68:	1ad3      	subs	r3, r2, r3
 8002c6a:	2b64      	cmp	r3, #100	@ 0x64
 8002c6c:	d901      	bls.n	8002c72 <HAL_RCC_OscConfig+0xee>
 8002c6e:	2303      	movs	r3, #3
 8002c70:	e21f      	b.n	80030b2 <HAL_RCC_OscConfig+0x52e>
 8002c72:	4b61      	ldr	r3, [pc, #388]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002c74:	681b      	ldr	r3, [r3, #0]
 8002c76:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002c7a:	2b00      	cmp	r3, #0
 8002c7c:	d0f0      	beq.n	8002c60 <HAL_RCC_OscConfig+0xdc>
 8002c7e:	e014      	b.n	8002caa <HAL_RCC_OscConfig+0x126>
 8002c80:	f7ff f928 	bl	8001ed4 <HAL_GetTick>
 8002c84:	6138      	str	r0, [r7, #16]
 8002c86:	e008      	b.n	8002c9a <HAL_RCC_OscConfig+0x116>
 8002c88:	f7ff f924 	bl	8001ed4 <HAL_GetTick>
 8002c8c:	4602      	mov	r2, r0
 8002c8e:	693b      	ldr	r3, [r7, #16]
 8002c90:	1ad3      	subs	r3, r2, r3
 8002c92:	2b64      	cmp	r3, #100	@ 0x64
 8002c94:	d901      	bls.n	8002c9a <HAL_RCC_OscConfig+0x116>
 8002c96:	2303      	movs	r3, #3
 8002c98:	e20b      	b.n	80030b2 <HAL_RCC_OscConfig+0x52e>
 8002c9a:	4b57      	ldr	r3, [pc, #348]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002c9c:	681b      	ldr	r3, [r3, #0]
 8002c9e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002ca2:	2b00      	cmp	r3, #0
 8002ca4:	d1f0      	bne.n	8002c88 <HAL_RCC_OscConfig+0x104>
 8002ca6:	e000      	b.n	8002caa <HAL_RCC_OscConfig+0x126>
 8002ca8:	bf00      	nop
 8002caa:	687b      	ldr	r3, [r7, #4]
 8002cac:	681b      	ldr	r3, [r3, #0]
 8002cae:	f003 0302 	and.w	r3, r3, #2
 8002cb2:	2b00      	cmp	r3, #0
 8002cb4:	d06f      	beq.n	8002d96 <HAL_RCC_OscConfig+0x212>
 8002cb6:	4b50      	ldr	r3, [pc, #320]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002cb8:	689b      	ldr	r3, [r3, #8]
 8002cba:	f003 030c 	and.w	r3, r3, #12
 8002cbe:	2b00      	cmp	r3, #0
 8002cc0:	d017      	beq.n	8002cf2 <HAL_RCC_OscConfig+0x16e>
 8002cc2:	4b4d      	ldr	r3, [pc, #308]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002cc4:	689b      	ldr	r3, [r3, #8]
 8002cc6:	f003 030c 	and.w	r3, r3, #12
 8002cca:	2b08      	cmp	r3, #8
 8002ccc:	d105      	bne.n	8002cda <HAL_RCC_OscConfig+0x156>
 8002cce:	4b4a      	ldr	r3, [pc, #296]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002cd0:	685b      	ldr	r3, [r3, #4]
 8002cd2:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002cd6:	2b00      	cmp	r3, #0
 8002cd8:	d00b      	beq.n	8002cf2 <HAL_RCC_OscConfig+0x16e>
 8002cda:	4b47      	ldr	r3, [pc, #284]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002cdc:	689b      	ldr	r3, [r3, #8]
 8002cde:	f003 030c 	and.w	r3, r3, #12
 8002ce2:	2b0c      	cmp	r3, #12
 8002ce4:	d11c      	bne.n	8002d20 <HAL_RCC_OscConfig+0x19c>
 8002ce6:	4b44      	ldr	r3, [pc, #272]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002ce8:	685b      	ldr	r3, [r3, #4]
 8002cea:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002cee:	2b00      	cmp	r3, #0
 8002cf0:	d116      	bne.n	8002d20 <HAL_RCC_OscConfig+0x19c>
 8002cf2:	4b41      	ldr	r3, [pc, #260]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002cf4:	681b      	ldr	r3, [r3, #0]
 8002cf6:	f003 0302 	and.w	r3, r3, #2
 8002cfa:	2b00      	cmp	r3, #0
 8002cfc:	d005      	beq.n	8002d0a <HAL_RCC_OscConfig+0x186>
 8002cfe:	687b      	ldr	r3, [r7, #4]
 8002d00:	68db      	ldr	r3, [r3, #12]
 8002d02:	2b01      	cmp	r3, #1
 8002d04:	d001      	beq.n	8002d0a <HAL_RCC_OscConfig+0x186>
 8002d06:	2301      	movs	r3, #1
 8002d08:	e1d3      	b.n	80030b2 <HAL_RCC_OscConfig+0x52e>
 8002d0a:	4b3b      	ldr	r3, [pc, #236]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002d0c:	681b      	ldr	r3, [r3, #0]
 8002d0e:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002d12:	687b      	ldr	r3, [r7, #4]
 8002d14:	691b      	ldr	r3, [r3, #16]
 8002d16:	00db      	lsls	r3, r3, #3
 8002d18:	4937      	ldr	r1, [pc, #220]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002d1a:	4313      	orrs	r3, r2
 8002d1c:	600b      	str	r3, [r1, #0]
 8002d1e:	e03a      	b.n	8002d96 <HAL_RCC_OscConfig+0x212>
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	68db      	ldr	r3, [r3, #12]
 8002d24:	2b00      	cmp	r3, #0
 8002d26:	d020      	beq.n	8002d6a <HAL_RCC_OscConfig+0x1e6>
 8002d28:	4b34      	ldr	r3, [pc, #208]	@ (8002dfc <HAL_RCC_OscConfig+0x278>)
 8002d2a:	2201      	movs	r2, #1
 8002d2c:	601a      	str	r2, [r3, #0]
 8002d2e:	f7ff f8d1 	bl	8001ed4 <HAL_GetTick>
 8002d32:	6138      	str	r0, [r7, #16]
 8002d34:	e008      	b.n	8002d48 <HAL_RCC_OscConfig+0x1c4>
 8002d36:	f7ff f8cd 	bl	8001ed4 <HAL_GetTick>
 8002d3a:	4602      	mov	r2, r0
 8002d3c:	693b      	ldr	r3, [r7, #16]
 8002d3e:	1ad3      	subs	r3, r2, r3
 8002d40:	2b02      	cmp	r3, #2
 8002d42:	d901      	bls.n	8002d48 <HAL_RCC_OscConfig+0x1c4>
 8002d44:	2303      	movs	r3, #3
 8002d46:	e1b4      	b.n	80030b2 <HAL_RCC_OscConfig+0x52e>
 8002d48:	4b2b      	ldr	r3, [pc, #172]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002d4a:	681b      	ldr	r3, [r3, #0]
 8002d4c:	f003 0302 	and.w	r3, r3, #2
 8002d50:	2b00      	cmp	r3, #0
 8002d52:	d0f0      	beq.n	8002d36 <HAL_RCC_OscConfig+0x1b2>
 8002d54:	4b28      	ldr	r3, [pc, #160]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002d56:	681b      	ldr	r3, [r3, #0]
 8002d58:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002d5c:	687b      	ldr	r3, [r7, #4]
 8002d5e:	691b      	ldr	r3, [r3, #16]
 8002d60:	00db      	lsls	r3, r3, #3
 8002d62:	4925      	ldr	r1, [pc, #148]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002d64:	4313      	orrs	r3, r2
 8002d66:	600b      	str	r3, [r1, #0]
 8002d68:	e015      	b.n	8002d96 <HAL_RCC_OscConfig+0x212>
 8002d6a:	4b24      	ldr	r3, [pc, #144]	@ (8002dfc <HAL_RCC_OscConfig+0x278>)
 8002d6c:	2200      	movs	r2, #0
 8002d6e:	601a      	str	r2, [r3, #0]
 8002d70:	f7ff f8b0 	bl	8001ed4 <HAL_GetTick>
 8002d74:	6138      	str	r0, [r7, #16]
 8002d76:	e008      	b.n	8002d8a <HAL_RCC_OscConfig+0x206>
 8002d78:	f7ff f8ac 	bl	8001ed4 <HAL_GetTick>
 8002d7c:	4602      	mov	r2, r0
 8002d7e:	693b      	ldr	r3, [r7, #16]
 8002d80:	1ad3      	subs	r3, r2, r3
 8002d82:	2b02      	cmp	r3, #2
 8002d84:	d901      	bls.n	8002d8a <HAL_RCC_OscConfig+0x206>
 8002d86:	2303      	movs	r3, #3
 8002d88:	e193      	b.n	80030b2 <HAL_RCC_OscConfig+0x52e>
 8002d8a:	4b1b      	ldr	r3, [pc, #108]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002d8c:	681b      	ldr	r3, [r3, #0]
 8002d8e:	f003 0302 	and.w	r3, r3, #2
 8002d92:	2b00      	cmp	r3, #0
 8002d94:	d1f0      	bne.n	8002d78 <HAL_RCC_OscConfig+0x1f4>
 8002d96:	687b      	ldr	r3, [r7, #4]
 8002d98:	681b      	ldr	r3, [r3, #0]
 8002d9a:	f003 0308 	and.w	r3, r3, #8
 8002d9e:	2b00      	cmp	r3, #0
 8002da0:	d036      	beq.n	8002e10 <HAL_RCC_OscConfig+0x28c>
 8002da2:	687b      	ldr	r3, [r7, #4]
 8002da4:	695b      	ldr	r3, [r3, #20]
 8002da6:	2b00      	cmp	r3, #0
 8002da8:	d016      	beq.n	8002dd8 <HAL_RCC_OscConfig+0x254>
 8002daa:	4b15      	ldr	r3, [pc, #84]	@ (8002e00 <HAL_RCC_OscConfig+0x27c>)
 8002dac:	2201      	movs	r2, #1
 8002dae:	601a      	str	r2, [r3, #0]
 8002db0:	f7ff f890 	bl	8001ed4 <HAL_GetTick>
 8002db4:	6138      	str	r0, [r7, #16]
 8002db6:	e008      	b.n	8002dca <HAL_RCC_OscConfig+0x246>
 8002db8:	f7ff f88c 	bl	8001ed4 <HAL_GetTick>
 8002dbc:	4602      	mov	r2, r0
 8002dbe:	693b      	ldr	r3, [r7, #16]
 8002dc0:	1ad3      	subs	r3, r2, r3
 8002dc2:	2b02      	cmp	r3, #2
 8002dc4:	d901      	bls.n	8002dca <HAL_RCC_OscConfig+0x246>
 8002dc6:	2303      	movs	r3, #3
 8002dc8:	e173      	b.n	80030b2 <HAL_RCC_OscConfig+0x52e>
 8002dca:	4b0b      	ldr	r3, [pc, #44]	@ (8002df8 <HAL_RCC_OscConfig+0x274>)
 8002dcc:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002dce:	f003 0302 	and.w	r3, r3, #2
 8002dd2:	2b00      	cmp	r3, #0
 8002dd4:	d0f0      	beq.n	8002db8 <HAL_RCC_OscConfig+0x234>
 8002dd6:	e01b      	b.n	8002e10 <HAL_RCC_OscConfig+0x28c>
 8002dd8:	4b09      	ldr	r3, [pc, #36]	@ (8002e00 <HAL_RCC_OscConfig+0x27c>)
 8002dda:	2200      	movs	r2, #0
 8002ddc:	601a      	str	r2, [r3, #0]
 8002dde:	f7ff f879 	bl	8001ed4 <HAL_GetTick>
 8002de2:	6138      	str	r0, [r7, #16]
 8002de4:	e00e      	b.n	8002e04 <HAL_RCC_OscConfig+0x280>
 8002de6:	f7ff f875 	bl	8001ed4 <HAL_GetTick>
 8002dea:	4602      	mov	r2, r0
 8002dec:	693b      	ldr	r3, [r7, #16]
 8002dee:	1ad3      	subs	r3, r2, r3
 8002df0:	2b02      	cmp	r3, #2
 8002df2:	d907      	bls.n	8002e04 <HAL_RCC_OscConfig+0x280>
 8002df4:	2303      	movs	r3, #3
 8002df6:	e15c      	b.n	80030b2 <HAL_RCC_OscConfig+0x52e>
 8002df8:	40023800 	.word	0x40023800
 8002dfc:	42470000 	.word	0x42470000
 8002e00:	42470e80 	.word	0x42470e80
 8002e04:	4b8a      	ldr	r3, [pc, #552]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8002e06:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002e08:	f003 0302 	and.w	r3, r3, #2
 8002e0c:	2b00      	cmp	r3, #0
 8002e0e:	d1ea      	bne.n	8002de6 <HAL_RCC_OscConfig+0x262>
 8002e10:	687b      	ldr	r3, [r7, #4]
 8002e12:	681b      	ldr	r3, [r3, #0]
 8002e14:	f003 0304 	and.w	r3, r3, #4
 8002e18:	2b00      	cmp	r3, #0
 8002e1a:	f000 8097 	beq.w	8002f4c <HAL_RCC_OscConfig+0x3c8>
 8002e1e:	2300      	movs	r3, #0
 8002e20:	75fb      	strb	r3, [r7, #23]
 8002e22:	4b83      	ldr	r3, [pc, #524]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8002e24:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e26:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002e2a:	2b00      	cmp	r3, #0
 8002e2c:	d10f      	bne.n	8002e4e <HAL_RCC_OscConfig+0x2ca>
 8002e2e:	2300      	movs	r3, #0
 8002e30:	60bb      	str	r3, [r7, #8]
 8002e32:	4b7f      	ldr	r3, [pc, #508]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8002e34:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e36:	4a7e      	ldr	r2, [pc, #504]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8002e38:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002e3c:	6413      	str	r3, [r2, #64]	@ 0x40
 8002e3e:	4b7c      	ldr	r3, [pc, #496]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8002e40:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e42:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002e46:	60bb      	str	r3, [r7, #8]
 8002e48:	68bb      	ldr	r3, [r7, #8]
 8002e4a:	2301      	movs	r3, #1
 8002e4c:	75fb      	strb	r3, [r7, #23]
 8002e4e:	4b79      	ldr	r3, [pc, #484]	@ (8003034 <HAL_RCC_OscConfig+0x4b0>)
 8002e50:	681b      	ldr	r3, [r3, #0]
 8002e52:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002e56:	2b00      	cmp	r3, #0
 8002e58:	d118      	bne.n	8002e8c <HAL_RCC_OscConfig+0x308>
 8002e5a:	4b76      	ldr	r3, [pc, #472]	@ (8003034 <HAL_RCC_OscConfig+0x4b0>)
 8002e5c:	681b      	ldr	r3, [r3, #0]
 8002e5e:	4a75      	ldr	r2, [pc, #468]	@ (8003034 <HAL_RCC_OscConfig+0x4b0>)
 8002e60:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002e64:	6013      	str	r3, [r2, #0]
 8002e66:	f7ff f835 	bl	8001ed4 <HAL_GetTick>
 8002e6a:	6138      	str	r0, [r7, #16]
 8002e6c:	e008      	b.n	8002e80 <HAL_RCC_OscConfig+0x2fc>
 8002e6e:	f7ff f831 	bl	8001ed4 <HAL_GetTick>
 8002e72:	4602      	mov	r2, r0
 8002e74:	693b      	ldr	r3, [r7, #16]
 8002e76:	1ad3      	subs	r3, r2, r3
 8002e78:	2b02      	cmp	r3, #2
 8002e7a:	d901      	bls.n	8002e80 <HAL_RCC_OscConfig+0x2fc>
 8002e7c:	2303      	movs	r3, #3
 8002e7e:	e118      	b.n	80030b2 <HAL_RCC_OscConfig+0x52e>
 8002e80:	4b6c      	ldr	r3, [pc, #432]	@ (8003034 <HAL_RCC_OscConfig+0x4b0>)
 8002e82:	681b      	ldr	r3, [r3, #0]
 8002e84:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002e88:	2b00      	cmp	r3, #0
 8002e8a:	d0f0      	beq.n	8002e6e <HAL_RCC_OscConfig+0x2ea>
 8002e8c:	687b      	ldr	r3, [r7, #4]
 8002e8e:	689b      	ldr	r3, [r3, #8]
 8002e90:	2b01      	cmp	r3, #1
 8002e92:	d106      	bne.n	8002ea2 <HAL_RCC_OscConfig+0x31e>
 8002e94:	4b66      	ldr	r3, [pc, #408]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8002e96:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002e98:	4a65      	ldr	r2, [pc, #404]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8002e9a:	f043 0301 	orr.w	r3, r3, #1
 8002e9e:	6713      	str	r3, [r2, #112]	@ 0x70
 8002ea0:	e01c      	b.n	8002edc <HAL_RCC_OscConfig+0x358>
 8002ea2:	687b      	ldr	r3, [r7, #4]
 8002ea4:	689b      	ldr	r3, [r3, #8]
 8002ea6:	2b05      	cmp	r3, #5
 8002ea8:	d10c      	bne.n	8002ec4 <HAL_RCC_OscConfig+0x340>
 8002eaa:	4b61      	ldr	r3, [pc, #388]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8002eac:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002eae:	4a60      	ldr	r2, [pc, #384]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8002eb0:	f043 0304 	orr.w	r3, r3, #4
 8002eb4:	6713      	str	r3, [r2, #112]	@ 0x70
 8002eb6:	4b5e      	ldr	r3, [pc, #376]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8002eb8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002eba:	4a5d      	ldr	r2, [pc, #372]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8002ebc:	f043 0301 	orr.w	r3, r3, #1
 8002ec0:	6713      	str	r3, [r2, #112]	@ 0x70
 8002ec2:	e00b      	b.n	8002edc <HAL_RCC_OscConfig+0x358>
 8002ec4:	4b5a      	ldr	r3, [pc, #360]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8002ec6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002ec8:	4a59      	ldr	r2, [pc, #356]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8002eca:	f023 0301 	bic.w	r3, r3, #1
 8002ece:	6713      	str	r3, [r2, #112]	@ 0x70
 8002ed0:	4b57      	ldr	r3, [pc, #348]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8002ed2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002ed4:	4a56      	ldr	r2, [pc, #344]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8002ed6:	f023 0304 	bic.w	r3, r3, #4
 8002eda:	6713      	str	r3, [r2, #112]	@ 0x70
 8002edc:	687b      	ldr	r3, [r7, #4]
 8002ede:	689b      	ldr	r3, [r3, #8]
 8002ee0:	2b00      	cmp	r3, #0
 8002ee2:	d015      	beq.n	8002f10 <HAL_RCC_OscConfig+0x38c>
 8002ee4:	f7fe fff6 	bl	8001ed4 <HAL_GetTick>
 8002ee8:	6138      	str	r0, [r7, #16]
 8002eea:	e00a      	b.n	8002f02 <HAL_RCC_OscConfig+0x37e>
 8002eec:	f7fe fff2 	bl	8001ed4 <HAL_GetTick>
 8002ef0:	4602      	mov	r2, r0
 8002ef2:	693b      	ldr	r3, [r7, #16]
 8002ef4:	1ad3      	subs	r3, r2, r3
 8002ef6:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002efa:	4293      	cmp	r3, r2
 8002efc:	d901      	bls.n	8002f02 <HAL_RCC_OscConfig+0x37e>
 8002efe:	2303      	movs	r3, #3
 8002f00:	e0d7      	b.n	80030b2 <HAL_RCC_OscConfig+0x52e>
 8002f02:	4b4b      	ldr	r3, [pc, #300]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8002f04:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002f06:	f003 0302 	and.w	r3, r3, #2
 8002f0a:	2b00      	cmp	r3, #0
 8002f0c:	d0ee      	beq.n	8002eec <HAL_RCC_OscConfig+0x368>
 8002f0e:	e014      	b.n	8002f3a <HAL_RCC_OscConfig+0x3b6>
 8002f10:	f7fe ffe0 	bl	8001ed4 <HAL_GetTick>
 8002f14:	6138      	str	r0, [r7, #16]
 8002f16:	e00a      	b.n	8002f2e <HAL_RCC_OscConfig+0x3aa>
 8002f18:	f7fe ffdc 	bl	8001ed4 <HAL_GetTick>
 8002f1c:	4602      	mov	r2, r0
 8002f1e:	693b      	ldr	r3, [r7, #16]
 8002f20:	1ad3      	subs	r3, r2, r3
 8002f22:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002f26:	4293      	cmp	r3, r2
 8002f28:	d901      	bls.n	8002f2e <HAL_RCC_OscConfig+0x3aa>
 8002f2a:	2303      	movs	r3, #3
 8002f2c:	e0c1      	b.n	80030b2 <HAL_RCC_OscConfig+0x52e>
 8002f2e:	4b40      	ldr	r3, [pc, #256]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8002f30:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002f32:	f003 0302 	and.w	r3, r3, #2
 8002f36:	2b00      	cmp	r3, #0
 8002f38:	d1ee      	bne.n	8002f18 <HAL_RCC_OscConfig+0x394>
 8002f3a:	7dfb      	ldrb	r3, [r7, #23]
 8002f3c:	2b01      	cmp	r3, #1
 8002f3e:	d105      	bne.n	8002f4c <HAL_RCC_OscConfig+0x3c8>
 8002f40:	4b3b      	ldr	r3, [pc, #236]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8002f42:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f44:	4a3a      	ldr	r2, [pc, #232]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8002f46:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002f4a:	6413      	str	r3, [r2, #64]	@ 0x40
 8002f4c:	687b      	ldr	r3, [r7, #4]
 8002f4e:	699b      	ldr	r3, [r3, #24]
 8002f50:	2b00      	cmp	r3, #0
 8002f52:	f000 80ad 	beq.w	80030b0 <HAL_RCC_OscConfig+0x52c>
 8002f56:	4b36      	ldr	r3, [pc, #216]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8002f58:	689b      	ldr	r3, [r3, #8]
 8002f5a:	f003 030c 	and.w	r3, r3, #12
 8002f5e:	2b08      	cmp	r3, #8
 8002f60:	d060      	beq.n	8003024 <HAL_RCC_OscConfig+0x4a0>
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	699b      	ldr	r3, [r3, #24]
 8002f66:	2b02      	cmp	r3, #2
 8002f68:	d145      	bne.n	8002ff6 <HAL_RCC_OscConfig+0x472>
 8002f6a:	4b33      	ldr	r3, [pc, #204]	@ (8003038 <HAL_RCC_OscConfig+0x4b4>)
 8002f6c:	2200      	movs	r2, #0
 8002f6e:	601a      	str	r2, [r3, #0]
 8002f70:	f7fe ffb0 	bl	8001ed4 <HAL_GetTick>
 8002f74:	6138      	str	r0, [r7, #16]
 8002f76:	e008      	b.n	8002f8a <HAL_RCC_OscConfig+0x406>
 8002f78:	f7fe ffac 	bl	8001ed4 <HAL_GetTick>
 8002f7c:	4602      	mov	r2, r0
 8002f7e:	693b      	ldr	r3, [r7, #16]
 8002f80:	1ad3      	subs	r3, r2, r3
 8002f82:	2b02      	cmp	r3, #2
 8002f84:	d901      	bls.n	8002f8a <HAL_RCC_OscConfig+0x406>
 8002f86:	2303      	movs	r3, #3
 8002f88:	e093      	b.n	80030b2 <HAL_RCC_OscConfig+0x52e>
 8002f8a:	4b29      	ldr	r3, [pc, #164]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8002f8c:	681b      	ldr	r3, [r3, #0]
 8002f8e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002f92:	2b00      	cmp	r3, #0
 8002f94:	d1f0      	bne.n	8002f78 <HAL_RCC_OscConfig+0x3f4>
 8002f96:	687b      	ldr	r3, [r7, #4]
 8002f98:	69da      	ldr	r2, [r3, #28]
 8002f9a:	687b      	ldr	r3, [r7, #4]
 8002f9c:	6a1b      	ldr	r3, [r3, #32]
 8002f9e:	431a      	orrs	r2, r3
 8002fa0:	687b      	ldr	r3, [r7, #4]
 8002fa2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002fa4:	019b      	lsls	r3, r3, #6
 8002fa6:	431a      	orrs	r2, r3
 8002fa8:	687b      	ldr	r3, [r7, #4]
 8002faa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002fac:	085b      	lsrs	r3, r3, #1
 8002fae:	3b01      	subs	r3, #1
 8002fb0:	041b      	lsls	r3, r3, #16
 8002fb2:	431a      	orrs	r2, r3
 8002fb4:	687b      	ldr	r3, [r7, #4]
 8002fb6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002fb8:	061b      	lsls	r3, r3, #24
 8002fba:	431a      	orrs	r2, r3
 8002fbc:	687b      	ldr	r3, [r7, #4]
 8002fbe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002fc0:	071b      	lsls	r3, r3, #28
 8002fc2:	491b      	ldr	r1, [pc, #108]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8002fc4:	4313      	orrs	r3, r2
 8002fc6:	604b      	str	r3, [r1, #4]
 8002fc8:	4b1b      	ldr	r3, [pc, #108]	@ (8003038 <HAL_RCC_OscConfig+0x4b4>)
 8002fca:	2201      	movs	r2, #1
 8002fcc:	601a      	str	r2, [r3, #0]
 8002fce:	f7fe ff81 	bl	8001ed4 <HAL_GetTick>
 8002fd2:	6138      	str	r0, [r7, #16]
 8002fd4:	e008      	b.n	8002fe8 <HAL_RCC_OscConfig+0x464>
 8002fd6:	f7fe ff7d 	bl	8001ed4 <HAL_GetTick>
 8002fda:	4602      	mov	r2, r0
 8002fdc:	693b      	ldr	r3, [r7, #16]
 8002fde:	1ad3      	subs	r3, r2, r3
 8002fe0:	2b02      	cmp	r3, #2
 8002fe2:	d901      	bls.n	8002fe8 <HAL_RCC_OscConfig+0x464>
 8002fe4:	2303      	movs	r3, #3
 8002fe6:	e064      	b.n	80030b2 <HAL_RCC_OscConfig+0x52e>
 8002fe8:	4b11      	ldr	r3, [pc, #68]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8002fea:	681b      	ldr	r3, [r3, #0]
 8002fec:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002ff0:	2b00      	cmp	r3, #0
 8002ff2:	d0f0      	beq.n	8002fd6 <HAL_RCC_OscConfig+0x452>
 8002ff4:	e05c      	b.n	80030b0 <HAL_RCC_OscConfig+0x52c>
 8002ff6:	4b10      	ldr	r3, [pc, #64]	@ (8003038 <HAL_RCC_OscConfig+0x4b4>)
 8002ff8:	2200      	movs	r2, #0
 8002ffa:	601a      	str	r2, [r3, #0]
 8002ffc:	f7fe ff6a 	bl	8001ed4 <HAL_GetTick>
 8003000:	6138      	str	r0, [r7, #16]
 8003002:	e008      	b.n	8003016 <HAL_RCC_OscConfig+0x492>
 8003004:	f7fe ff66 	bl	8001ed4 <HAL_GetTick>
 8003008:	4602      	mov	r2, r0
 800300a:	693b      	ldr	r3, [r7, #16]
 800300c:	1ad3      	subs	r3, r2, r3
 800300e:	2b02      	cmp	r3, #2
 8003010:	d901      	bls.n	8003016 <HAL_RCC_OscConfig+0x492>
 8003012:	2303      	movs	r3, #3
 8003014:	e04d      	b.n	80030b2 <HAL_RCC_OscConfig+0x52e>
 8003016:	4b06      	ldr	r3, [pc, #24]	@ (8003030 <HAL_RCC_OscConfig+0x4ac>)
 8003018:	681b      	ldr	r3, [r3, #0]
 800301a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800301e:	2b00      	cmp	r3, #0
 8003020:	d1f0      	bne.n	8003004 <HAL_RCC_OscConfig+0x480>
 8003022:	e045      	b.n	80030b0 <HAL_RCC_OscConfig+0x52c>
 8003024:	687b      	ldr	r3, [r7, #4]
 8003026:	699b      	ldr	r3, [r3, #24]
 8003028:	2b01      	cmp	r3, #1
 800302a:	d107      	bne.n	800303c <HAL_RCC_OscConfig+0x4b8>
 800302c:	2301      	movs	r3, #1
 800302e:	e040      	b.n	80030b2 <HAL_RCC_OscConfig+0x52e>
 8003030:	40023800 	.word	0x40023800
 8003034:	40007000 	.word	0x40007000
 8003038:	42470060 	.word	0x42470060
 800303c:	4b1f      	ldr	r3, [pc, #124]	@ (80030bc <HAL_RCC_OscConfig+0x538>)
 800303e:	685b      	ldr	r3, [r3, #4]
 8003040:	60fb      	str	r3, [r7, #12]
 8003042:	687b      	ldr	r3, [r7, #4]
 8003044:	699b      	ldr	r3, [r3, #24]
 8003046:	2b01      	cmp	r3, #1
 8003048:	d030      	beq.n	80030ac <HAL_RCC_OscConfig+0x528>
 800304a:	68fb      	ldr	r3, [r7, #12]
 800304c:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8003050:	687b      	ldr	r3, [r7, #4]
 8003052:	69db      	ldr	r3, [r3, #28]
 8003054:	429a      	cmp	r2, r3
 8003056:	d129      	bne.n	80030ac <HAL_RCC_OscConfig+0x528>
 8003058:	68fb      	ldr	r3, [r7, #12]
 800305a:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 800305e:	687b      	ldr	r3, [r7, #4]
 8003060:	6a1b      	ldr	r3, [r3, #32]
 8003062:	429a      	cmp	r2, r3
 8003064:	d122      	bne.n	80030ac <HAL_RCC_OscConfig+0x528>
 8003066:	68fa      	ldr	r2, [r7, #12]
 8003068:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 800306c:	4013      	ands	r3, r2
 800306e:	687a      	ldr	r2, [r7, #4]
 8003070:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8003072:	0192      	lsls	r2, r2, #6
 8003074:	4293      	cmp	r3, r2
 8003076:	d119      	bne.n	80030ac <HAL_RCC_OscConfig+0x528>
 8003078:	68fb      	ldr	r3, [r7, #12]
 800307a:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 800307e:	687b      	ldr	r3, [r7, #4]
 8003080:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003082:	085b      	lsrs	r3, r3, #1
 8003084:	3b01      	subs	r3, #1
 8003086:	041b      	lsls	r3, r3, #16
 8003088:	429a      	cmp	r2, r3
 800308a:	d10f      	bne.n	80030ac <HAL_RCC_OscConfig+0x528>
 800308c:	68fb      	ldr	r3, [r7, #12]
 800308e:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8003092:	687b      	ldr	r3, [r7, #4]
 8003094:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003096:	061b      	lsls	r3, r3, #24
 8003098:	429a      	cmp	r2, r3
 800309a:	d107      	bne.n	80030ac <HAL_RCC_OscConfig+0x528>
 800309c:	68fb      	ldr	r3, [r7, #12]
 800309e:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 80030a2:	687b      	ldr	r3, [r7, #4]
 80030a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80030a6:	071b      	lsls	r3, r3, #28
 80030a8:	429a      	cmp	r2, r3
 80030aa:	d001      	beq.n	80030b0 <HAL_RCC_OscConfig+0x52c>
 80030ac:	2301      	movs	r3, #1
 80030ae:	e000      	b.n	80030b2 <HAL_RCC_OscConfig+0x52e>
 80030b0:	2300      	movs	r3, #0
 80030b2:	4618      	mov	r0, r3
 80030b4:	3718      	adds	r7, #24
 80030b6:	46bd      	mov	sp, r7
 80030b8:	bd80      	pop	{r7, pc}
 80030ba:	bf00      	nop
 80030bc:	40023800 	.word	0x40023800

080030c0 <HAL_TIM_Base_Init>:
 80030c0:	b580      	push	{r7, lr}
 80030c2:	b082      	sub	sp, #8
 80030c4:	af00      	add	r7, sp, #0
 80030c6:	6078      	str	r0, [r7, #4]
 80030c8:	687b      	ldr	r3, [r7, #4]
 80030ca:	2b00      	cmp	r3, #0
 80030cc:	d101      	bne.n	80030d2 <HAL_TIM_Base_Init+0x12>
 80030ce:	2301      	movs	r3, #1
 80030d0:	e041      	b.n	8003156 <HAL_TIM_Base_Init+0x96>
 80030d2:	687b      	ldr	r3, [r7, #4]
 80030d4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80030d8:	b2db      	uxtb	r3, r3
 80030da:	2b00      	cmp	r3, #0
 80030dc:	d106      	bne.n	80030ec <HAL_TIM_Base_Init+0x2c>
 80030de:	687b      	ldr	r3, [r7, #4]
 80030e0:	2200      	movs	r2, #0
 80030e2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80030e6:	6878      	ldr	r0, [r7, #4]
 80030e8:	f7fe fc82 	bl	80019f0 <HAL_TIM_Base_MspInit>
 80030ec:	687b      	ldr	r3, [r7, #4]
 80030ee:	2202      	movs	r2, #2
 80030f0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80030f4:	687b      	ldr	r3, [r7, #4]
 80030f6:	681a      	ldr	r2, [r3, #0]
 80030f8:	687b      	ldr	r3, [r7, #4]
 80030fa:	3304      	adds	r3, #4
 80030fc:	4619      	mov	r1, r3
 80030fe:	4610      	mov	r0, r2
 8003100:	f000 fe66 	bl	8003dd0 <TIM_Base_SetConfig>
 8003104:	687b      	ldr	r3, [r7, #4]
 8003106:	2201      	movs	r2, #1
 8003108:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800310c:	687b      	ldr	r3, [r7, #4]
 800310e:	2201      	movs	r2, #1
 8003110:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003114:	687b      	ldr	r3, [r7, #4]
 8003116:	2201      	movs	r2, #1
 8003118:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800311c:	687b      	ldr	r3, [r7, #4]
 800311e:	2201      	movs	r2, #1
 8003120:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003124:	687b      	ldr	r3, [r7, #4]
 8003126:	2201      	movs	r2, #1
 8003128:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800312c:	687b      	ldr	r3, [r7, #4]
 800312e:	2201      	movs	r2, #1
 8003130:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003134:	687b      	ldr	r3, [r7, #4]
 8003136:	2201      	movs	r2, #1
 8003138:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800313c:	687b      	ldr	r3, [r7, #4]
 800313e:	2201      	movs	r2, #1
 8003140:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	2201      	movs	r2, #1
 8003148:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800314c:	687b      	ldr	r3, [r7, #4]
 800314e:	2201      	movs	r2, #1
 8003150:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003154:	2300      	movs	r3, #0
 8003156:	4618      	mov	r0, r3
 8003158:	3708      	adds	r7, #8
 800315a:	46bd      	mov	sp, r7
 800315c:	bd80      	pop	{r7, pc}
	...

08003160 <HAL_TIM_Base_Start>:
 8003160:	b480      	push	{r7}
 8003162:	b085      	sub	sp, #20
 8003164:	af00      	add	r7, sp, #0
 8003166:	6078      	str	r0, [r7, #4]
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800316e:	b2db      	uxtb	r3, r3
 8003170:	2b01      	cmp	r3, #1
 8003172:	d001      	beq.n	8003178 <HAL_TIM_Base_Start+0x18>
 8003174:	2301      	movs	r3, #1
 8003176:	e046      	b.n	8003206 <HAL_TIM_Base_Start+0xa6>
 8003178:	687b      	ldr	r3, [r7, #4]
 800317a:	2202      	movs	r2, #2
 800317c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003180:	687b      	ldr	r3, [r7, #4]
 8003182:	681b      	ldr	r3, [r3, #0]
 8003184:	4a23      	ldr	r2, [pc, #140]	@ (8003214 <HAL_TIM_Base_Start+0xb4>)
 8003186:	4293      	cmp	r3, r2
 8003188:	d022      	beq.n	80031d0 <HAL_TIM_Base_Start+0x70>
 800318a:	687b      	ldr	r3, [r7, #4]
 800318c:	681b      	ldr	r3, [r3, #0]
 800318e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003192:	d01d      	beq.n	80031d0 <HAL_TIM_Base_Start+0x70>
 8003194:	687b      	ldr	r3, [r7, #4]
 8003196:	681b      	ldr	r3, [r3, #0]
 8003198:	4a1f      	ldr	r2, [pc, #124]	@ (8003218 <HAL_TIM_Base_Start+0xb8>)
 800319a:	4293      	cmp	r3, r2
 800319c:	d018      	beq.n	80031d0 <HAL_TIM_Base_Start+0x70>
 800319e:	687b      	ldr	r3, [r7, #4]
 80031a0:	681b      	ldr	r3, [r3, #0]
 80031a2:	4a1e      	ldr	r2, [pc, #120]	@ (800321c <HAL_TIM_Base_Start+0xbc>)
 80031a4:	4293      	cmp	r3, r2
 80031a6:	d013      	beq.n	80031d0 <HAL_TIM_Base_Start+0x70>
 80031a8:	687b      	ldr	r3, [r7, #4]
 80031aa:	681b      	ldr	r3, [r3, #0]
 80031ac:	4a1c      	ldr	r2, [pc, #112]	@ (8003220 <HAL_TIM_Base_Start+0xc0>)
 80031ae:	4293      	cmp	r3, r2
 80031b0:	d00e      	beq.n	80031d0 <HAL_TIM_Base_Start+0x70>
 80031b2:	687b      	ldr	r3, [r7, #4]
 80031b4:	681b      	ldr	r3, [r3, #0]
 80031b6:	4a1b      	ldr	r2, [pc, #108]	@ (8003224 <HAL_TIM_Base_Start+0xc4>)
 80031b8:	4293      	cmp	r3, r2
 80031ba:	d009      	beq.n	80031d0 <HAL_TIM_Base_Start+0x70>
 80031bc:	687b      	ldr	r3, [r7, #4]
 80031be:	681b      	ldr	r3, [r3, #0]
 80031c0:	4a19      	ldr	r2, [pc, #100]	@ (8003228 <HAL_TIM_Base_Start+0xc8>)
 80031c2:	4293      	cmp	r3, r2
 80031c4:	d004      	beq.n	80031d0 <HAL_TIM_Base_Start+0x70>
 80031c6:	687b      	ldr	r3, [r7, #4]
 80031c8:	681b      	ldr	r3, [r3, #0]
 80031ca:	4a18      	ldr	r2, [pc, #96]	@ (800322c <HAL_TIM_Base_Start+0xcc>)
 80031cc:	4293      	cmp	r3, r2
 80031ce:	d111      	bne.n	80031f4 <HAL_TIM_Base_Start+0x94>
 80031d0:	687b      	ldr	r3, [r7, #4]
 80031d2:	681b      	ldr	r3, [r3, #0]
 80031d4:	689b      	ldr	r3, [r3, #8]
 80031d6:	f003 0307 	and.w	r3, r3, #7
 80031da:	60fb      	str	r3, [r7, #12]
 80031dc:	68fb      	ldr	r3, [r7, #12]
 80031de:	2b06      	cmp	r3, #6
 80031e0:	d010      	beq.n	8003204 <HAL_TIM_Base_Start+0xa4>
 80031e2:	687b      	ldr	r3, [r7, #4]
 80031e4:	681b      	ldr	r3, [r3, #0]
 80031e6:	681a      	ldr	r2, [r3, #0]
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	681b      	ldr	r3, [r3, #0]
 80031ec:	f042 0201 	orr.w	r2, r2, #1
 80031f0:	601a      	str	r2, [r3, #0]
 80031f2:	e007      	b.n	8003204 <HAL_TIM_Base_Start+0xa4>
 80031f4:	687b      	ldr	r3, [r7, #4]
 80031f6:	681b      	ldr	r3, [r3, #0]
 80031f8:	681a      	ldr	r2, [r3, #0]
 80031fa:	687b      	ldr	r3, [r7, #4]
 80031fc:	681b      	ldr	r3, [r3, #0]
 80031fe:	f042 0201 	orr.w	r2, r2, #1
 8003202:	601a      	str	r2, [r3, #0]
 8003204:	2300      	movs	r3, #0
 8003206:	4618      	mov	r0, r3
 8003208:	3714      	adds	r7, #20
 800320a:	46bd      	mov	sp, r7
 800320c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003210:	4770      	bx	lr
 8003212:	bf00      	nop
 8003214:	40010000 	.word	0x40010000
 8003218:	40000400 	.word	0x40000400
 800321c:	40000800 	.word	0x40000800
 8003220:	40000c00 	.word	0x40000c00
 8003224:	40010400 	.word	0x40010400
 8003228:	40014000 	.word	0x40014000
 800322c:	40001800 	.word	0x40001800

08003230 <HAL_TIM_PWM_Init>:
 8003230:	b580      	push	{r7, lr}
 8003232:	b082      	sub	sp, #8
 8003234:	af00      	add	r7, sp, #0
 8003236:	6078      	str	r0, [r7, #4]
 8003238:	687b      	ldr	r3, [r7, #4]
 800323a:	2b00      	cmp	r3, #0
 800323c:	d101      	bne.n	8003242 <HAL_TIM_PWM_Init+0x12>
 800323e:	2301      	movs	r3, #1
 8003240:	e041      	b.n	80032c6 <HAL_TIM_PWM_Init+0x96>
 8003242:	687b      	ldr	r3, [r7, #4]
 8003244:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003248:	b2db      	uxtb	r3, r3
 800324a:	2b00      	cmp	r3, #0
 800324c:	d106      	bne.n	800325c <HAL_TIM_PWM_Init+0x2c>
 800324e:	687b      	ldr	r3, [r7, #4]
 8003250:	2200      	movs	r2, #0
 8003252:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003256:	6878      	ldr	r0, [r7, #4]
 8003258:	f000 f839 	bl	80032ce <HAL_TIM_PWM_MspInit>
 800325c:	687b      	ldr	r3, [r7, #4]
 800325e:	2202      	movs	r2, #2
 8003260:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003264:	687b      	ldr	r3, [r7, #4]
 8003266:	681a      	ldr	r2, [r3, #0]
 8003268:	687b      	ldr	r3, [r7, #4]
 800326a:	3304      	adds	r3, #4
 800326c:	4619      	mov	r1, r3
 800326e:	4610      	mov	r0, r2
 8003270:	f000 fdae 	bl	8003dd0 <TIM_Base_SetConfig>
 8003274:	687b      	ldr	r3, [r7, #4]
 8003276:	2201      	movs	r2, #1
 8003278:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800327c:	687b      	ldr	r3, [r7, #4]
 800327e:	2201      	movs	r2, #1
 8003280:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003284:	687b      	ldr	r3, [r7, #4]
 8003286:	2201      	movs	r2, #1
 8003288:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800328c:	687b      	ldr	r3, [r7, #4]
 800328e:	2201      	movs	r2, #1
 8003290:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003294:	687b      	ldr	r3, [r7, #4]
 8003296:	2201      	movs	r2, #1
 8003298:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800329c:	687b      	ldr	r3, [r7, #4]
 800329e:	2201      	movs	r2, #1
 80032a0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80032a4:	687b      	ldr	r3, [r7, #4]
 80032a6:	2201      	movs	r2, #1
 80032a8:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80032ac:	687b      	ldr	r3, [r7, #4]
 80032ae:	2201      	movs	r2, #1
 80032b0:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80032b4:	687b      	ldr	r3, [r7, #4]
 80032b6:	2201      	movs	r2, #1
 80032b8:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80032bc:	687b      	ldr	r3, [r7, #4]
 80032be:	2201      	movs	r2, #1
 80032c0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80032c4:	2300      	movs	r3, #0
 80032c6:	4618      	mov	r0, r3
 80032c8:	3708      	adds	r7, #8
 80032ca:	46bd      	mov	sp, r7
 80032cc:	bd80      	pop	{r7, pc}

080032ce <HAL_TIM_PWM_MspInit>:
 80032ce:	b480      	push	{r7}
 80032d0:	b083      	sub	sp, #12
 80032d2:	af00      	add	r7, sp, #0
 80032d4:	6078      	str	r0, [r7, #4]
 80032d6:	bf00      	nop
 80032d8:	370c      	adds	r7, #12
 80032da:	46bd      	mov	sp, r7
 80032dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032e0:	4770      	bx	lr
	...

080032e4 <HAL_TIM_PWM_Start>:
 80032e4:	b580      	push	{r7, lr}
 80032e6:	b084      	sub	sp, #16
 80032e8:	af00      	add	r7, sp, #0
 80032ea:	6078      	str	r0, [r7, #4]
 80032ec:	6039      	str	r1, [r7, #0]
 80032ee:	683b      	ldr	r3, [r7, #0]
 80032f0:	2b00      	cmp	r3, #0
 80032f2:	d109      	bne.n	8003308 <HAL_TIM_PWM_Start+0x24>
 80032f4:	687b      	ldr	r3, [r7, #4]
 80032f6:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 80032fa:	b2db      	uxtb	r3, r3
 80032fc:	2b01      	cmp	r3, #1
 80032fe:	bf14      	ite	ne
 8003300:	2301      	movne	r3, #1
 8003302:	2300      	moveq	r3, #0
 8003304:	b2db      	uxtb	r3, r3
 8003306:	e022      	b.n	800334e <HAL_TIM_PWM_Start+0x6a>
 8003308:	683b      	ldr	r3, [r7, #0]
 800330a:	2b04      	cmp	r3, #4
 800330c:	d109      	bne.n	8003322 <HAL_TIM_PWM_Start+0x3e>
 800330e:	687b      	ldr	r3, [r7, #4]
 8003310:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8003314:	b2db      	uxtb	r3, r3
 8003316:	2b01      	cmp	r3, #1
 8003318:	bf14      	ite	ne
 800331a:	2301      	movne	r3, #1
 800331c:	2300      	moveq	r3, #0
 800331e:	b2db      	uxtb	r3, r3
 8003320:	e015      	b.n	800334e <HAL_TIM_PWM_Start+0x6a>
 8003322:	683b      	ldr	r3, [r7, #0]
 8003324:	2b08      	cmp	r3, #8
 8003326:	d109      	bne.n	800333c <HAL_TIM_PWM_Start+0x58>
 8003328:	687b      	ldr	r3, [r7, #4]
 800332a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800332e:	b2db      	uxtb	r3, r3
 8003330:	2b01      	cmp	r3, #1
 8003332:	bf14      	ite	ne
 8003334:	2301      	movne	r3, #1
 8003336:	2300      	moveq	r3, #0
 8003338:	b2db      	uxtb	r3, r3
 800333a:	e008      	b.n	800334e <HAL_TIM_PWM_Start+0x6a>
 800333c:	687b      	ldr	r3, [r7, #4]
 800333e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003342:	b2db      	uxtb	r3, r3
 8003344:	2b01      	cmp	r3, #1
 8003346:	bf14      	ite	ne
 8003348:	2301      	movne	r3, #1
 800334a:	2300      	moveq	r3, #0
 800334c:	b2db      	uxtb	r3, r3
 800334e:	2b00      	cmp	r3, #0
 8003350:	d001      	beq.n	8003356 <HAL_TIM_PWM_Start+0x72>
 8003352:	2301      	movs	r3, #1
 8003354:	e07c      	b.n	8003450 <HAL_TIM_PWM_Start+0x16c>
 8003356:	683b      	ldr	r3, [r7, #0]
 8003358:	2b00      	cmp	r3, #0
 800335a:	d104      	bne.n	8003366 <HAL_TIM_PWM_Start+0x82>
 800335c:	687b      	ldr	r3, [r7, #4]
 800335e:	2202      	movs	r2, #2
 8003360:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003364:	e013      	b.n	800338e <HAL_TIM_PWM_Start+0xaa>
 8003366:	683b      	ldr	r3, [r7, #0]
 8003368:	2b04      	cmp	r3, #4
 800336a:	d104      	bne.n	8003376 <HAL_TIM_PWM_Start+0x92>
 800336c:	687b      	ldr	r3, [r7, #4]
 800336e:	2202      	movs	r2, #2
 8003370:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003374:	e00b      	b.n	800338e <HAL_TIM_PWM_Start+0xaa>
 8003376:	683b      	ldr	r3, [r7, #0]
 8003378:	2b08      	cmp	r3, #8
 800337a:	d104      	bne.n	8003386 <HAL_TIM_PWM_Start+0xa2>
 800337c:	687b      	ldr	r3, [r7, #4]
 800337e:	2202      	movs	r2, #2
 8003380:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003384:	e003      	b.n	800338e <HAL_TIM_PWM_Start+0xaa>
 8003386:	687b      	ldr	r3, [r7, #4]
 8003388:	2202      	movs	r2, #2
 800338a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800338e:	687b      	ldr	r3, [r7, #4]
 8003390:	681b      	ldr	r3, [r3, #0]
 8003392:	2201      	movs	r2, #1
 8003394:	6839      	ldr	r1, [r7, #0]
 8003396:	4618      	mov	r0, r3
 8003398:	f001 f8a1 	bl	80044de <TIM_CCxChannelCmd>
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	681b      	ldr	r3, [r3, #0]
 80033a0:	4a2d      	ldr	r2, [pc, #180]	@ (8003458 <HAL_TIM_PWM_Start+0x174>)
 80033a2:	4293      	cmp	r3, r2
 80033a4:	d004      	beq.n	80033b0 <HAL_TIM_PWM_Start+0xcc>
 80033a6:	687b      	ldr	r3, [r7, #4]
 80033a8:	681b      	ldr	r3, [r3, #0]
 80033aa:	4a2c      	ldr	r2, [pc, #176]	@ (800345c <HAL_TIM_PWM_Start+0x178>)
 80033ac:	4293      	cmp	r3, r2
 80033ae:	d101      	bne.n	80033b4 <HAL_TIM_PWM_Start+0xd0>
 80033b0:	2301      	movs	r3, #1
 80033b2:	e000      	b.n	80033b6 <HAL_TIM_PWM_Start+0xd2>
 80033b4:	2300      	movs	r3, #0
 80033b6:	2b00      	cmp	r3, #0
 80033b8:	d007      	beq.n	80033ca <HAL_TIM_PWM_Start+0xe6>
 80033ba:	687b      	ldr	r3, [r7, #4]
 80033bc:	681b      	ldr	r3, [r3, #0]
 80033be:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80033c0:	687b      	ldr	r3, [r7, #4]
 80033c2:	681b      	ldr	r3, [r3, #0]
 80033c4:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80033c8:	645a      	str	r2, [r3, #68]	@ 0x44
 80033ca:	687b      	ldr	r3, [r7, #4]
 80033cc:	681b      	ldr	r3, [r3, #0]
 80033ce:	4a22      	ldr	r2, [pc, #136]	@ (8003458 <HAL_TIM_PWM_Start+0x174>)
 80033d0:	4293      	cmp	r3, r2
 80033d2:	d022      	beq.n	800341a <HAL_TIM_PWM_Start+0x136>
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	681b      	ldr	r3, [r3, #0]
 80033d8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80033dc:	d01d      	beq.n	800341a <HAL_TIM_PWM_Start+0x136>
 80033de:	687b      	ldr	r3, [r7, #4]
 80033e0:	681b      	ldr	r3, [r3, #0]
 80033e2:	4a1f      	ldr	r2, [pc, #124]	@ (8003460 <HAL_TIM_PWM_Start+0x17c>)
 80033e4:	4293      	cmp	r3, r2
 80033e6:	d018      	beq.n	800341a <HAL_TIM_PWM_Start+0x136>
 80033e8:	687b      	ldr	r3, [r7, #4]
 80033ea:	681b      	ldr	r3, [r3, #0]
 80033ec:	4a1d      	ldr	r2, [pc, #116]	@ (8003464 <HAL_TIM_PWM_Start+0x180>)
 80033ee:	4293      	cmp	r3, r2
 80033f0:	d013      	beq.n	800341a <HAL_TIM_PWM_Start+0x136>
 80033f2:	687b      	ldr	r3, [r7, #4]
 80033f4:	681b      	ldr	r3, [r3, #0]
 80033f6:	4a1c      	ldr	r2, [pc, #112]	@ (8003468 <HAL_TIM_PWM_Start+0x184>)
 80033f8:	4293      	cmp	r3, r2
 80033fa:	d00e      	beq.n	800341a <HAL_TIM_PWM_Start+0x136>
 80033fc:	687b      	ldr	r3, [r7, #4]
 80033fe:	681b      	ldr	r3, [r3, #0]
 8003400:	4a16      	ldr	r2, [pc, #88]	@ (800345c <HAL_TIM_PWM_Start+0x178>)
 8003402:	4293      	cmp	r3, r2
 8003404:	d009      	beq.n	800341a <HAL_TIM_PWM_Start+0x136>
 8003406:	687b      	ldr	r3, [r7, #4]
 8003408:	681b      	ldr	r3, [r3, #0]
 800340a:	4a18      	ldr	r2, [pc, #96]	@ (800346c <HAL_TIM_PWM_Start+0x188>)
 800340c:	4293      	cmp	r3, r2
 800340e:	d004      	beq.n	800341a <HAL_TIM_PWM_Start+0x136>
 8003410:	687b      	ldr	r3, [r7, #4]
 8003412:	681b      	ldr	r3, [r3, #0]
 8003414:	4a16      	ldr	r2, [pc, #88]	@ (8003470 <HAL_TIM_PWM_Start+0x18c>)
 8003416:	4293      	cmp	r3, r2
 8003418:	d111      	bne.n	800343e <HAL_TIM_PWM_Start+0x15a>
 800341a:	687b      	ldr	r3, [r7, #4]
 800341c:	681b      	ldr	r3, [r3, #0]
 800341e:	689b      	ldr	r3, [r3, #8]
 8003420:	f003 0307 	and.w	r3, r3, #7
 8003424:	60fb      	str	r3, [r7, #12]
 8003426:	68fb      	ldr	r3, [r7, #12]
 8003428:	2b06      	cmp	r3, #6
 800342a:	d010      	beq.n	800344e <HAL_TIM_PWM_Start+0x16a>
 800342c:	687b      	ldr	r3, [r7, #4]
 800342e:	681b      	ldr	r3, [r3, #0]
 8003430:	681a      	ldr	r2, [r3, #0]
 8003432:	687b      	ldr	r3, [r7, #4]
 8003434:	681b      	ldr	r3, [r3, #0]
 8003436:	f042 0201 	orr.w	r2, r2, #1
 800343a:	601a      	str	r2, [r3, #0]
 800343c:	e007      	b.n	800344e <HAL_TIM_PWM_Start+0x16a>
 800343e:	687b      	ldr	r3, [r7, #4]
 8003440:	681b      	ldr	r3, [r3, #0]
 8003442:	681a      	ldr	r2, [r3, #0]
 8003444:	687b      	ldr	r3, [r7, #4]
 8003446:	681b      	ldr	r3, [r3, #0]
 8003448:	f042 0201 	orr.w	r2, r2, #1
 800344c:	601a      	str	r2, [r3, #0]
 800344e:	2300      	movs	r3, #0
 8003450:	4618      	mov	r0, r3
 8003452:	3710      	adds	r7, #16
 8003454:	46bd      	mov	sp, r7
 8003456:	bd80      	pop	{r7, pc}
 8003458:	40010000 	.word	0x40010000
 800345c:	40010400 	.word	0x40010400
 8003460:	40000400 	.word	0x40000400
 8003464:	40000800 	.word	0x40000800
 8003468:	40000c00 	.word	0x40000c00
 800346c:	40014000 	.word	0x40014000
 8003470:	40001800 	.word	0x40001800

08003474 <HAL_TIM_PWM_Start_IT>:
 8003474:	b580      	push	{r7, lr}
 8003476:	b084      	sub	sp, #16
 8003478:	af00      	add	r7, sp, #0
 800347a:	6078      	str	r0, [r7, #4]
 800347c:	6039      	str	r1, [r7, #0]
 800347e:	2300      	movs	r3, #0
 8003480:	73fb      	strb	r3, [r7, #15]
 8003482:	683b      	ldr	r3, [r7, #0]
 8003484:	2b00      	cmp	r3, #0
 8003486:	d109      	bne.n	800349c <HAL_TIM_PWM_Start_IT+0x28>
 8003488:	687b      	ldr	r3, [r7, #4]
 800348a:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800348e:	b2db      	uxtb	r3, r3
 8003490:	2b01      	cmp	r3, #1
 8003492:	bf14      	ite	ne
 8003494:	2301      	movne	r3, #1
 8003496:	2300      	moveq	r3, #0
 8003498:	b2db      	uxtb	r3, r3
 800349a:	e022      	b.n	80034e2 <HAL_TIM_PWM_Start_IT+0x6e>
 800349c:	683b      	ldr	r3, [r7, #0]
 800349e:	2b04      	cmp	r3, #4
 80034a0:	d109      	bne.n	80034b6 <HAL_TIM_PWM_Start_IT+0x42>
 80034a2:	687b      	ldr	r3, [r7, #4]
 80034a4:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 80034a8:	b2db      	uxtb	r3, r3
 80034aa:	2b01      	cmp	r3, #1
 80034ac:	bf14      	ite	ne
 80034ae:	2301      	movne	r3, #1
 80034b0:	2300      	moveq	r3, #0
 80034b2:	b2db      	uxtb	r3, r3
 80034b4:	e015      	b.n	80034e2 <HAL_TIM_PWM_Start_IT+0x6e>
 80034b6:	683b      	ldr	r3, [r7, #0]
 80034b8:	2b08      	cmp	r3, #8
 80034ba:	d109      	bne.n	80034d0 <HAL_TIM_PWM_Start_IT+0x5c>
 80034bc:	687b      	ldr	r3, [r7, #4]
 80034be:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80034c2:	b2db      	uxtb	r3, r3
 80034c4:	2b01      	cmp	r3, #1
 80034c6:	bf14      	ite	ne
 80034c8:	2301      	movne	r3, #1
 80034ca:	2300      	moveq	r3, #0
 80034cc:	b2db      	uxtb	r3, r3
 80034ce:	e008      	b.n	80034e2 <HAL_TIM_PWM_Start_IT+0x6e>
 80034d0:	687b      	ldr	r3, [r7, #4]
 80034d2:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80034d6:	b2db      	uxtb	r3, r3
 80034d8:	2b01      	cmp	r3, #1
 80034da:	bf14      	ite	ne
 80034dc:	2301      	movne	r3, #1
 80034de:	2300      	moveq	r3, #0
 80034e0:	b2db      	uxtb	r3, r3
 80034e2:	2b00      	cmp	r3, #0
 80034e4:	d001      	beq.n	80034ea <HAL_TIM_PWM_Start_IT+0x76>
 80034e6:	2301      	movs	r3, #1
 80034e8:	e0c7      	b.n	800367a <HAL_TIM_PWM_Start_IT+0x206>
 80034ea:	683b      	ldr	r3, [r7, #0]
 80034ec:	2b00      	cmp	r3, #0
 80034ee:	d104      	bne.n	80034fa <HAL_TIM_PWM_Start_IT+0x86>
 80034f0:	687b      	ldr	r3, [r7, #4]
 80034f2:	2202      	movs	r2, #2
 80034f4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80034f8:	e013      	b.n	8003522 <HAL_TIM_PWM_Start_IT+0xae>
 80034fa:	683b      	ldr	r3, [r7, #0]
 80034fc:	2b04      	cmp	r3, #4
 80034fe:	d104      	bne.n	800350a <HAL_TIM_PWM_Start_IT+0x96>
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	2202      	movs	r2, #2
 8003504:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003508:	e00b      	b.n	8003522 <HAL_TIM_PWM_Start_IT+0xae>
 800350a:	683b      	ldr	r3, [r7, #0]
 800350c:	2b08      	cmp	r3, #8
 800350e:	d104      	bne.n	800351a <HAL_TIM_PWM_Start_IT+0xa6>
 8003510:	687b      	ldr	r3, [r7, #4]
 8003512:	2202      	movs	r2, #2
 8003514:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003518:	e003      	b.n	8003522 <HAL_TIM_PWM_Start_IT+0xae>
 800351a:	687b      	ldr	r3, [r7, #4]
 800351c:	2202      	movs	r2, #2
 800351e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003522:	683b      	ldr	r3, [r7, #0]
 8003524:	2b0c      	cmp	r3, #12
 8003526:	d841      	bhi.n	80035ac <HAL_TIM_PWM_Start_IT+0x138>
 8003528:	a201      	add	r2, pc, #4	@ (adr r2, 8003530 <HAL_TIM_PWM_Start_IT+0xbc>)
 800352a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800352e:	bf00      	nop
 8003530:	08003565 	.word	0x08003565
 8003534:	080035ad 	.word	0x080035ad
 8003538:	080035ad 	.word	0x080035ad
 800353c:	080035ad 	.word	0x080035ad
 8003540:	08003577 	.word	0x08003577
 8003544:	080035ad 	.word	0x080035ad
 8003548:	080035ad 	.word	0x080035ad
 800354c:	080035ad 	.word	0x080035ad
 8003550:	08003589 	.word	0x08003589
 8003554:	080035ad 	.word	0x080035ad
 8003558:	080035ad 	.word	0x080035ad
 800355c:	080035ad 	.word	0x080035ad
 8003560:	0800359b 	.word	0x0800359b
 8003564:	687b      	ldr	r3, [r7, #4]
 8003566:	681b      	ldr	r3, [r3, #0]
 8003568:	68da      	ldr	r2, [r3, #12]
 800356a:	687b      	ldr	r3, [r7, #4]
 800356c:	681b      	ldr	r3, [r3, #0]
 800356e:	f042 0202 	orr.w	r2, r2, #2
 8003572:	60da      	str	r2, [r3, #12]
 8003574:	e01d      	b.n	80035b2 <HAL_TIM_PWM_Start_IT+0x13e>
 8003576:	687b      	ldr	r3, [r7, #4]
 8003578:	681b      	ldr	r3, [r3, #0]
 800357a:	68da      	ldr	r2, [r3, #12]
 800357c:	687b      	ldr	r3, [r7, #4]
 800357e:	681b      	ldr	r3, [r3, #0]
 8003580:	f042 0204 	orr.w	r2, r2, #4
 8003584:	60da      	str	r2, [r3, #12]
 8003586:	e014      	b.n	80035b2 <HAL_TIM_PWM_Start_IT+0x13e>
 8003588:	687b      	ldr	r3, [r7, #4]
 800358a:	681b      	ldr	r3, [r3, #0]
 800358c:	68da      	ldr	r2, [r3, #12]
 800358e:	687b      	ldr	r3, [r7, #4]
 8003590:	681b      	ldr	r3, [r3, #0]
 8003592:	f042 0208 	orr.w	r2, r2, #8
 8003596:	60da      	str	r2, [r3, #12]
 8003598:	e00b      	b.n	80035b2 <HAL_TIM_PWM_Start_IT+0x13e>
 800359a:	687b      	ldr	r3, [r7, #4]
 800359c:	681b      	ldr	r3, [r3, #0]
 800359e:	68da      	ldr	r2, [r3, #12]
 80035a0:	687b      	ldr	r3, [r7, #4]
 80035a2:	681b      	ldr	r3, [r3, #0]
 80035a4:	f042 0210 	orr.w	r2, r2, #16
 80035a8:	60da      	str	r2, [r3, #12]
 80035aa:	e002      	b.n	80035b2 <HAL_TIM_PWM_Start_IT+0x13e>
 80035ac:	2301      	movs	r3, #1
 80035ae:	73fb      	strb	r3, [r7, #15]
 80035b0:	bf00      	nop
 80035b2:	7bfb      	ldrb	r3, [r7, #15]
 80035b4:	2b00      	cmp	r3, #0
 80035b6:	d15f      	bne.n	8003678 <HAL_TIM_PWM_Start_IT+0x204>
 80035b8:	687b      	ldr	r3, [r7, #4]
 80035ba:	681b      	ldr	r3, [r3, #0]
 80035bc:	2201      	movs	r2, #1
 80035be:	6839      	ldr	r1, [r7, #0]
 80035c0:	4618      	mov	r0, r3
 80035c2:	f000 ff8c 	bl	80044de <TIM_CCxChannelCmd>
 80035c6:	687b      	ldr	r3, [r7, #4]
 80035c8:	681b      	ldr	r3, [r3, #0]
 80035ca:	4a2e      	ldr	r2, [pc, #184]	@ (8003684 <HAL_TIM_PWM_Start_IT+0x210>)
 80035cc:	4293      	cmp	r3, r2
 80035ce:	d004      	beq.n	80035da <HAL_TIM_PWM_Start_IT+0x166>
 80035d0:	687b      	ldr	r3, [r7, #4]
 80035d2:	681b      	ldr	r3, [r3, #0]
 80035d4:	4a2c      	ldr	r2, [pc, #176]	@ (8003688 <HAL_TIM_PWM_Start_IT+0x214>)
 80035d6:	4293      	cmp	r3, r2
 80035d8:	d101      	bne.n	80035de <HAL_TIM_PWM_Start_IT+0x16a>
 80035da:	2301      	movs	r3, #1
 80035dc:	e000      	b.n	80035e0 <HAL_TIM_PWM_Start_IT+0x16c>
 80035de:	2300      	movs	r3, #0
 80035e0:	2b00      	cmp	r3, #0
 80035e2:	d007      	beq.n	80035f4 <HAL_TIM_PWM_Start_IT+0x180>
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	681b      	ldr	r3, [r3, #0]
 80035e8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80035ea:	687b      	ldr	r3, [r7, #4]
 80035ec:	681b      	ldr	r3, [r3, #0]
 80035ee:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80035f2:	645a      	str	r2, [r3, #68]	@ 0x44
 80035f4:	687b      	ldr	r3, [r7, #4]
 80035f6:	681b      	ldr	r3, [r3, #0]
 80035f8:	4a22      	ldr	r2, [pc, #136]	@ (8003684 <HAL_TIM_PWM_Start_IT+0x210>)
 80035fa:	4293      	cmp	r3, r2
 80035fc:	d022      	beq.n	8003644 <HAL_TIM_PWM_Start_IT+0x1d0>
 80035fe:	687b      	ldr	r3, [r7, #4]
 8003600:	681b      	ldr	r3, [r3, #0]
 8003602:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003606:	d01d      	beq.n	8003644 <HAL_TIM_PWM_Start_IT+0x1d0>
 8003608:	687b      	ldr	r3, [r7, #4]
 800360a:	681b      	ldr	r3, [r3, #0]
 800360c:	4a1f      	ldr	r2, [pc, #124]	@ (800368c <HAL_TIM_PWM_Start_IT+0x218>)
 800360e:	4293      	cmp	r3, r2
 8003610:	d018      	beq.n	8003644 <HAL_TIM_PWM_Start_IT+0x1d0>
 8003612:	687b      	ldr	r3, [r7, #4]
 8003614:	681b      	ldr	r3, [r3, #0]
 8003616:	4a1e      	ldr	r2, [pc, #120]	@ (8003690 <HAL_TIM_PWM_Start_IT+0x21c>)
 8003618:	4293      	cmp	r3, r2
 800361a:	d013      	beq.n	8003644 <HAL_TIM_PWM_Start_IT+0x1d0>
 800361c:	687b      	ldr	r3, [r7, #4]
 800361e:	681b      	ldr	r3, [r3, #0]
 8003620:	4a1c      	ldr	r2, [pc, #112]	@ (8003694 <HAL_TIM_PWM_Start_IT+0x220>)
 8003622:	4293      	cmp	r3, r2
 8003624:	d00e      	beq.n	8003644 <HAL_TIM_PWM_Start_IT+0x1d0>
 8003626:	687b      	ldr	r3, [r7, #4]
 8003628:	681b      	ldr	r3, [r3, #0]
 800362a:	4a17      	ldr	r2, [pc, #92]	@ (8003688 <HAL_TIM_PWM_Start_IT+0x214>)
 800362c:	4293      	cmp	r3, r2
 800362e:	d009      	beq.n	8003644 <HAL_TIM_PWM_Start_IT+0x1d0>
 8003630:	687b      	ldr	r3, [r7, #4]
 8003632:	681b      	ldr	r3, [r3, #0]
 8003634:	4a18      	ldr	r2, [pc, #96]	@ (8003698 <HAL_TIM_PWM_Start_IT+0x224>)
 8003636:	4293      	cmp	r3, r2
 8003638:	d004      	beq.n	8003644 <HAL_TIM_PWM_Start_IT+0x1d0>
 800363a:	687b      	ldr	r3, [r7, #4]
 800363c:	681b      	ldr	r3, [r3, #0]
 800363e:	4a17      	ldr	r2, [pc, #92]	@ (800369c <HAL_TIM_PWM_Start_IT+0x228>)
 8003640:	4293      	cmp	r3, r2
 8003642:	d111      	bne.n	8003668 <HAL_TIM_PWM_Start_IT+0x1f4>
 8003644:	687b      	ldr	r3, [r7, #4]
 8003646:	681b      	ldr	r3, [r3, #0]
 8003648:	689b      	ldr	r3, [r3, #8]
 800364a:	f003 0307 	and.w	r3, r3, #7
 800364e:	60bb      	str	r3, [r7, #8]
 8003650:	68bb      	ldr	r3, [r7, #8]
 8003652:	2b06      	cmp	r3, #6
 8003654:	d010      	beq.n	8003678 <HAL_TIM_PWM_Start_IT+0x204>
 8003656:	687b      	ldr	r3, [r7, #4]
 8003658:	681b      	ldr	r3, [r3, #0]
 800365a:	681a      	ldr	r2, [r3, #0]
 800365c:	687b      	ldr	r3, [r7, #4]
 800365e:	681b      	ldr	r3, [r3, #0]
 8003660:	f042 0201 	orr.w	r2, r2, #1
 8003664:	601a      	str	r2, [r3, #0]
 8003666:	e007      	b.n	8003678 <HAL_TIM_PWM_Start_IT+0x204>
 8003668:	687b      	ldr	r3, [r7, #4]
 800366a:	681b      	ldr	r3, [r3, #0]
 800366c:	681a      	ldr	r2, [r3, #0]
 800366e:	687b      	ldr	r3, [r7, #4]
 8003670:	681b      	ldr	r3, [r3, #0]
 8003672:	f042 0201 	orr.w	r2, r2, #1
 8003676:	601a      	str	r2, [r3, #0]
 8003678:	7bfb      	ldrb	r3, [r7, #15]
 800367a:	4618      	mov	r0, r3
 800367c:	3710      	adds	r7, #16
 800367e:	46bd      	mov	sp, r7
 8003680:	bd80      	pop	{r7, pc}
 8003682:	bf00      	nop
 8003684:	40010000 	.word	0x40010000
 8003688:	40010400 	.word	0x40010400
 800368c:	40000400 	.word	0x40000400
 8003690:	40000800 	.word	0x40000800
 8003694:	40000c00 	.word	0x40000c00
 8003698:	40014000 	.word	0x40014000
 800369c:	40001800 	.word	0x40001800

080036a0 <HAL_TIM_PWM_Stop_IT>:
 80036a0:	b580      	push	{r7, lr}
 80036a2:	b084      	sub	sp, #16
 80036a4:	af00      	add	r7, sp, #0
 80036a6:	6078      	str	r0, [r7, #4]
 80036a8:	6039      	str	r1, [r7, #0]
 80036aa:	2300      	movs	r3, #0
 80036ac:	73fb      	strb	r3, [r7, #15]
 80036ae:	683b      	ldr	r3, [r7, #0]
 80036b0:	2b0c      	cmp	r3, #12
 80036b2:	d841      	bhi.n	8003738 <HAL_TIM_PWM_Stop_IT+0x98>
 80036b4:	a201      	add	r2, pc, #4	@ (adr r2, 80036bc <HAL_TIM_PWM_Stop_IT+0x1c>)
 80036b6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80036ba:	bf00      	nop
 80036bc:	080036f1 	.word	0x080036f1
 80036c0:	08003739 	.word	0x08003739
 80036c4:	08003739 	.word	0x08003739
 80036c8:	08003739 	.word	0x08003739
 80036cc:	08003703 	.word	0x08003703
 80036d0:	08003739 	.word	0x08003739
 80036d4:	08003739 	.word	0x08003739
 80036d8:	08003739 	.word	0x08003739
 80036dc:	08003715 	.word	0x08003715
 80036e0:	08003739 	.word	0x08003739
 80036e4:	08003739 	.word	0x08003739
 80036e8:	08003739 	.word	0x08003739
 80036ec:	08003727 	.word	0x08003727
 80036f0:	687b      	ldr	r3, [r7, #4]
 80036f2:	681b      	ldr	r3, [r3, #0]
 80036f4:	68da      	ldr	r2, [r3, #12]
 80036f6:	687b      	ldr	r3, [r7, #4]
 80036f8:	681b      	ldr	r3, [r3, #0]
 80036fa:	f022 0202 	bic.w	r2, r2, #2
 80036fe:	60da      	str	r2, [r3, #12]
 8003700:	e01d      	b.n	800373e <HAL_TIM_PWM_Stop_IT+0x9e>
 8003702:	687b      	ldr	r3, [r7, #4]
 8003704:	681b      	ldr	r3, [r3, #0]
 8003706:	68da      	ldr	r2, [r3, #12]
 8003708:	687b      	ldr	r3, [r7, #4]
 800370a:	681b      	ldr	r3, [r3, #0]
 800370c:	f022 0204 	bic.w	r2, r2, #4
 8003710:	60da      	str	r2, [r3, #12]
 8003712:	e014      	b.n	800373e <HAL_TIM_PWM_Stop_IT+0x9e>
 8003714:	687b      	ldr	r3, [r7, #4]
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	68da      	ldr	r2, [r3, #12]
 800371a:	687b      	ldr	r3, [r7, #4]
 800371c:	681b      	ldr	r3, [r3, #0]
 800371e:	f022 0208 	bic.w	r2, r2, #8
 8003722:	60da      	str	r2, [r3, #12]
 8003724:	e00b      	b.n	800373e <HAL_TIM_PWM_Stop_IT+0x9e>
 8003726:	687b      	ldr	r3, [r7, #4]
 8003728:	681b      	ldr	r3, [r3, #0]
 800372a:	68da      	ldr	r2, [r3, #12]
 800372c:	687b      	ldr	r3, [r7, #4]
 800372e:	681b      	ldr	r3, [r3, #0]
 8003730:	f022 0210 	bic.w	r2, r2, #16
 8003734:	60da      	str	r2, [r3, #12]
 8003736:	e002      	b.n	800373e <HAL_TIM_PWM_Stop_IT+0x9e>
 8003738:	2301      	movs	r3, #1
 800373a:	73fb      	strb	r3, [r7, #15]
 800373c:	bf00      	nop
 800373e:	7bfb      	ldrb	r3, [r7, #15]
 8003740:	2b00      	cmp	r3, #0
 8003742:	d161      	bne.n	8003808 <HAL_TIM_PWM_Stop_IT+0x168>
 8003744:	687b      	ldr	r3, [r7, #4]
 8003746:	681b      	ldr	r3, [r3, #0]
 8003748:	2200      	movs	r2, #0
 800374a:	6839      	ldr	r1, [r7, #0]
 800374c:	4618      	mov	r0, r3
 800374e:	f000 fec6 	bl	80044de <TIM_CCxChannelCmd>
 8003752:	687b      	ldr	r3, [r7, #4]
 8003754:	681b      	ldr	r3, [r3, #0]
 8003756:	4a2f      	ldr	r2, [pc, #188]	@ (8003814 <HAL_TIM_PWM_Stop_IT+0x174>)
 8003758:	4293      	cmp	r3, r2
 800375a:	d004      	beq.n	8003766 <HAL_TIM_PWM_Stop_IT+0xc6>
 800375c:	687b      	ldr	r3, [r7, #4]
 800375e:	681b      	ldr	r3, [r3, #0]
 8003760:	4a2d      	ldr	r2, [pc, #180]	@ (8003818 <HAL_TIM_PWM_Stop_IT+0x178>)
 8003762:	4293      	cmp	r3, r2
 8003764:	d101      	bne.n	800376a <HAL_TIM_PWM_Stop_IT+0xca>
 8003766:	2301      	movs	r3, #1
 8003768:	e000      	b.n	800376c <HAL_TIM_PWM_Stop_IT+0xcc>
 800376a:	2300      	movs	r3, #0
 800376c:	2b00      	cmp	r3, #0
 800376e:	d017      	beq.n	80037a0 <HAL_TIM_PWM_Stop_IT+0x100>
 8003770:	687b      	ldr	r3, [r7, #4]
 8003772:	681b      	ldr	r3, [r3, #0]
 8003774:	6a1a      	ldr	r2, [r3, #32]
 8003776:	f241 1311 	movw	r3, #4369	@ 0x1111
 800377a:	4013      	ands	r3, r2
 800377c:	2b00      	cmp	r3, #0
 800377e:	d10f      	bne.n	80037a0 <HAL_TIM_PWM_Stop_IT+0x100>
 8003780:	687b      	ldr	r3, [r7, #4]
 8003782:	681b      	ldr	r3, [r3, #0]
 8003784:	6a1a      	ldr	r2, [r3, #32]
 8003786:	f240 4344 	movw	r3, #1092	@ 0x444
 800378a:	4013      	ands	r3, r2
 800378c:	2b00      	cmp	r3, #0
 800378e:	d107      	bne.n	80037a0 <HAL_TIM_PWM_Stop_IT+0x100>
 8003790:	687b      	ldr	r3, [r7, #4]
 8003792:	681b      	ldr	r3, [r3, #0]
 8003794:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8003796:	687b      	ldr	r3, [r7, #4]
 8003798:	681b      	ldr	r3, [r3, #0]
 800379a:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800379e:	645a      	str	r2, [r3, #68]	@ 0x44
 80037a0:	687b      	ldr	r3, [r7, #4]
 80037a2:	681b      	ldr	r3, [r3, #0]
 80037a4:	6a1a      	ldr	r2, [r3, #32]
 80037a6:	f241 1311 	movw	r3, #4369	@ 0x1111
 80037aa:	4013      	ands	r3, r2
 80037ac:	2b00      	cmp	r3, #0
 80037ae:	d10f      	bne.n	80037d0 <HAL_TIM_PWM_Stop_IT+0x130>
 80037b0:	687b      	ldr	r3, [r7, #4]
 80037b2:	681b      	ldr	r3, [r3, #0]
 80037b4:	6a1a      	ldr	r2, [r3, #32]
 80037b6:	f240 4344 	movw	r3, #1092	@ 0x444
 80037ba:	4013      	ands	r3, r2
 80037bc:	2b00      	cmp	r3, #0
 80037be:	d107      	bne.n	80037d0 <HAL_TIM_PWM_Stop_IT+0x130>
 80037c0:	687b      	ldr	r3, [r7, #4]
 80037c2:	681b      	ldr	r3, [r3, #0]
 80037c4:	681a      	ldr	r2, [r3, #0]
 80037c6:	687b      	ldr	r3, [r7, #4]
 80037c8:	681b      	ldr	r3, [r3, #0]
 80037ca:	f022 0201 	bic.w	r2, r2, #1
 80037ce:	601a      	str	r2, [r3, #0]
 80037d0:	683b      	ldr	r3, [r7, #0]
 80037d2:	2b00      	cmp	r3, #0
 80037d4:	d104      	bne.n	80037e0 <HAL_TIM_PWM_Stop_IT+0x140>
 80037d6:	687b      	ldr	r3, [r7, #4]
 80037d8:	2201      	movs	r2, #1
 80037da:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80037de:	e013      	b.n	8003808 <HAL_TIM_PWM_Stop_IT+0x168>
 80037e0:	683b      	ldr	r3, [r7, #0]
 80037e2:	2b04      	cmp	r3, #4
 80037e4:	d104      	bne.n	80037f0 <HAL_TIM_PWM_Stop_IT+0x150>
 80037e6:	687b      	ldr	r3, [r7, #4]
 80037e8:	2201      	movs	r2, #1
 80037ea:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80037ee:	e00b      	b.n	8003808 <HAL_TIM_PWM_Stop_IT+0x168>
 80037f0:	683b      	ldr	r3, [r7, #0]
 80037f2:	2b08      	cmp	r3, #8
 80037f4:	d104      	bne.n	8003800 <HAL_TIM_PWM_Stop_IT+0x160>
 80037f6:	687b      	ldr	r3, [r7, #4]
 80037f8:	2201      	movs	r2, #1
 80037fa:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80037fe:	e003      	b.n	8003808 <HAL_TIM_PWM_Stop_IT+0x168>
 8003800:	687b      	ldr	r3, [r7, #4]
 8003802:	2201      	movs	r2, #1
 8003804:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003808:	7bfb      	ldrb	r3, [r7, #15]
 800380a:	4618      	mov	r0, r3
 800380c:	3710      	adds	r7, #16
 800380e:	46bd      	mov	sp, r7
 8003810:	bd80      	pop	{r7, pc}
 8003812:	bf00      	nop
 8003814:	40010000 	.word	0x40010000
 8003818:	40010400 	.word	0x40010400

0800381c <HAL_TIM_IRQHandler>:
 800381c:	b580      	push	{r7, lr}
 800381e:	b084      	sub	sp, #16
 8003820:	af00      	add	r7, sp, #0
 8003822:	6078      	str	r0, [r7, #4]
 8003824:	687b      	ldr	r3, [r7, #4]
 8003826:	681b      	ldr	r3, [r3, #0]
 8003828:	68db      	ldr	r3, [r3, #12]
 800382a:	60fb      	str	r3, [r7, #12]
 800382c:	687b      	ldr	r3, [r7, #4]
 800382e:	681b      	ldr	r3, [r3, #0]
 8003830:	691b      	ldr	r3, [r3, #16]
 8003832:	60bb      	str	r3, [r7, #8]
 8003834:	68bb      	ldr	r3, [r7, #8]
 8003836:	f003 0302 	and.w	r3, r3, #2
 800383a:	2b00      	cmp	r3, #0
 800383c:	d020      	beq.n	8003880 <HAL_TIM_IRQHandler+0x64>
 800383e:	68fb      	ldr	r3, [r7, #12]
 8003840:	f003 0302 	and.w	r3, r3, #2
 8003844:	2b00      	cmp	r3, #0
 8003846:	d01b      	beq.n	8003880 <HAL_TIM_IRQHandler+0x64>
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	681b      	ldr	r3, [r3, #0]
 800384c:	f06f 0202 	mvn.w	r2, #2
 8003850:	611a      	str	r2, [r3, #16]
 8003852:	687b      	ldr	r3, [r7, #4]
 8003854:	2201      	movs	r2, #1
 8003856:	771a      	strb	r2, [r3, #28]
 8003858:	687b      	ldr	r3, [r7, #4]
 800385a:	681b      	ldr	r3, [r3, #0]
 800385c:	699b      	ldr	r3, [r3, #24]
 800385e:	f003 0303 	and.w	r3, r3, #3
 8003862:	2b00      	cmp	r3, #0
 8003864:	d003      	beq.n	800386e <HAL_TIM_IRQHandler+0x52>
 8003866:	6878      	ldr	r0, [r7, #4]
 8003868:	f000 fa9d 	bl	8003da6 <HAL_TIM_IC_CaptureCallback>
 800386c:	e005      	b.n	800387a <HAL_TIM_IRQHandler+0x5e>
 800386e:	6878      	ldr	r0, [r7, #4]
 8003870:	f000 fa8f 	bl	8003d92 <HAL_TIM_OC_DelayElapsedCallback>
 8003874:	6878      	ldr	r0, [r7, #4]
 8003876:	f7fd f8e5 	bl	8000a44 <HAL_TIM_PWM_PulseFinishedCallback>
 800387a:	687b      	ldr	r3, [r7, #4]
 800387c:	2200      	movs	r2, #0
 800387e:	771a      	strb	r2, [r3, #28]
 8003880:	68bb      	ldr	r3, [r7, #8]
 8003882:	f003 0304 	and.w	r3, r3, #4
 8003886:	2b00      	cmp	r3, #0
 8003888:	d020      	beq.n	80038cc <HAL_TIM_IRQHandler+0xb0>
 800388a:	68fb      	ldr	r3, [r7, #12]
 800388c:	f003 0304 	and.w	r3, r3, #4
 8003890:	2b00      	cmp	r3, #0
 8003892:	d01b      	beq.n	80038cc <HAL_TIM_IRQHandler+0xb0>
 8003894:	687b      	ldr	r3, [r7, #4]
 8003896:	681b      	ldr	r3, [r3, #0]
 8003898:	f06f 0204 	mvn.w	r2, #4
 800389c:	611a      	str	r2, [r3, #16]
 800389e:	687b      	ldr	r3, [r7, #4]
 80038a0:	2202      	movs	r2, #2
 80038a2:	771a      	strb	r2, [r3, #28]
 80038a4:	687b      	ldr	r3, [r7, #4]
 80038a6:	681b      	ldr	r3, [r3, #0]
 80038a8:	699b      	ldr	r3, [r3, #24]
 80038aa:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80038ae:	2b00      	cmp	r3, #0
 80038b0:	d003      	beq.n	80038ba <HAL_TIM_IRQHandler+0x9e>
 80038b2:	6878      	ldr	r0, [r7, #4]
 80038b4:	f000 fa77 	bl	8003da6 <HAL_TIM_IC_CaptureCallback>
 80038b8:	e005      	b.n	80038c6 <HAL_TIM_IRQHandler+0xaa>
 80038ba:	6878      	ldr	r0, [r7, #4]
 80038bc:	f000 fa69 	bl	8003d92 <HAL_TIM_OC_DelayElapsedCallback>
 80038c0:	6878      	ldr	r0, [r7, #4]
 80038c2:	f7fd f8bf 	bl	8000a44 <HAL_TIM_PWM_PulseFinishedCallback>
 80038c6:	687b      	ldr	r3, [r7, #4]
 80038c8:	2200      	movs	r2, #0
 80038ca:	771a      	strb	r2, [r3, #28]
 80038cc:	68bb      	ldr	r3, [r7, #8]
 80038ce:	f003 0308 	and.w	r3, r3, #8
 80038d2:	2b00      	cmp	r3, #0
 80038d4:	d020      	beq.n	8003918 <HAL_TIM_IRQHandler+0xfc>
 80038d6:	68fb      	ldr	r3, [r7, #12]
 80038d8:	f003 0308 	and.w	r3, r3, #8
 80038dc:	2b00      	cmp	r3, #0
 80038de:	d01b      	beq.n	8003918 <HAL_TIM_IRQHandler+0xfc>
 80038e0:	687b      	ldr	r3, [r7, #4]
 80038e2:	681b      	ldr	r3, [r3, #0]
 80038e4:	f06f 0208 	mvn.w	r2, #8
 80038e8:	611a      	str	r2, [r3, #16]
 80038ea:	687b      	ldr	r3, [r7, #4]
 80038ec:	2204      	movs	r2, #4
 80038ee:	771a      	strb	r2, [r3, #28]
 80038f0:	687b      	ldr	r3, [r7, #4]
 80038f2:	681b      	ldr	r3, [r3, #0]
 80038f4:	69db      	ldr	r3, [r3, #28]
 80038f6:	f003 0303 	and.w	r3, r3, #3
 80038fa:	2b00      	cmp	r3, #0
 80038fc:	d003      	beq.n	8003906 <HAL_TIM_IRQHandler+0xea>
 80038fe:	6878      	ldr	r0, [r7, #4]
 8003900:	f000 fa51 	bl	8003da6 <HAL_TIM_IC_CaptureCallback>
 8003904:	e005      	b.n	8003912 <HAL_TIM_IRQHandler+0xf6>
 8003906:	6878      	ldr	r0, [r7, #4]
 8003908:	f000 fa43 	bl	8003d92 <HAL_TIM_OC_DelayElapsedCallback>
 800390c:	6878      	ldr	r0, [r7, #4]
 800390e:	f7fd f899 	bl	8000a44 <HAL_TIM_PWM_PulseFinishedCallback>
 8003912:	687b      	ldr	r3, [r7, #4]
 8003914:	2200      	movs	r2, #0
 8003916:	771a      	strb	r2, [r3, #28]
 8003918:	68bb      	ldr	r3, [r7, #8]
 800391a:	f003 0310 	and.w	r3, r3, #16
 800391e:	2b00      	cmp	r3, #0
 8003920:	d020      	beq.n	8003964 <HAL_TIM_IRQHandler+0x148>
 8003922:	68fb      	ldr	r3, [r7, #12]
 8003924:	f003 0310 	and.w	r3, r3, #16
 8003928:	2b00      	cmp	r3, #0
 800392a:	d01b      	beq.n	8003964 <HAL_TIM_IRQHandler+0x148>
 800392c:	687b      	ldr	r3, [r7, #4]
 800392e:	681b      	ldr	r3, [r3, #0]
 8003930:	f06f 0210 	mvn.w	r2, #16
 8003934:	611a      	str	r2, [r3, #16]
 8003936:	687b      	ldr	r3, [r7, #4]
 8003938:	2208      	movs	r2, #8
 800393a:	771a      	strb	r2, [r3, #28]
 800393c:	687b      	ldr	r3, [r7, #4]
 800393e:	681b      	ldr	r3, [r3, #0]
 8003940:	69db      	ldr	r3, [r3, #28]
 8003942:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003946:	2b00      	cmp	r3, #0
 8003948:	d003      	beq.n	8003952 <HAL_TIM_IRQHandler+0x136>
 800394a:	6878      	ldr	r0, [r7, #4]
 800394c:	f000 fa2b 	bl	8003da6 <HAL_TIM_IC_CaptureCallback>
 8003950:	e005      	b.n	800395e <HAL_TIM_IRQHandler+0x142>
 8003952:	6878      	ldr	r0, [r7, #4]
 8003954:	f000 fa1d 	bl	8003d92 <HAL_TIM_OC_DelayElapsedCallback>
 8003958:	6878      	ldr	r0, [r7, #4]
 800395a:	f7fd f873 	bl	8000a44 <HAL_TIM_PWM_PulseFinishedCallback>
 800395e:	687b      	ldr	r3, [r7, #4]
 8003960:	2200      	movs	r2, #0
 8003962:	771a      	strb	r2, [r3, #28]
 8003964:	68bb      	ldr	r3, [r7, #8]
 8003966:	f003 0301 	and.w	r3, r3, #1
 800396a:	2b00      	cmp	r3, #0
 800396c:	d00c      	beq.n	8003988 <HAL_TIM_IRQHandler+0x16c>
 800396e:	68fb      	ldr	r3, [r7, #12]
 8003970:	f003 0301 	and.w	r3, r3, #1
 8003974:	2b00      	cmp	r3, #0
 8003976:	d007      	beq.n	8003988 <HAL_TIM_IRQHandler+0x16c>
 8003978:	687b      	ldr	r3, [r7, #4]
 800397a:	681b      	ldr	r3, [r3, #0]
 800397c:	f06f 0201 	mvn.w	r2, #1
 8003980:	611a      	str	r2, [r3, #16]
 8003982:	6878      	ldr	r0, [r7, #4]
 8003984:	f7fd f854 	bl	8000a30 <HAL_TIM_PeriodElapsedCallback>
 8003988:	68bb      	ldr	r3, [r7, #8]
 800398a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800398e:	2b00      	cmp	r3, #0
 8003990:	d00c      	beq.n	80039ac <HAL_TIM_IRQHandler+0x190>
 8003992:	68fb      	ldr	r3, [r7, #12]
 8003994:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003998:	2b00      	cmp	r3, #0
 800399a:	d007      	beq.n	80039ac <HAL_TIM_IRQHandler+0x190>
 800399c:	687b      	ldr	r3, [r7, #4]
 800399e:	681b      	ldr	r3, [r3, #0]
 80039a0:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 80039a4:	611a      	str	r2, [r3, #16]
 80039a6:	6878      	ldr	r0, [r7, #4]
 80039a8:	f000 fe96 	bl	80046d8 <HAL_TIMEx_BreakCallback>
 80039ac:	68bb      	ldr	r3, [r7, #8]
 80039ae:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80039b2:	2b00      	cmp	r3, #0
 80039b4:	d00c      	beq.n	80039d0 <HAL_TIM_IRQHandler+0x1b4>
 80039b6:	68fb      	ldr	r3, [r7, #12]
 80039b8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80039bc:	2b00      	cmp	r3, #0
 80039be:	d007      	beq.n	80039d0 <HAL_TIM_IRQHandler+0x1b4>
 80039c0:	687b      	ldr	r3, [r7, #4]
 80039c2:	681b      	ldr	r3, [r3, #0]
 80039c4:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80039c8:	611a      	str	r2, [r3, #16]
 80039ca:	6878      	ldr	r0, [r7, #4]
 80039cc:	f000 f9f5 	bl	8003dba <HAL_TIM_TriggerCallback>
 80039d0:	68bb      	ldr	r3, [r7, #8]
 80039d2:	f003 0320 	and.w	r3, r3, #32
 80039d6:	2b00      	cmp	r3, #0
 80039d8:	d00c      	beq.n	80039f4 <HAL_TIM_IRQHandler+0x1d8>
 80039da:	68fb      	ldr	r3, [r7, #12]
 80039dc:	f003 0320 	and.w	r3, r3, #32
 80039e0:	2b00      	cmp	r3, #0
 80039e2:	d007      	beq.n	80039f4 <HAL_TIM_IRQHandler+0x1d8>
 80039e4:	687b      	ldr	r3, [r7, #4]
 80039e6:	681b      	ldr	r3, [r3, #0]
 80039e8:	f06f 0220 	mvn.w	r2, #32
 80039ec:	611a      	str	r2, [r3, #16]
 80039ee:	6878      	ldr	r0, [r7, #4]
 80039f0:	f000 fe68 	bl	80046c4 <HAL_TIMEx_CommutCallback>
 80039f4:	bf00      	nop
 80039f6:	3710      	adds	r7, #16
 80039f8:	46bd      	mov	sp, r7
 80039fa:	bd80      	pop	{r7, pc}

080039fc <HAL_TIM_PWM_ConfigChannel>:
 80039fc:	b580      	push	{r7, lr}
 80039fe:	b086      	sub	sp, #24
 8003a00:	af00      	add	r7, sp, #0
 8003a02:	60f8      	str	r0, [r7, #12]
 8003a04:	60b9      	str	r1, [r7, #8]
 8003a06:	607a      	str	r2, [r7, #4]
 8003a08:	2300      	movs	r3, #0
 8003a0a:	75fb      	strb	r3, [r7, #23]
 8003a0c:	68fb      	ldr	r3, [r7, #12]
 8003a0e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003a12:	2b01      	cmp	r3, #1
 8003a14:	d101      	bne.n	8003a1a <HAL_TIM_PWM_ConfigChannel+0x1e>
 8003a16:	2302      	movs	r3, #2
 8003a18:	e0ae      	b.n	8003b78 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8003a1a:	68fb      	ldr	r3, [r7, #12]
 8003a1c:	2201      	movs	r2, #1
 8003a1e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003a22:	687b      	ldr	r3, [r7, #4]
 8003a24:	2b0c      	cmp	r3, #12
 8003a26:	f200 809f 	bhi.w	8003b68 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8003a2a:	a201      	add	r2, pc, #4	@ (adr r2, 8003a30 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8003a2c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003a30:	08003a65 	.word	0x08003a65
 8003a34:	08003b69 	.word	0x08003b69
 8003a38:	08003b69 	.word	0x08003b69
 8003a3c:	08003b69 	.word	0x08003b69
 8003a40:	08003aa5 	.word	0x08003aa5
 8003a44:	08003b69 	.word	0x08003b69
 8003a48:	08003b69 	.word	0x08003b69
 8003a4c:	08003b69 	.word	0x08003b69
 8003a50:	08003ae7 	.word	0x08003ae7
 8003a54:	08003b69 	.word	0x08003b69
 8003a58:	08003b69 	.word	0x08003b69
 8003a5c:	08003b69 	.word	0x08003b69
 8003a60:	08003b27 	.word	0x08003b27
 8003a64:	68fb      	ldr	r3, [r7, #12]
 8003a66:	681b      	ldr	r3, [r3, #0]
 8003a68:	68b9      	ldr	r1, [r7, #8]
 8003a6a:	4618      	mov	r0, r3
 8003a6c:	f000 fa5c 	bl	8003f28 <TIM_OC1_SetConfig>
 8003a70:	68fb      	ldr	r3, [r7, #12]
 8003a72:	681b      	ldr	r3, [r3, #0]
 8003a74:	699a      	ldr	r2, [r3, #24]
 8003a76:	68fb      	ldr	r3, [r7, #12]
 8003a78:	681b      	ldr	r3, [r3, #0]
 8003a7a:	f042 0208 	orr.w	r2, r2, #8
 8003a7e:	619a      	str	r2, [r3, #24]
 8003a80:	68fb      	ldr	r3, [r7, #12]
 8003a82:	681b      	ldr	r3, [r3, #0]
 8003a84:	699a      	ldr	r2, [r3, #24]
 8003a86:	68fb      	ldr	r3, [r7, #12]
 8003a88:	681b      	ldr	r3, [r3, #0]
 8003a8a:	f022 0204 	bic.w	r2, r2, #4
 8003a8e:	619a      	str	r2, [r3, #24]
 8003a90:	68fb      	ldr	r3, [r7, #12]
 8003a92:	681b      	ldr	r3, [r3, #0]
 8003a94:	6999      	ldr	r1, [r3, #24]
 8003a96:	68bb      	ldr	r3, [r7, #8]
 8003a98:	691a      	ldr	r2, [r3, #16]
 8003a9a:	68fb      	ldr	r3, [r7, #12]
 8003a9c:	681b      	ldr	r3, [r3, #0]
 8003a9e:	430a      	orrs	r2, r1
 8003aa0:	619a      	str	r2, [r3, #24]
 8003aa2:	e064      	b.n	8003b6e <HAL_TIM_PWM_ConfigChannel+0x172>
 8003aa4:	68fb      	ldr	r3, [r7, #12]
 8003aa6:	681b      	ldr	r3, [r3, #0]
 8003aa8:	68b9      	ldr	r1, [r7, #8]
 8003aaa:	4618      	mov	r0, r3
 8003aac:	f000 faac 	bl	8004008 <TIM_OC2_SetConfig>
 8003ab0:	68fb      	ldr	r3, [r7, #12]
 8003ab2:	681b      	ldr	r3, [r3, #0]
 8003ab4:	699a      	ldr	r2, [r3, #24]
 8003ab6:	68fb      	ldr	r3, [r7, #12]
 8003ab8:	681b      	ldr	r3, [r3, #0]
 8003aba:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8003abe:	619a      	str	r2, [r3, #24]
 8003ac0:	68fb      	ldr	r3, [r7, #12]
 8003ac2:	681b      	ldr	r3, [r3, #0]
 8003ac4:	699a      	ldr	r2, [r3, #24]
 8003ac6:	68fb      	ldr	r3, [r7, #12]
 8003ac8:	681b      	ldr	r3, [r3, #0]
 8003aca:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003ace:	619a      	str	r2, [r3, #24]
 8003ad0:	68fb      	ldr	r3, [r7, #12]
 8003ad2:	681b      	ldr	r3, [r3, #0]
 8003ad4:	6999      	ldr	r1, [r3, #24]
 8003ad6:	68bb      	ldr	r3, [r7, #8]
 8003ad8:	691b      	ldr	r3, [r3, #16]
 8003ada:	021a      	lsls	r2, r3, #8
 8003adc:	68fb      	ldr	r3, [r7, #12]
 8003ade:	681b      	ldr	r3, [r3, #0]
 8003ae0:	430a      	orrs	r2, r1
 8003ae2:	619a      	str	r2, [r3, #24]
 8003ae4:	e043      	b.n	8003b6e <HAL_TIM_PWM_ConfigChannel+0x172>
 8003ae6:	68fb      	ldr	r3, [r7, #12]
 8003ae8:	681b      	ldr	r3, [r3, #0]
 8003aea:	68b9      	ldr	r1, [r7, #8]
 8003aec:	4618      	mov	r0, r3
 8003aee:	f000 fb01 	bl	80040f4 <TIM_OC3_SetConfig>
 8003af2:	68fb      	ldr	r3, [r7, #12]
 8003af4:	681b      	ldr	r3, [r3, #0]
 8003af6:	69da      	ldr	r2, [r3, #28]
 8003af8:	68fb      	ldr	r3, [r7, #12]
 8003afa:	681b      	ldr	r3, [r3, #0]
 8003afc:	f042 0208 	orr.w	r2, r2, #8
 8003b00:	61da      	str	r2, [r3, #28]
 8003b02:	68fb      	ldr	r3, [r7, #12]
 8003b04:	681b      	ldr	r3, [r3, #0]
 8003b06:	69da      	ldr	r2, [r3, #28]
 8003b08:	68fb      	ldr	r3, [r7, #12]
 8003b0a:	681b      	ldr	r3, [r3, #0]
 8003b0c:	f022 0204 	bic.w	r2, r2, #4
 8003b10:	61da      	str	r2, [r3, #28]
 8003b12:	68fb      	ldr	r3, [r7, #12]
 8003b14:	681b      	ldr	r3, [r3, #0]
 8003b16:	69d9      	ldr	r1, [r3, #28]
 8003b18:	68bb      	ldr	r3, [r7, #8]
 8003b1a:	691a      	ldr	r2, [r3, #16]
 8003b1c:	68fb      	ldr	r3, [r7, #12]
 8003b1e:	681b      	ldr	r3, [r3, #0]
 8003b20:	430a      	orrs	r2, r1
 8003b22:	61da      	str	r2, [r3, #28]
 8003b24:	e023      	b.n	8003b6e <HAL_TIM_PWM_ConfigChannel+0x172>
 8003b26:	68fb      	ldr	r3, [r7, #12]
 8003b28:	681b      	ldr	r3, [r3, #0]
 8003b2a:	68b9      	ldr	r1, [r7, #8]
 8003b2c:	4618      	mov	r0, r3
 8003b2e:	f000 fb55 	bl	80041dc <TIM_OC4_SetConfig>
 8003b32:	68fb      	ldr	r3, [r7, #12]
 8003b34:	681b      	ldr	r3, [r3, #0]
 8003b36:	69da      	ldr	r2, [r3, #28]
 8003b38:	68fb      	ldr	r3, [r7, #12]
 8003b3a:	681b      	ldr	r3, [r3, #0]
 8003b3c:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8003b40:	61da      	str	r2, [r3, #28]
 8003b42:	68fb      	ldr	r3, [r7, #12]
 8003b44:	681b      	ldr	r3, [r3, #0]
 8003b46:	69da      	ldr	r2, [r3, #28]
 8003b48:	68fb      	ldr	r3, [r7, #12]
 8003b4a:	681b      	ldr	r3, [r3, #0]
 8003b4c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003b50:	61da      	str	r2, [r3, #28]
 8003b52:	68fb      	ldr	r3, [r7, #12]
 8003b54:	681b      	ldr	r3, [r3, #0]
 8003b56:	69d9      	ldr	r1, [r3, #28]
 8003b58:	68bb      	ldr	r3, [r7, #8]
 8003b5a:	691b      	ldr	r3, [r3, #16]
 8003b5c:	021a      	lsls	r2, r3, #8
 8003b5e:	68fb      	ldr	r3, [r7, #12]
 8003b60:	681b      	ldr	r3, [r3, #0]
 8003b62:	430a      	orrs	r2, r1
 8003b64:	61da      	str	r2, [r3, #28]
 8003b66:	e002      	b.n	8003b6e <HAL_TIM_PWM_ConfigChannel+0x172>
 8003b68:	2301      	movs	r3, #1
 8003b6a:	75fb      	strb	r3, [r7, #23]
 8003b6c:	bf00      	nop
 8003b6e:	68fb      	ldr	r3, [r7, #12]
 8003b70:	2200      	movs	r2, #0
 8003b72:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003b76:	7dfb      	ldrb	r3, [r7, #23]
 8003b78:	4618      	mov	r0, r3
 8003b7a:	3718      	adds	r7, #24
 8003b7c:	46bd      	mov	sp, r7
 8003b7e:	bd80      	pop	{r7, pc}

08003b80 <HAL_TIM_ConfigClockSource>:
 8003b80:	b580      	push	{r7, lr}
 8003b82:	b084      	sub	sp, #16
 8003b84:	af00      	add	r7, sp, #0
 8003b86:	6078      	str	r0, [r7, #4]
 8003b88:	6039      	str	r1, [r7, #0]
 8003b8a:	2300      	movs	r3, #0
 8003b8c:	73fb      	strb	r3, [r7, #15]
 8003b8e:	687b      	ldr	r3, [r7, #4]
 8003b90:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003b94:	2b01      	cmp	r3, #1
 8003b96:	d101      	bne.n	8003b9c <HAL_TIM_ConfigClockSource+0x1c>
 8003b98:	2302      	movs	r3, #2
 8003b9a:	e0b4      	b.n	8003d06 <HAL_TIM_ConfigClockSource+0x186>
 8003b9c:	687b      	ldr	r3, [r7, #4]
 8003b9e:	2201      	movs	r2, #1
 8003ba0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003ba4:	687b      	ldr	r3, [r7, #4]
 8003ba6:	2202      	movs	r2, #2
 8003ba8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003bac:	687b      	ldr	r3, [r7, #4]
 8003bae:	681b      	ldr	r3, [r3, #0]
 8003bb0:	689b      	ldr	r3, [r3, #8]
 8003bb2:	60bb      	str	r3, [r7, #8]
 8003bb4:	68bb      	ldr	r3, [r7, #8]
 8003bb6:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8003bba:	60bb      	str	r3, [r7, #8]
 8003bbc:	68bb      	ldr	r3, [r7, #8]
 8003bbe:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8003bc2:	60bb      	str	r3, [r7, #8]
 8003bc4:	687b      	ldr	r3, [r7, #4]
 8003bc6:	681b      	ldr	r3, [r3, #0]
 8003bc8:	68ba      	ldr	r2, [r7, #8]
 8003bca:	609a      	str	r2, [r3, #8]
 8003bcc:	683b      	ldr	r3, [r7, #0]
 8003bce:	681b      	ldr	r3, [r3, #0]
 8003bd0:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003bd4:	d03e      	beq.n	8003c54 <HAL_TIM_ConfigClockSource+0xd4>
 8003bd6:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003bda:	f200 8087 	bhi.w	8003cec <HAL_TIM_ConfigClockSource+0x16c>
 8003bde:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003be2:	f000 8086 	beq.w	8003cf2 <HAL_TIM_ConfigClockSource+0x172>
 8003be6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003bea:	d87f      	bhi.n	8003cec <HAL_TIM_ConfigClockSource+0x16c>
 8003bec:	2b70      	cmp	r3, #112	@ 0x70
 8003bee:	d01a      	beq.n	8003c26 <HAL_TIM_ConfigClockSource+0xa6>
 8003bf0:	2b70      	cmp	r3, #112	@ 0x70
 8003bf2:	d87b      	bhi.n	8003cec <HAL_TIM_ConfigClockSource+0x16c>
 8003bf4:	2b60      	cmp	r3, #96	@ 0x60
 8003bf6:	d050      	beq.n	8003c9a <HAL_TIM_ConfigClockSource+0x11a>
 8003bf8:	2b60      	cmp	r3, #96	@ 0x60
 8003bfa:	d877      	bhi.n	8003cec <HAL_TIM_ConfigClockSource+0x16c>
 8003bfc:	2b50      	cmp	r3, #80	@ 0x50
 8003bfe:	d03c      	beq.n	8003c7a <HAL_TIM_ConfigClockSource+0xfa>
 8003c00:	2b50      	cmp	r3, #80	@ 0x50
 8003c02:	d873      	bhi.n	8003cec <HAL_TIM_ConfigClockSource+0x16c>
 8003c04:	2b40      	cmp	r3, #64	@ 0x40
 8003c06:	d058      	beq.n	8003cba <HAL_TIM_ConfigClockSource+0x13a>
 8003c08:	2b40      	cmp	r3, #64	@ 0x40
 8003c0a:	d86f      	bhi.n	8003cec <HAL_TIM_ConfigClockSource+0x16c>
 8003c0c:	2b30      	cmp	r3, #48	@ 0x30
 8003c0e:	d064      	beq.n	8003cda <HAL_TIM_ConfigClockSource+0x15a>
 8003c10:	2b30      	cmp	r3, #48	@ 0x30
 8003c12:	d86b      	bhi.n	8003cec <HAL_TIM_ConfigClockSource+0x16c>
 8003c14:	2b20      	cmp	r3, #32
 8003c16:	d060      	beq.n	8003cda <HAL_TIM_ConfigClockSource+0x15a>
 8003c18:	2b20      	cmp	r3, #32
 8003c1a:	d867      	bhi.n	8003cec <HAL_TIM_ConfigClockSource+0x16c>
 8003c1c:	2b00      	cmp	r3, #0
 8003c1e:	d05c      	beq.n	8003cda <HAL_TIM_ConfigClockSource+0x15a>
 8003c20:	2b10      	cmp	r3, #16
 8003c22:	d05a      	beq.n	8003cda <HAL_TIM_ConfigClockSource+0x15a>
 8003c24:	e062      	b.n	8003cec <HAL_TIM_ConfigClockSource+0x16c>
 8003c26:	687b      	ldr	r3, [r7, #4]
 8003c28:	6818      	ldr	r0, [r3, #0]
 8003c2a:	683b      	ldr	r3, [r7, #0]
 8003c2c:	6899      	ldr	r1, [r3, #8]
 8003c2e:	683b      	ldr	r3, [r7, #0]
 8003c30:	685a      	ldr	r2, [r3, #4]
 8003c32:	683b      	ldr	r3, [r7, #0]
 8003c34:	68db      	ldr	r3, [r3, #12]
 8003c36:	f000 fc32 	bl	800449e <TIM_ETR_SetConfig>
 8003c3a:	687b      	ldr	r3, [r7, #4]
 8003c3c:	681b      	ldr	r3, [r3, #0]
 8003c3e:	689b      	ldr	r3, [r3, #8]
 8003c40:	60bb      	str	r3, [r7, #8]
 8003c42:	68bb      	ldr	r3, [r7, #8]
 8003c44:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8003c48:	60bb      	str	r3, [r7, #8]
 8003c4a:	687b      	ldr	r3, [r7, #4]
 8003c4c:	681b      	ldr	r3, [r3, #0]
 8003c4e:	68ba      	ldr	r2, [r7, #8]
 8003c50:	609a      	str	r2, [r3, #8]
 8003c52:	e04f      	b.n	8003cf4 <HAL_TIM_ConfigClockSource+0x174>
 8003c54:	687b      	ldr	r3, [r7, #4]
 8003c56:	6818      	ldr	r0, [r3, #0]
 8003c58:	683b      	ldr	r3, [r7, #0]
 8003c5a:	6899      	ldr	r1, [r3, #8]
 8003c5c:	683b      	ldr	r3, [r7, #0]
 8003c5e:	685a      	ldr	r2, [r3, #4]
 8003c60:	683b      	ldr	r3, [r7, #0]
 8003c62:	68db      	ldr	r3, [r3, #12]
 8003c64:	f000 fc1b 	bl	800449e <TIM_ETR_SetConfig>
 8003c68:	687b      	ldr	r3, [r7, #4]
 8003c6a:	681b      	ldr	r3, [r3, #0]
 8003c6c:	689a      	ldr	r2, [r3, #8]
 8003c6e:	687b      	ldr	r3, [r7, #4]
 8003c70:	681b      	ldr	r3, [r3, #0]
 8003c72:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8003c76:	609a      	str	r2, [r3, #8]
 8003c78:	e03c      	b.n	8003cf4 <HAL_TIM_ConfigClockSource+0x174>
 8003c7a:	687b      	ldr	r3, [r7, #4]
 8003c7c:	6818      	ldr	r0, [r3, #0]
 8003c7e:	683b      	ldr	r3, [r7, #0]
 8003c80:	6859      	ldr	r1, [r3, #4]
 8003c82:	683b      	ldr	r3, [r7, #0]
 8003c84:	68db      	ldr	r3, [r3, #12]
 8003c86:	461a      	mov	r2, r3
 8003c88:	f000 fb8f 	bl	80043aa <TIM_TI1_ConfigInputStage>
 8003c8c:	687b      	ldr	r3, [r7, #4]
 8003c8e:	681b      	ldr	r3, [r3, #0]
 8003c90:	2150      	movs	r1, #80	@ 0x50
 8003c92:	4618      	mov	r0, r3
 8003c94:	f000 fbe8 	bl	8004468 <TIM_ITRx_SetConfig>
 8003c98:	e02c      	b.n	8003cf4 <HAL_TIM_ConfigClockSource+0x174>
 8003c9a:	687b      	ldr	r3, [r7, #4]
 8003c9c:	6818      	ldr	r0, [r3, #0]
 8003c9e:	683b      	ldr	r3, [r7, #0]
 8003ca0:	6859      	ldr	r1, [r3, #4]
 8003ca2:	683b      	ldr	r3, [r7, #0]
 8003ca4:	68db      	ldr	r3, [r3, #12]
 8003ca6:	461a      	mov	r2, r3
 8003ca8:	f000 fbae 	bl	8004408 <TIM_TI2_ConfigInputStage>
 8003cac:	687b      	ldr	r3, [r7, #4]
 8003cae:	681b      	ldr	r3, [r3, #0]
 8003cb0:	2160      	movs	r1, #96	@ 0x60
 8003cb2:	4618      	mov	r0, r3
 8003cb4:	f000 fbd8 	bl	8004468 <TIM_ITRx_SetConfig>
 8003cb8:	e01c      	b.n	8003cf4 <HAL_TIM_ConfigClockSource+0x174>
 8003cba:	687b      	ldr	r3, [r7, #4]
 8003cbc:	6818      	ldr	r0, [r3, #0]
 8003cbe:	683b      	ldr	r3, [r7, #0]
 8003cc0:	6859      	ldr	r1, [r3, #4]
 8003cc2:	683b      	ldr	r3, [r7, #0]
 8003cc4:	68db      	ldr	r3, [r3, #12]
 8003cc6:	461a      	mov	r2, r3
 8003cc8:	f000 fb6f 	bl	80043aa <TIM_TI1_ConfigInputStage>
 8003ccc:	687b      	ldr	r3, [r7, #4]
 8003cce:	681b      	ldr	r3, [r3, #0]
 8003cd0:	2140      	movs	r1, #64	@ 0x40
 8003cd2:	4618      	mov	r0, r3
 8003cd4:	f000 fbc8 	bl	8004468 <TIM_ITRx_SetConfig>
 8003cd8:	e00c      	b.n	8003cf4 <HAL_TIM_ConfigClockSource+0x174>
 8003cda:	687b      	ldr	r3, [r7, #4]
 8003cdc:	681a      	ldr	r2, [r3, #0]
 8003cde:	683b      	ldr	r3, [r7, #0]
 8003ce0:	681b      	ldr	r3, [r3, #0]
 8003ce2:	4619      	mov	r1, r3
 8003ce4:	4610      	mov	r0, r2
 8003ce6:	f000 fbbf 	bl	8004468 <TIM_ITRx_SetConfig>
 8003cea:	e003      	b.n	8003cf4 <HAL_TIM_ConfigClockSource+0x174>
 8003cec:	2301      	movs	r3, #1
 8003cee:	73fb      	strb	r3, [r7, #15]
 8003cf0:	e000      	b.n	8003cf4 <HAL_TIM_ConfigClockSource+0x174>
 8003cf2:	bf00      	nop
 8003cf4:	687b      	ldr	r3, [r7, #4]
 8003cf6:	2201      	movs	r2, #1
 8003cf8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003cfc:	687b      	ldr	r3, [r7, #4]
 8003cfe:	2200      	movs	r2, #0
 8003d00:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003d04:	7bfb      	ldrb	r3, [r7, #15]
 8003d06:	4618      	mov	r0, r3
 8003d08:	3710      	adds	r7, #16
 8003d0a:	46bd      	mov	sp, r7
 8003d0c:	bd80      	pop	{r7, pc}

08003d0e <HAL_TIM_SlaveConfigSynchro>:
 8003d0e:	b580      	push	{r7, lr}
 8003d10:	b082      	sub	sp, #8
 8003d12:	af00      	add	r7, sp, #0
 8003d14:	6078      	str	r0, [r7, #4]
 8003d16:	6039      	str	r1, [r7, #0]
 8003d18:	687b      	ldr	r3, [r7, #4]
 8003d1a:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003d1e:	2b01      	cmp	r3, #1
 8003d20:	d101      	bne.n	8003d26 <HAL_TIM_SlaveConfigSynchro+0x18>
 8003d22:	2302      	movs	r3, #2
 8003d24:	e031      	b.n	8003d8a <HAL_TIM_SlaveConfigSynchro+0x7c>
 8003d26:	687b      	ldr	r3, [r7, #4]
 8003d28:	2201      	movs	r2, #1
 8003d2a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003d2e:	687b      	ldr	r3, [r7, #4]
 8003d30:	2202      	movs	r2, #2
 8003d32:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003d36:	6839      	ldr	r1, [r7, #0]
 8003d38:	6878      	ldr	r0, [r7, #4]
 8003d3a:	f000 faa5 	bl	8004288 <TIM_SlaveTimer_SetConfig>
 8003d3e:	4603      	mov	r3, r0
 8003d40:	2b00      	cmp	r3, #0
 8003d42:	d009      	beq.n	8003d58 <HAL_TIM_SlaveConfigSynchro+0x4a>
 8003d44:	687b      	ldr	r3, [r7, #4]
 8003d46:	2201      	movs	r2, #1
 8003d48:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003d4c:	687b      	ldr	r3, [r7, #4]
 8003d4e:	2200      	movs	r2, #0
 8003d50:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003d54:	2301      	movs	r3, #1
 8003d56:	e018      	b.n	8003d8a <HAL_TIM_SlaveConfigSynchro+0x7c>
 8003d58:	687b      	ldr	r3, [r7, #4]
 8003d5a:	681b      	ldr	r3, [r3, #0]
 8003d5c:	68da      	ldr	r2, [r3, #12]
 8003d5e:	687b      	ldr	r3, [r7, #4]
 8003d60:	681b      	ldr	r3, [r3, #0]
 8003d62:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8003d66:	60da      	str	r2, [r3, #12]
 8003d68:	687b      	ldr	r3, [r7, #4]
 8003d6a:	681b      	ldr	r3, [r3, #0]
 8003d6c:	68da      	ldr	r2, [r3, #12]
 8003d6e:	687b      	ldr	r3, [r7, #4]
 8003d70:	681b      	ldr	r3, [r3, #0]
 8003d72:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8003d76:	60da      	str	r2, [r3, #12]
 8003d78:	687b      	ldr	r3, [r7, #4]
 8003d7a:	2201      	movs	r2, #1
 8003d7c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003d80:	687b      	ldr	r3, [r7, #4]
 8003d82:	2200      	movs	r2, #0
 8003d84:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003d88:	2300      	movs	r3, #0
 8003d8a:	4618      	mov	r0, r3
 8003d8c:	3708      	adds	r7, #8
 8003d8e:	46bd      	mov	sp, r7
 8003d90:	bd80      	pop	{r7, pc}

08003d92 <HAL_TIM_OC_DelayElapsedCallback>:
 8003d92:	b480      	push	{r7}
 8003d94:	b083      	sub	sp, #12
 8003d96:	af00      	add	r7, sp, #0
 8003d98:	6078      	str	r0, [r7, #4]
 8003d9a:	bf00      	nop
 8003d9c:	370c      	adds	r7, #12
 8003d9e:	46bd      	mov	sp, r7
 8003da0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003da4:	4770      	bx	lr

08003da6 <HAL_TIM_IC_CaptureCallback>:
 8003da6:	b480      	push	{r7}
 8003da8:	b083      	sub	sp, #12
 8003daa:	af00      	add	r7, sp, #0
 8003dac:	6078      	str	r0, [r7, #4]
 8003dae:	bf00      	nop
 8003db0:	370c      	adds	r7, #12
 8003db2:	46bd      	mov	sp, r7
 8003db4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003db8:	4770      	bx	lr

08003dba <HAL_TIM_TriggerCallback>:
 8003dba:	b480      	push	{r7}
 8003dbc:	b083      	sub	sp, #12
 8003dbe:	af00      	add	r7, sp, #0
 8003dc0:	6078      	str	r0, [r7, #4]
 8003dc2:	bf00      	nop
 8003dc4:	370c      	adds	r7, #12
 8003dc6:	46bd      	mov	sp, r7
 8003dc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dcc:	4770      	bx	lr
	...

08003dd0 <TIM_Base_SetConfig>:
 8003dd0:	b480      	push	{r7}
 8003dd2:	b085      	sub	sp, #20
 8003dd4:	af00      	add	r7, sp, #0
 8003dd6:	6078      	str	r0, [r7, #4]
 8003dd8:	6039      	str	r1, [r7, #0]
 8003dda:	687b      	ldr	r3, [r7, #4]
 8003ddc:	681b      	ldr	r3, [r3, #0]
 8003dde:	60fb      	str	r3, [r7, #12]
 8003de0:	687b      	ldr	r3, [r7, #4]
 8003de2:	4a46      	ldr	r2, [pc, #280]	@ (8003efc <TIM_Base_SetConfig+0x12c>)
 8003de4:	4293      	cmp	r3, r2
 8003de6:	d013      	beq.n	8003e10 <TIM_Base_SetConfig+0x40>
 8003de8:	687b      	ldr	r3, [r7, #4]
 8003dea:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003dee:	d00f      	beq.n	8003e10 <TIM_Base_SetConfig+0x40>
 8003df0:	687b      	ldr	r3, [r7, #4]
 8003df2:	4a43      	ldr	r2, [pc, #268]	@ (8003f00 <TIM_Base_SetConfig+0x130>)
 8003df4:	4293      	cmp	r3, r2
 8003df6:	d00b      	beq.n	8003e10 <TIM_Base_SetConfig+0x40>
 8003df8:	687b      	ldr	r3, [r7, #4]
 8003dfa:	4a42      	ldr	r2, [pc, #264]	@ (8003f04 <TIM_Base_SetConfig+0x134>)
 8003dfc:	4293      	cmp	r3, r2
 8003dfe:	d007      	beq.n	8003e10 <TIM_Base_SetConfig+0x40>
 8003e00:	687b      	ldr	r3, [r7, #4]
 8003e02:	4a41      	ldr	r2, [pc, #260]	@ (8003f08 <TIM_Base_SetConfig+0x138>)
 8003e04:	4293      	cmp	r3, r2
 8003e06:	d003      	beq.n	8003e10 <TIM_Base_SetConfig+0x40>
 8003e08:	687b      	ldr	r3, [r7, #4]
 8003e0a:	4a40      	ldr	r2, [pc, #256]	@ (8003f0c <TIM_Base_SetConfig+0x13c>)
 8003e0c:	4293      	cmp	r3, r2
 8003e0e:	d108      	bne.n	8003e22 <TIM_Base_SetConfig+0x52>
 8003e10:	68fb      	ldr	r3, [r7, #12]
 8003e12:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8003e16:	60fb      	str	r3, [r7, #12]
 8003e18:	683b      	ldr	r3, [r7, #0]
 8003e1a:	685b      	ldr	r3, [r3, #4]
 8003e1c:	68fa      	ldr	r2, [r7, #12]
 8003e1e:	4313      	orrs	r3, r2
 8003e20:	60fb      	str	r3, [r7, #12]
 8003e22:	687b      	ldr	r3, [r7, #4]
 8003e24:	4a35      	ldr	r2, [pc, #212]	@ (8003efc <TIM_Base_SetConfig+0x12c>)
 8003e26:	4293      	cmp	r3, r2
 8003e28:	d02b      	beq.n	8003e82 <TIM_Base_SetConfig+0xb2>
 8003e2a:	687b      	ldr	r3, [r7, #4]
 8003e2c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003e30:	d027      	beq.n	8003e82 <TIM_Base_SetConfig+0xb2>
 8003e32:	687b      	ldr	r3, [r7, #4]
 8003e34:	4a32      	ldr	r2, [pc, #200]	@ (8003f00 <TIM_Base_SetConfig+0x130>)
 8003e36:	4293      	cmp	r3, r2
 8003e38:	d023      	beq.n	8003e82 <TIM_Base_SetConfig+0xb2>
 8003e3a:	687b      	ldr	r3, [r7, #4]
 8003e3c:	4a31      	ldr	r2, [pc, #196]	@ (8003f04 <TIM_Base_SetConfig+0x134>)
 8003e3e:	4293      	cmp	r3, r2
 8003e40:	d01f      	beq.n	8003e82 <TIM_Base_SetConfig+0xb2>
 8003e42:	687b      	ldr	r3, [r7, #4]
 8003e44:	4a30      	ldr	r2, [pc, #192]	@ (8003f08 <TIM_Base_SetConfig+0x138>)
 8003e46:	4293      	cmp	r3, r2
 8003e48:	d01b      	beq.n	8003e82 <TIM_Base_SetConfig+0xb2>
 8003e4a:	687b      	ldr	r3, [r7, #4]
 8003e4c:	4a2f      	ldr	r2, [pc, #188]	@ (8003f0c <TIM_Base_SetConfig+0x13c>)
 8003e4e:	4293      	cmp	r3, r2
 8003e50:	d017      	beq.n	8003e82 <TIM_Base_SetConfig+0xb2>
 8003e52:	687b      	ldr	r3, [r7, #4]
 8003e54:	4a2e      	ldr	r2, [pc, #184]	@ (8003f10 <TIM_Base_SetConfig+0x140>)
 8003e56:	4293      	cmp	r3, r2
 8003e58:	d013      	beq.n	8003e82 <TIM_Base_SetConfig+0xb2>
 8003e5a:	687b      	ldr	r3, [r7, #4]
 8003e5c:	4a2d      	ldr	r2, [pc, #180]	@ (8003f14 <TIM_Base_SetConfig+0x144>)
 8003e5e:	4293      	cmp	r3, r2
 8003e60:	d00f      	beq.n	8003e82 <TIM_Base_SetConfig+0xb2>
 8003e62:	687b      	ldr	r3, [r7, #4]
 8003e64:	4a2c      	ldr	r2, [pc, #176]	@ (8003f18 <TIM_Base_SetConfig+0x148>)
 8003e66:	4293      	cmp	r3, r2
 8003e68:	d00b      	beq.n	8003e82 <TIM_Base_SetConfig+0xb2>
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	4a2b      	ldr	r2, [pc, #172]	@ (8003f1c <TIM_Base_SetConfig+0x14c>)
 8003e6e:	4293      	cmp	r3, r2
 8003e70:	d007      	beq.n	8003e82 <TIM_Base_SetConfig+0xb2>
 8003e72:	687b      	ldr	r3, [r7, #4]
 8003e74:	4a2a      	ldr	r2, [pc, #168]	@ (8003f20 <TIM_Base_SetConfig+0x150>)
 8003e76:	4293      	cmp	r3, r2
 8003e78:	d003      	beq.n	8003e82 <TIM_Base_SetConfig+0xb2>
 8003e7a:	687b      	ldr	r3, [r7, #4]
 8003e7c:	4a29      	ldr	r2, [pc, #164]	@ (8003f24 <TIM_Base_SetConfig+0x154>)
 8003e7e:	4293      	cmp	r3, r2
 8003e80:	d108      	bne.n	8003e94 <TIM_Base_SetConfig+0xc4>
 8003e82:	68fb      	ldr	r3, [r7, #12]
 8003e84:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003e88:	60fb      	str	r3, [r7, #12]
 8003e8a:	683b      	ldr	r3, [r7, #0]
 8003e8c:	68db      	ldr	r3, [r3, #12]
 8003e8e:	68fa      	ldr	r2, [r7, #12]
 8003e90:	4313      	orrs	r3, r2
 8003e92:	60fb      	str	r3, [r7, #12]
 8003e94:	68fb      	ldr	r3, [r7, #12]
 8003e96:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8003e9a:	683b      	ldr	r3, [r7, #0]
 8003e9c:	695b      	ldr	r3, [r3, #20]
 8003e9e:	4313      	orrs	r3, r2
 8003ea0:	60fb      	str	r3, [r7, #12]
 8003ea2:	687b      	ldr	r3, [r7, #4]
 8003ea4:	68fa      	ldr	r2, [r7, #12]
 8003ea6:	601a      	str	r2, [r3, #0]
 8003ea8:	683b      	ldr	r3, [r7, #0]
 8003eaa:	689a      	ldr	r2, [r3, #8]
 8003eac:	687b      	ldr	r3, [r7, #4]
 8003eae:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003eb0:	683b      	ldr	r3, [r7, #0]
 8003eb2:	681a      	ldr	r2, [r3, #0]
 8003eb4:	687b      	ldr	r3, [r7, #4]
 8003eb6:	629a      	str	r2, [r3, #40]	@ 0x28
 8003eb8:	687b      	ldr	r3, [r7, #4]
 8003eba:	4a10      	ldr	r2, [pc, #64]	@ (8003efc <TIM_Base_SetConfig+0x12c>)
 8003ebc:	4293      	cmp	r3, r2
 8003ebe:	d003      	beq.n	8003ec8 <TIM_Base_SetConfig+0xf8>
 8003ec0:	687b      	ldr	r3, [r7, #4]
 8003ec2:	4a12      	ldr	r2, [pc, #72]	@ (8003f0c <TIM_Base_SetConfig+0x13c>)
 8003ec4:	4293      	cmp	r3, r2
 8003ec6:	d103      	bne.n	8003ed0 <TIM_Base_SetConfig+0x100>
 8003ec8:	683b      	ldr	r3, [r7, #0]
 8003eca:	691a      	ldr	r2, [r3, #16]
 8003ecc:	687b      	ldr	r3, [r7, #4]
 8003ece:	631a      	str	r2, [r3, #48]	@ 0x30
 8003ed0:	687b      	ldr	r3, [r7, #4]
 8003ed2:	2201      	movs	r2, #1
 8003ed4:	615a      	str	r2, [r3, #20]
 8003ed6:	687b      	ldr	r3, [r7, #4]
 8003ed8:	691b      	ldr	r3, [r3, #16]
 8003eda:	f003 0301 	and.w	r3, r3, #1
 8003ede:	2b01      	cmp	r3, #1
 8003ee0:	d105      	bne.n	8003eee <TIM_Base_SetConfig+0x11e>
 8003ee2:	687b      	ldr	r3, [r7, #4]
 8003ee4:	691b      	ldr	r3, [r3, #16]
 8003ee6:	f023 0201 	bic.w	r2, r3, #1
 8003eea:	687b      	ldr	r3, [r7, #4]
 8003eec:	611a      	str	r2, [r3, #16]
 8003eee:	bf00      	nop
 8003ef0:	3714      	adds	r7, #20
 8003ef2:	46bd      	mov	sp, r7
 8003ef4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ef8:	4770      	bx	lr
 8003efa:	bf00      	nop
 8003efc:	40010000 	.word	0x40010000
 8003f00:	40000400 	.word	0x40000400
 8003f04:	40000800 	.word	0x40000800
 8003f08:	40000c00 	.word	0x40000c00
 8003f0c:	40010400 	.word	0x40010400
 8003f10:	40014000 	.word	0x40014000
 8003f14:	40014400 	.word	0x40014400
 8003f18:	40014800 	.word	0x40014800
 8003f1c:	40001800 	.word	0x40001800
 8003f20:	40001c00 	.word	0x40001c00
 8003f24:	40002000 	.word	0x40002000

08003f28 <TIM_OC1_SetConfig>:
 8003f28:	b480      	push	{r7}
 8003f2a:	b087      	sub	sp, #28
 8003f2c:	af00      	add	r7, sp, #0
 8003f2e:	6078      	str	r0, [r7, #4]
 8003f30:	6039      	str	r1, [r7, #0]
 8003f32:	687b      	ldr	r3, [r7, #4]
 8003f34:	6a1b      	ldr	r3, [r3, #32]
 8003f36:	617b      	str	r3, [r7, #20]
 8003f38:	687b      	ldr	r3, [r7, #4]
 8003f3a:	6a1b      	ldr	r3, [r3, #32]
 8003f3c:	f023 0201 	bic.w	r2, r3, #1
 8003f40:	687b      	ldr	r3, [r7, #4]
 8003f42:	621a      	str	r2, [r3, #32]
 8003f44:	687b      	ldr	r3, [r7, #4]
 8003f46:	685b      	ldr	r3, [r3, #4]
 8003f48:	613b      	str	r3, [r7, #16]
 8003f4a:	687b      	ldr	r3, [r7, #4]
 8003f4c:	699b      	ldr	r3, [r3, #24]
 8003f4e:	60fb      	str	r3, [r7, #12]
 8003f50:	68fb      	ldr	r3, [r7, #12]
 8003f52:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8003f56:	60fb      	str	r3, [r7, #12]
 8003f58:	68fb      	ldr	r3, [r7, #12]
 8003f5a:	f023 0303 	bic.w	r3, r3, #3
 8003f5e:	60fb      	str	r3, [r7, #12]
 8003f60:	683b      	ldr	r3, [r7, #0]
 8003f62:	681b      	ldr	r3, [r3, #0]
 8003f64:	68fa      	ldr	r2, [r7, #12]
 8003f66:	4313      	orrs	r3, r2
 8003f68:	60fb      	str	r3, [r7, #12]
 8003f6a:	697b      	ldr	r3, [r7, #20]
 8003f6c:	f023 0302 	bic.w	r3, r3, #2
 8003f70:	617b      	str	r3, [r7, #20]
 8003f72:	683b      	ldr	r3, [r7, #0]
 8003f74:	689b      	ldr	r3, [r3, #8]
 8003f76:	697a      	ldr	r2, [r7, #20]
 8003f78:	4313      	orrs	r3, r2
 8003f7a:	617b      	str	r3, [r7, #20]
 8003f7c:	687b      	ldr	r3, [r7, #4]
 8003f7e:	4a20      	ldr	r2, [pc, #128]	@ (8004000 <TIM_OC1_SetConfig+0xd8>)
 8003f80:	4293      	cmp	r3, r2
 8003f82:	d003      	beq.n	8003f8c <TIM_OC1_SetConfig+0x64>
 8003f84:	687b      	ldr	r3, [r7, #4]
 8003f86:	4a1f      	ldr	r2, [pc, #124]	@ (8004004 <TIM_OC1_SetConfig+0xdc>)
 8003f88:	4293      	cmp	r3, r2
 8003f8a:	d10c      	bne.n	8003fa6 <TIM_OC1_SetConfig+0x7e>
 8003f8c:	697b      	ldr	r3, [r7, #20]
 8003f8e:	f023 0308 	bic.w	r3, r3, #8
 8003f92:	617b      	str	r3, [r7, #20]
 8003f94:	683b      	ldr	r3, [r7, #0]
 8003f96:	68db      	ldr	r3, [r3, #12]
 8003f98:	697a      	ldr	r2, [r7, #20]
 8003f9a:	4313      	orrs	r3, r2
 8003f9c:	617b      	str	r3, [r7, #20]
 8003f9e:	697b      	ldr	r3, [r7, #20]
 8003fa0:	f023 0304 	bic.w	r3, r3, #4
 8003fa4:	617b      	str	r3, [r7, #20]
 8003fa6:	687b      	ldr	r3, [r7, #4]
 8003fa8:	4a15      	ldr	r2, [pc, #84]	@ (8004000 <TIM_OC1_SetConfig+0xd8>)
 8003faa:	4293      	cmp	r3, r2
 8003fac:	d003      	beq.n	8003fb6 <TIM_OC1_SetConfig+0x8e>
 8003fae:	687b      	ldr	r3, [r7, #4]
 8003fb0:	4a14      	ldr	r2, [pc, #80]	@ (8004004 <TIM_OC1_SetConfig+0xdc>)
 8003fb2:	4293      	cmp	r3, r2
 8003fb4:	d111      	bne.n	8003fda <TIM_OC1_SetConfig+0xb2>
 8003fb6:	693b      	ldr	r3, [r7, #16]
 8003fb8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8003fbc:	613b      	str	r3, [r7, #16]
 8003fbe:	693b      	ldr	r3, [r7, #16]
 8003fc0:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8003fc4:	613b      	str	r3, [r7, #16]
 8003fc6:	683b      	ldr	r3, [r7, #0]
 8003fc8:	695b      	ldr	r3, [r3, #20]
 8003fca:	693a      	ldr	r2, [r7, #16]
 8003fcc:	4313      	orrs	r3, r2
 8003fce:	613b      	str	r3, [r7, #16]
 8003fd0:	683b      	ldr	r3, [r7, #0]
 8003fd2:	699b      	ldr	r3, [r3, #24]
 8003fd4:	693a      	ldr	r2, [r7, #16]
 8003fd6:	4313      	orrs	r3, r2
 8003fd8:	613b      	str	r3, [r7, #16]
 8003fda:	687b      	ldr	r3, [r7, #4]
 8003fdc:	693a      	ldr	r2, [r7, #16]
 8003fde:	605a      	str	r2, [r3, #4]
 8003fe0:	687b      	ldr	r3, [r7, #4]
 8003fe2:	68fa      	ldr	r2, [r7, #12]
 8003fe4:	619a      	str	r2, [r3, #24]
 8003fe6:	683b      	ldr	r3, [r7, #0]
 8003fe8:	685a      	ldr	r2, [r3, #4]
 8003fea:	687b      	ldr	r3, [r7, #4]
 8003fec:	635a      	str	r2, [r3, #52]	@ 0x34
 8003fee:	687b      	ldr	r3, [r7, #4]
 8003ff0:	697a      	ldr	r2, [r7, #20]
 8003ff2:	621a      	str	r2, [r3, #32]
 8003ff4:	bf00      	nop
 8003ff6:	371c      	adds	r7, #28
 8003ff8:	46bd      	mov	sp, r7
 8003ffa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ffe:	4770      	bx	lr
 8004000:	40010000 	.word	0x40010000
 8004004:	40010400 	.word	0x40010400

08004008 <TIM_OC2_SetConfig>:
 8004008:	b480      	push	{r7}
 800400a:	b087      	sub	sp, #28
 800400c:	af00      	add	r7, sp, #0
 800400e:	6078      	str	r0, [r7, #4]
 8004010:	6039      	str	r1, [r7, #0]
 8004012:	687b      	ldr	r3, [r7, #4]
 8004014:	6a1b      	ldr	r3, [r3, #32]
 8004016:	617b      	str	r3, [r7, #20]
 8004018:	687b      	ldr	r3, [r7, #4]
 800401a:	6a1b      	ldr	r3, [r3, #32]
 800401c:	f023 0210 	bic.w	r2, r3, #16
 8004020:	687b      	ldr	r3, [r7, #4]
 8004022:	621a      	str	r2, [r3, #32]
 8004024:	687b      	ldr	r3, [r7, #4]
 8004026:	685b      	ldr	r3, [r3, #4]
 8004028:	613b      	str	r3, [r7, #16]
 800402a:	687b      	ldr	r3, [r7, #4]
 800402c:	699b      	ldr	r3, [r3, #24]
 800402e:	60fb      	str	r3, [r7, #12]
 8004030:	68fb      	ldr	r3, [r7, #12]
 8004032:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004036:	60fb      	str	r3, [r7, #12]
 8004038:	68fb      	ldr	r3, [r7, #12]
 800403a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800403e:	60fb      	str	r3, [r7, #12]
 8004040:	683b      	ldr	r3, [r7, #0]
 8004042:	681b      	ldr	r3, [r3, #0]
 8004044:	021b      	lsls	r3, r3, #8
 8004046:	68fa      	ldr	r2, [r7, #12]
 8004048:	4313      	orrs	r3, r2
 800404a:	60fb      	str	r3, [r7, #12]
 800404c:	697b      	ldr	r3, [r7, #20]
 800404e:	f023 0320 	bic.w	r3, r3, #32
 8004052:	617b      	str	r3, [r7, #20]
 8004054:	683b      	ldr	r3, [r7, #0]
 8004056:	689b      	ldr	r3, [r3, #8]
 8004058:	011b      	lsls	r3, r3, #4
 800405a:	697a      	ldr	r2, [r7, #20]
 800405c:	4313      	orrs	r3, r2
 800405e:	617b      	str	r3, [r7, #20]
 8004060:	687b      	ldr	r3, [r7, #4]
 8004062:	4a22      	ldr	r2, [pc, #136]	@ (80040ec <TIM_OC2_SetConfig+0xe4>)
 8004064:	4293      	cmp	r3, r2
 8004066:	d003      	beq.n	8004070 <TIM_OC2_SetConfig+0x68>
 8004068:	687b      	ldr	r3, [r7, #4]
 800406a:	4a21      	ldr	r2, [pc, #132]	@ (80040f0 <TIM_OC2_SetConfig+0xe8>)
 800406c:	4293      	cmp	r3, r2
 800406e:	d10d      	bne.n	800408c <TIM_OC2_SetConfig+0x84>
 8004070:	697b      	ldr	r3, [r7, #20]
 8004072:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004076:	617b      	str	r3, [r7, #20]
 8004078:	683b      	ldr	r3, [r7, #0]
 800407a:	68db      	ldr	r3, [r3, #12]
 800407c:	011b      	lsls	r3, r3, #4
 800407e:	697a      	ldr	r2, [r7, #20]
 8004080:	4313      	orrs	r3, r2
 8004082:	617b      	str	r3, [r7, #20]
 8004084:	697b      	ldr	r3, [r7, #20]
 8004086:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800408a:	617b      	str	r3, [r7, #20]
 800408c:	687b      	ldr	r3, [r7, #4]
 800408e:	4a17      	ldr	r2, [pc, #92]	@ (80040ec <TIM_OC2_SetConfig+0xe4>)
 8004090:	4293      	cmp	r3, r2
 8004092:	d003      	beq.n	800409c <TIM_OC2_SetConfig+0x94>
 8004094:	687b      	ldr	r3, [r7, #4]
 8004096:	4a16      	ldr	r2, [pc, #88]	@ (80040f0 <TIM_OC2_SetConfig+0xe8>)
 8004098:	4293      	cmp	r3, r2
 800409a:	d113      	bne.n	80040c4 <TIM_OC2_SetConfig+0xbc>
 800409c:	693b      	ldr	r3, [r7, #16]
 800409e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80040a2:	613b      	str	r3, [r7, #16]
 80040a4:	693b      	ldr	r3, [r7, #16]
 80040a6:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80040aa:	613b      	str	r3, [r7, #16]
 80040ac:	683b      	ldr	r3, [r7, #0]
 80040ae:	695b      	ldr	r3, [r3, #20]
 80040b0:	009b      	lsls	r3, r3, #2
 80040b2:	693a      	ldr	r2, [r7, #16]
 80040b4:	4313      	orrs	r3, r2
 80040b6:	613b      	str	r3, [r7, #16]
 80040b8:	683b      	ldr	r3, [r7, #0]
 80040ba:	699b      	ldr	r3, [r3, #24]
 80040bc:	009b      	lsls	r3, r3, #2
 80040be:	693a      	ldr	r2, [r7, #16]
 80040c0:	4313      	orrs	r3, r2
 80040c2:	613b      	str	r3, [r7, #16]
 80040c4:	687b      	ldr	r3, [r7, #4]
 80040c6:	693a      	ldr	r2, [r7, #16]
 80040c8:	605a      	str	r2, [r3, #4]
 80040ca:	687b      	ldr	r3, [r7, #4]
 80040cc:	68fa      	ldr	r2, [r7, #12]
 80040ce:	619a      	str	r2, [r3, #24]
 80040d0:	683b      	ldr	r3, [r7, #0]
 80040d2:	685a      	ldr	r2, [r3, #4]
 80040d4:	687b      	ldr	r3, [r7, #4]
 80040d6:	639a      	str	r2, [r3, #56]	@ 0x38
 80040d8:	687b      	ldr	r3, [r7, #4]
 80040da:	697a      	ldr	r2, [r7, #20]
 80040dc:	621a      	str	r2, [r3, #32]
 80040de:	bf00      	nop
 80040e0:	371c      	adds	r7, #28
 80040e2:	46bd      	mov	sp, r7
 80040e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040e8:	4770      	bx	lr
 80040ea:	bf00      	nop
 80040ec:	40010000 	.word	0x40010000
 80040f0:	40010400 	.word	0x40010400

080040f4 <TIM_OC3_SetConfig>:
 80040f4:	b480      	push	{r7}
 80040f6:	b087      	sub	sp, #28
 80040f8:	af00      	add	r7, sp, #0
 80040fa:	6078      	str	r0, [r7, #4]
 80040fc:	6039      	str	r1, [r7, #0]
 80040fe:	687b      	ldr	r3, [r7, #4]
 8004100:	6a1b      	ldr	r3, [r3, #32]
 8004102:	617b      	str	r3, [r7, #20]
 8004104:	687b      	ldr	r3, [r7, #4]
 8004106:	6a1b      	ldr	r3, [r3, #32]
 8004108:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 800410c:	687b      	ldr	r3, [r7, #4]
 800410e:	621a      	str	r2, [r3, #32]
 8004110:	687b      	ldr	r3, [r7, #4]
 8004112:	685b      	ldr	r3, [r3, #4]
 8004114:	613b      	str	r3, [r7, #16]
 8004116:	687b      	ldr	r3, [r7, #4]
 8004118:	69db      	ldr	r3, [r3, #28]
 800411a:	60fb      	str	r3, [r7, #12]
 800411c:	68fb      	ldr	r3, [r7, #12]
 800411e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004122:	60fb      	str	r3, [r7, #12]
 8004124:	68fb      	ldr	r3, [r7, #12]
 8004126:	f023 0303 	bic.w	r3, r3, #3
 800412a:	60fb      	str	r3, [r7, #12]
 800412c:	683b      	ldr	r3, [r7, #0]
 800412e:	681b      	ldr	r3, [r3, #0]
 8004130:	68fa      	ldr	r2, [r7, #12]
 8004132:	4313      	orrs	r3, r2
 8004134:	60fb      	str	r3, [r7, #12]
 8004136:	697b      	ldr	r3, [r7, #20]
 8004138:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800413c:	617b      	str	r3, [r7, #20]
 800413e:	683b      	ldr	r3, [r7, #0]
 8004140:	689b      	ldr	r3, [r3, #8]
 8004142:	021b      	lsls	r3, r3, #8
 8004144:	697a      	ldr	r2, [r7, #20]
 8004146:	4313      	orrs	r3, r2
 8004148:	617b      	str	r3, [r7, #20]
 800414a:	687b      	ldr	r3, [r7, #4]
 800414c:	4a21      	ldr	r2, [pc, #132]	@ (80041d4 <TIM_OC3_SetConfig+0xe0>)
 800414e:	4293      	cmp	r3, r2
 8004150:	d003      	beq.n	800415a <TIM_OC3_SetConfig+0x66>
 8004152:	687b      	ldr	r3, [r7, #4]
 8004154:	4a20      	ldr	r2, [pc, #128]	@ (80041d8 <TIM_OC3_SetConfig+0xe4>)
 8004156:	4293      	cmp	r3, r2
 8004158:	d10d      	bne.n	8004176 <TIM_OC3_SetConfig+0x82>
 800415a:	697b      	ldr	r3, [r7, #20]
 800415c:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004160:	617b      	str	r3, [r7, #20]
 8004162:	683b      	ldr	r3, [r7, #0]
 8004164:	68db      	ldr	r3, [r3, #12]
 8004166:	021b      	lsls	r3, r3, #8
 8004168:	697a      	ldr	r2, [r7, #20]
 800416a:	4313      	orrs	r3, r2
 800416c:	617b      	str	r3, [r7, #20]
 800416e:	697b      	ldr	r3, [r7, #20]
 8004170:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8004174:	617b      	str	r3, [r7, #20]
 8004176:	687b      	ldr	r3, [r7, #4]
 8004178:	4a16      	ldr	r2, [pc, #88]	@ (80041d4 <TIM_OC3_SetConfig+0xe0>)
 800417a:	4293      	cmp	r3, r2
 800417c:	d003      	beq.n	8004186 <TIM_OC3_SetConfig+0x92>
 800417e:	687b      	ldr	r3, [r7, #4]
 8004180:	4a15      	ldr	r2, [pc, #84]	@ (80041d8 <TIM_OC3_SetConfig+0xe4>)
 8004182:	4293      	cmp	r3, r2
 8004184:	d113      	bne.n	80041ae <TIM_OC3_SetConfig+0xba>
 8004186:	693b      	ldr	r3, [r7, #16]
 8004188:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800418c:	613b      	str	r3, [r7, #16]
 800418e:	693b      	ldr	r3, [r7, #16]
 8004190:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8004194:	613b      	str	r3, [r7, #16]
 8004196:	683b      	ldr	r3, [r7, #0]
 8004198:	695b      	ldr	r3, [r3, #20]
 800419a:	011b      	lsls	r3, r3, #4
 800419c:	693a      	ldr	r2, [r7, #16]
 800419e:	4313      	orrs	r3, r2
 80041a0:	613b      	str	r3, [r7, #16]
 80041a2:	683b      	ldr	r3, [r7, #0]
 80041a4:	699b      	ldr	r3, [r3, #24]
 80041a6:	011b      	lsls	r3, r3, #4
 80041a8:	693a      	ldr	r2, [r7, #16]
 80041aa:	4313      	orrs	r3, r2
 80041ac:	613b      	str	r3, [r7, #16]
 80041ae:	687b      	ldr	r3, [r7, #4]
 80041b0:	693a      	ldr	r2, [r7, #16]
 80041b2:	605a      	str	r2, [r3, #4]
 80041b4:	687b      	ldr	r3, [r7, #4]
 80041b6:	68fa      	ldr	r2, [r7, #12]
 80041b8:	61da      	str	r2, [r3, #28]
 80041ba:	683b      	ldr	r3, [r7, #0]
 80041bc:	685a      	ldr	r2, [r3, #4]
 80041be:	687b      	ldr	r3, [r7, #4]
 80041c0:	63da      	str	r2, [r3, #60]	@ 0x3c
 80041c2:	687b      	ldr	r3, [r7, #4]
 80041c4:	697a      	ldr	r2, [r7, #20]
 80041c6:	621a      	str	r2, [r3, #32]
 80041c8:	bf00      	nop
 80041ca:	371c      	adds	r7, #28
 80041cc:	46bd      	mov	sp, r7
 80041ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041d2:	4770      	bx	lr
 80041d4:	40010000 	.word	0x40010000
 80041d8:	40010400 	.word	0x40010400

080041dc <TIM_OC4_SetConfig>:
 80041dc:	b480      	push	{r7}
 80041de:	b087      	sub	sp, #28
 80041e0:	af00      	add	r7, sp, #0
 80041e2:	6078      	str	r0, [r7, #4]
 80041e4:	6039      	str	r1, [r7, #0]
 80041e6:	687b      	ldr	r3, [r7, #4]
 80041e8:	6a1b      	ldr	r3, [r3, #32]
 80041ea:	613b      	str	r3, [r7, #16]
 80041ec:	687b      	ldr	r3, [r7, #4]
 80041ee:	6a1b      	ldr	r3, [r3, #32]
 80041f0:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	621a      	str	r2, [r3, #32]
 80041f8:	687b      	ldr	r3, [r7, #4]
 80041fa:	685b      	ldr	r3, [r3, #4]
 80041fc:	617b      	str	r3, [r7, #20]
 80041fe:	687b      	ldr	r3, [r7, #4]
 8004200:	69db      	ldr	r3, [r3, #28]
 8004202:	60fb      	str	r3, [r7, #12]
 8004204:	68fb      	ldr	r3, [r7, #12]
 8004206:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800420a:	60fb      	str	r3, [r7, #12]
 800420c:	68fb      	ldr	r3, [r7, #12]
 800420e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004212:	60fb      	str	r3, [r7, #12]
 8004214:	683b      	ldr	r3, [r7, #0]
 8004216:	681b      	ldr	r3, [r3, #0]
 8004218:	021b      	lsls	r3, r3, #8
 800421a:	68fa      	ldr	r2, [r7, #12]
 800421c:	4313      	orrs	r3, r2
 800421e:	60fb      	str	r3, [r7, #12]
 8004220:	693b      	ldr	r3, [r7, #16]
 8004222:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8004226:	613b      	str	r3, [r7, #16]
 8004228:	683b      	ldr	r3, [r7, #0]
 800422a:	689b      	ldr	r3, [r3, #8]
 800422c:	031b      	lsls	r3, r3, #12
 800422e:	693a      	ldr	r2, [r7, #16]
 8004230:	4313      	orrs	r3, r2
 8004232:	613b      	str	r3, [r7, #16]
 8004234:	687b      	ldr	r3, [r7, #4]
 8004236:	4a12      	ldr	r2, [pc, #72]	@ (8004280 <TIM_OC4_SetConfig+0xa4>)
 8004238:	4293      	cmp	r3, r2
 800423a:	d003      	beq.n	8004244 <TIM_OC4_SetConfig+0x68>
 800423c:	687b      	ldr	r3, [r7, #4]
 800423e:	4a11      	ldr	r2, [pc, #68]	@ (8004284 <TIM_OC4_SetConfig+0xa8>)
 8004240:	4293      	cmp	r3, r2
 8004242:	d109      	bne.n	8004258 <TIM_OC4_SetConfig+0x7c>
 8004244:	697b      	ldr	r3, [r7, #20]
 8004246:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800424a:	617b      	str	r3, [r7, #20]
 800424c:	683b      	ldr	r3, [r7, #0]
 800424e:	695b      	ldr	r3, [r3, #20]
 8004250:	019b      	lsls	r3, r3, #6
 8004252:	697a      	ldr	r2, [r7, #20]
 8004254:	4313      	orrs	r3, r2
 8004256:	617b      	str	r3, [r7, #20]
 8004258:	687b      	ldr	r3, [r7, #4]
 800425a:	697a      	ldr	r2, [r7, #20]
 800425c:	605a      	str	r2, [r3, #4]
 800425e:	687b      	ldr	r3, [r7, #4]
 8004260:	68fa      	ldr	r2, [r7, #12]
 8004262:	61da      	str	r2, [r3, #28]
 8004264:	683b      	ldr	r3, [r7, #0]
 8004266:	685a      	ldr	r2, [r3, #4]
 8004268:	687b      	ldr	r3, [r7, #4]
 800426a:	641a      	str	r2, [r3, #64]	@ 0x40
 800426c:	687b      	ldr	r3, [r7, #4]
 800426e:	693a      	ldr	r2, [r7, #16]
 8004270:	621a      	str	r2, [r3, #32]
 8004272:	bf00      	nop
 8004274:	371c      	adds	r7, #28
 8004276:	46bd      	mov	sp, r7
 8004278:	f85d 7b04 	ldr.w	r7, [sp], #4
 800427c:	4770      	bx	lr
 800427e:	bf00      	nop
 8004280:	40010000 	.word	0x40010000
 8004284:	40010400 	.word	0x40010400

08004288 <TIM_SlaveTimer_SetConfig>:
 8004288:	b580      	push	{r7, lr}
 800428a:	b086      	sub	sp, #24
 800428c:	af00      	add	r7, sp, #0
 800428e:	6078      	str	r0, [r7, #4]
 8004290:	6039      	str	r1, [r7, #0]
 8004292:	2300      	movs	r3, #0
 8004294:	75fb      	strb	r3, [r7, #23]
 8004296:	687b      	ldr	r3, [r7, #4]
 8004298:	681b      	ldr	r3, [r3, #0]
 800429a:	689b      	ldr	r3, [r3, #8]
 800429c:	613b      	str	r3, [r7, #16]
 800429e:	693b      	ldr	r3, [r7, #16]
 80042a0:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80042a4:	613b      	str	r3, [r7, #16]
 80042a6:	683b      	ldr	r3, [r7, #0]
 80042a8:	685b      	ldr	r3, [r3, #4]
 80042aa:	693a      	ldr	r2, [r7, #16]
 80042ac:	4313      	orrs	r3, r2
 80042ae:	613b      	str	r3, [r7, #16]
 80042b0:	693b      	ldr	r3, [r7, #16]
 80042b2:	f023 0307 	bic.w	r3, r3, #7
 80042b6:	613b      	str	r3, [r7, #16]
 80042b8:	683b      	ldr	r3, [r7, #0]
 80042ba:	681b      	ldr	r3, [r3, #0]
 80042bc:	693a      	ldr	r2, [r7, #16]
 80042be:	4313      	orrs	r3, r2
 80042c0:	613b      	str	r3, [r7, #16]
 80042c2:	687b      	ldr	r3, [r7, #4]
 80042c4:	681b      	ldr	r3, [r3, #0]
 80042c6:	693a      	ldr	r2, [r7, #16]
 80042c8:	609a      	str	r2, [r3, #8]
 80042ca:	683b      	ldr	r3, [r7, #0]
 80042cc:	685b      	ldr	r3, [r3, #4]
 80042ce:	2b70      	cmp	r3, #112	@ 0x70
 80042d0:	d01a      	beq.n	8004308 <TIM_SlaveTimer_SetConfig+0x80>
 80042d2:	2b70      	cmp	r3, #112	@ 0x70
 80042d4:	d860      	bhi.n	8004398 <TIM_SlaveTimer_SetConfig+0x110>
 80042d6:	2b60      	cmp	r3, #96	@ 0x60
 80042d8:	d054      	beq.n	8004384 <TIM_SlaveTimer_SetConfig+0xfc>
 80042da:	2b60      	cmp	r3, #96	@ 0x60
 80042dc:	d85c      	bhi.n	8004398 <TIM_SlaveTimer_SetConfig+0x110>
 80042de:	2b50      	cmp	r3, #80	@ 0x50
 80042e0:	d046      	beq.n	8004370 <TIM_SlaveTimer_SetConfig+0xe8>
 80042e2:	2b50      	cmp	r3, #80	@ 0x50
 80042e4:	d858      	bhi.n	8004398 <TIM_SlaveTimer_SetConfig+0x110>
 80042e6:	2b40      	cmp	r3, #64	@ 0x40
 80042e8:	d019      	beq.n	800431e <TIM_SlaveTimer_SetConfig+0x96>
 80042ea:	2b40      	cmp	r3, #64	@ 0x40
 80042ec:	d854      	bhi.n	8004398 <TIM_SlaveTimer_SetConfig+0x110>
 80042ee:	2b30      	cmp	r3, #48	@ 0x30
 80042f0:	d055      	beq.n	800439e <TIM_SlaveTimer_SetConfig+0x116>
 80042f2:	2b30      	cmp	r3, #48	@ 0x30
 80042f4:	d850      	bhi.n	8004398 <TIM_SlaveTimer_SetConfig+0x110>
 80042f6:	2b20      	cmp	r3, #32
 80042f8:	d051      	beq.n	800439e <TIM_SlaveTimer_SetConfig+0x116>
 80042fa:	2b20      	cmp	r3, #32
 80042fc:	d84c      	bhi.n	8004398 <TIM_SlaveTimer_SetConfig+0x110>
 80042fe:	2b00      	cmp	r3, #0
 8004300:	d04d      	beq.n	800439e <TIM_SlaveTimer_SetConfig+0x116>
 8004302:	2b10      	cmp	r3, #16
 8004304:	d04b      	beq.n	800439e <TIM_SlaveTimer_SetConfig+0x116>
 8004306:	e047      	b.n	8004398 <TIM_SlaveTimer_SetConfig+0x110>
 8004308:	687b      	ldr	r3, [r7, #4]
 800430a:	6818      	ldr	r0, [r3, #0]
 800430c:	683b      	ldr	r3, [r7, #0]
 800430e:	68d9      	ldr	r1, [r3, #12]
 8004310:	683b      	ldr	r3, [r7, #0]
 8004312:	689a      	ldr	r2, [r3, #8]
 8004314:	683b      	ldr	r3, [r7, #0]
 8004316:	691b      	ldr	r3, [r3, #16]
 8004318:	f000 f8c1 	bl	800449e <TIM_ETR_SetConfig>
 800431c:	e040      	b.n	80043a0 <TIM_SlaveTimer_SetConfig+0x118>
 800431e:	683b      	ldr	r3, [r7, #0]
 8004320:	681b      	ldr	r3, [r3, #0]
 8004322:	2b05      	cmp	r3, #5
 8004324:	d101      	bne.n	800432a <TIM_SlaveTimer_SetConfig+0xa2>
 8004326:	2301      	movs	r3, #1
 8004328:	e03b      	b.n	80043a2 <TIM_SlaveTimer_SetConfig+0x11a>
 800432a:	687b      	ldr	r3, [r7, #4]
 800432c:	681b      	ldr	r3, [r3, #0]
 800432e:	6a1b      	ldr	r3, [r3, #32]
 8004330:	60fb      	str	r3, [r7, #12]
 8004332:	687b      	ldr	r3, [r7, #4]
 8004334:	681b      	ldr	r3, [r3, #0]
 8004336:	6a1a      	ldr	r2, [r3, #32]
 8004338:	687b      	ldr	r3, [r7, #4]
 800433a:	681b      	ldr	r3, [r3, #0]
 800433c:	f022 0201 	bic.w	r2, r2, #1
 8004340:	621a      	str	r2, [r3, #32]
 8004342:	687b      	ldr	r3, [r7, #4]
 8004344:	681b      	ldr	r3, [r3, #0]
 8004346:	699b      	ldr	r3, [r3, #24]
 8004348:	60bb      	str	r3, [r7, #8]
 800434a:	68bb      	ldr	r3, [r7, #8]
 800434c:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8004350:	60bb      	str	r3, [r7, #8]
 8004352:	683b      	ldr	r3, [r7, #0]
 8004354:	691b      	ldr	r3, [r3, #16]
 8004356:	011b      	lsls	r3, r3, #4
 8004358:	68ba      	ldr	r2, [r7, #8]
 800435a:	4313      	orrs	r3, r2
 800435c:	60bb      	str	r3, [r7, #8]
 800435e:	687b      	ldr	r3, [r7, #4]
 8004360:	681b      	ldr	r3, [r3, #0]
 8004362:	68ba      	ldr	r2, [r7, #8]
 8004364:	619a      	str	r2, [r3, #24]
 8004366:	687b      	ldr	r3, [r7, #4]
 8004368:	681b      	ldr	r3, [r3, #0]
 800436a:	68fa      	ldr	r2, [r7, #12]
 800436c:	621a      	str	r2, [r3, #32]
 800436e:	e017      	b.n	80043a0 <TIM_SlaveTimer_SetConfig+0x118>
 8004370:	687b      	ldr	r3, [r7, #4]
 8004372:	6818      	ldr	r0, [r3, #0]
 8004374:	683b      	ldr	r3, [r7, #0]
 8004376:	6899      	ldr	r1, [r3, #8]
 8004378:	683b      	ldr	r3, [r7, #0]
 800437a:	691b      	ldr	r3, [r3, #16]
 800437c:	461a      	mov	r2, r3
 800437e:	f000 f814 	bl	80043aa <TIM_TI1_ConfigInputStage>
 8004382:	e00d      	b.n	80043a0 <TIM_SlaveTimer_SetConfig+0x118>
 8004384:	687b      	ldr	r3, [r7, #4]
 8004386:	6818      	ldr	r0, [r3, #0]
 8004388:	683b      	ldr	r3, [r7, #0]
 800438a:	6899      	ldr	r1, [r3, #8]
 800438c:	683b      	ldr	r3, [r7, #0]
 800438e:	691b      	ldr	r3, [r3, #16]
 8004390:	461a      	mov	r2, r3
 8004392:	f000 f839 	bl	8004408 <TIM_TI2_ConfigInputStage>
 8004396:	e003      	b.n	80043a0 <TIM_SlaveTimer_SetConfig+0x118>
 8004398:	2301      	movs	r3, #1
 800439a:	75fb      	strb	r3, [r7, #23]
 800439c:	e000      	b.n	80043a0 <TIM_SlaveTimer_SetConfig+0x118>
 800439e:	bf00      	nop
 80043a0:	7dfb      	ldrb	r3, [r7, #23]
 80043a2:	4618      	mov	r0, r3
 80043a4:	3718      	adds	r7, #24
 80043a6:	46bd      	mov	sp, r7
 80043a8:	bd80      	pop	{r7, pc}

080043aa <TIM_TI1_ConfigInputStage>:
 80043aa:	b480      	push	{r7}
 80043ac:	b087      	sub	sp, #28
 80043ae:	af00      	add	r7, sp, #0
 80043b0:	60f8      	str	r0, [r7, #12]
 80043b2:	60b9      	str	r1, [r7, #8]
 80043b4:	607a      	str	r2, [r7, #4]
 80043b6:	68fb      	ldr	r3, [r7, #12]
 80043b8:	6a1b      	ldr	r3, [r3, #32]
 80043ba:	617b      	str	r3, [r7, #20]
 80043bc:	68fb      	ldr	r3, [r7, #12]
 80043be:	6a1b      	ldr	r3, [r3, #32]
 80043c0:	f023 0201 	bic.w	r2, r3, #1
 80043c4:	68fb      	ldr	r3, [r7, #12]
 80043c6:	621a      	str	r2, [r3, #32]
 80043c8:	68fb      	ldr	r3, [r7, #12]
 80043ca:	699b      	ldr	r3, [r3, #24]
 80043cc:	613b      	str	r3, [r7, #16]
 80043ce:	693b      	ldr	r3, [r7, #16]
 80043d0:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80043d4:	613b      	str	r3, [r7, #16]
 80043d6:	687b      	ldr	r3, [r7, #4]
 80043d8:	011b      	lsls	r3, r3, #4
 80043da:	693a      	ldr	r2, [r7, #16]
 80043dc:	4313      	orrs	r3, r2
 80043de:	613b      	str	r3, [r7, #16]
 80043e0:	697b      	ldr	r3, [r7, #20]
 80043e2:	f023 030a 	bic.w	r3, r3, #10
 80043e6:	617b      	str	r3, [r7, #20]
 80043e8:	697a      	ldr	r2, [r7, #20]
 80043ea:	68bb      	ldr	r3, [r7, #8]
 80043ec:	4313      	orrs	r3, r2
 80043ee:	617b      	str	r3, [r7, #20]
 80043f0:	68fb      	ldr	r3, [r7, #12]
 80043f2:	693a      	ldr	r2, [r7, #16]
 80043f4:	619a      	str	r2, [r3, #24]
 80043f6:	68fb      	ldr	r3, [r7, #12]
 80043f8:	697a      	ldr	r2, [r7, #20]
 80043fa:	621a      	str	r2, [r3, #32]
 80043fc:	bf00      	nop
 80043fe:	371c      	adds	r7, #28
 8004400:	46bd      	mov	sp, r7
 8004402:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004406:	4770      	bx	lr

08004408 <TIM_TI2_ConfigInputStage>:
 8004408:	b480      	push	{r7}
 800440a:	b087      	sub	sp, #28
 800440c:	af00      	add	r7, sp, #0
 800440e:	60f8      	str	r0, [r7, #12]
 8004410:	60b9      	str	r1, [r7, #8]
 8004412:	607a      	str	r2, [r7, #4]
 8004414:	68fb      	ldr	r3, [r7, #12]
 8004416:	6a1b      	ldr	r3, [r3, #32]
 8004418:	617b      	str	r3, [r7, #20]
 800441a:	68fb      	ldr	r3, [r7, #12]
 800441c:	6a1b      	ldr	r3, [r3, #32]
 800441e:	f023 0210 	bic.w	r2, r3, #16
 8004422:	68fb      	ldr	r3, [r7, #12]
 8004424:	621a      	str	r2, [r3, #32]
 8004426:	68fb      	ldr	r3, [r7, #12]
 8004428:	699b      	ldr	r3, [r3, #24]
 800442a:	613b      	str	r3, [r7, #16]
 800442c:	693b      	ldr	r3, [r7, #16]
 800442e:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8004432:	613b      	str	r3, [r7, #16]
 8004434:	687b      	ldr	r3, [r7, #4]
 8004436:	031b      	lsls	r3, r3, #12
 8004438:	693a      	ldr	r2, [r7, #16]
 800443a:	4313      	orrs	r3, r2
 800443c:	613b      	str	r3, [r7, #16]
 800443e:	697b      	ldr	r3, [r7, #20]
 8004440:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8004444:	617b      	str	r3, [r7, #20]
 8004446:	68bb      	ldr	r3, [r7, #8]
 8004448:	011b      	lsls	r3, r3, #4
 800444a:	697a      	ldr	r2, [r7, #20]
 800444c:	4313      	orrs	r3, r2
 800444e:	617b      	str	r3, [r7, #20]
 8004450:	68fb      	ldr	r3, [r7, #12]
 8004452:	693a      	ldr	r2, [r7, #16]
 8004454:	619a      	str	r2, [r3, #24]
 8004456:	68fb      	ldr	r3, [r7, #12]
 8004458:	697a      	ldr	r2, [r7, #20]
 800445a:	621a      	str	r2, [r3, #32]
 800445c:	bf00      	nop
 800445e:	371c      	adds	r7, #28
 8004460:	46bd      	mov	sp, r7
 8004462:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004466:	4770      	bx	lr

08004468 <TIM_ITRx_SetConfig>:
 8004468:	b480      	push	{r7}
 800446a:	b085      	sub	sp, #20
 800446c:	af00      	add	r7, sp, #0
 800446e:	6078      	str	r0, [r7, #4]
 8004470:	6039      	str	r1, [r7, #0]
 8004472:	687b      	ldr	r3, [r7, #4]
 8004474:	689b      	ldr	r3, [r3, #8]
 8004476:	60fb      	str	r3, [r7, #12]
 8004478:	68fb      	ldr	r3, [r7, #12]
 800447a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800447e:	60fb      	str	r3, [r7, #12]
 8004480:	683a      	ldr	r2, [r7, #0]
 8004482:	68fb      	ldr	r3, [r7, #12]
 8004484:	4313      	orrs	r3, r2
 8004486:	f043 0307 	orr.w	r3, r3, #7
 800448a:	60fb      	str	r3, [r7, #12]
 800448c:	687b      	ldr	r3, [r7, #4]
 800448e:	68fa      	ldr	r2, [r7, #12]
 8004490:	609a      	str	r2, [r3, #8]
 8004492:	bf00      	nop
 8004494:	3714      	adds	r7, #20
 8004496:	46bd      	mov	sp, r7
 8004498:	f85d 7b04 	ldr.w	r7, [sp], #4
 800449c:	4770      	bx	lr

0800449e <TIM_ETR_SetConfig>:
 800449e:	b480      	push	{r7}
 80044a0:	b087      	sub	sp, #28
 80044a2:	af00      	add	r7, sp, #0
 80044a4:	60f8      	str	r0, [r7, #12]
 80044a6:	60b9      	str	r1, [r7, #8]
 80044a8:	607a      	str	r2, [r7, #4]
 80044aa:	603b      	str	r3, [r7, #0]
 80044ac:	68fb      	ldr	r3, [r7, #12]
 80044ae:	689b      	ldr	r3, [r3, #8]
 80044b0:	617b      	str	r3, [r7, #20]
 80044b2:	697b      	ldr	r3, [r7, #20]
 80044b4:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80044b8:	617b      	str	r3, [r7, #20]
 80044ba:	683b      	ldr	r3, [r7, #0]
 80044bc:	021a      	lsls	r2, r3, #8
 80044be:	687b      	ldr	r3, [r7, #4]
 80044c0:	431a      	orrs	r2, r3
 80044c2:	68bb      	ldr	r3, [r7, #8]
 80044c4:	4313      	orrs	r3, r2
 80044c6:	697a      	ldr	r2, [r7, #20]
 80044c8:	4313      	orrs	r3, r2
 80044ca:	617b      	str	r3, [r7, #20]
 80044cc:	68fb      	ldr	r3, [r7, #12]
 80044ce:	697a      	ldr	r2, [r7, #20]
 80044d0:	609a      	str	r2, [r3, #8]
 80044d2:	bf00      	nop
 80044d4:	371c      	adds	r7, #28
 80044d6:	46bd      	mov	sp, r7
 80044d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044dc:	4770      	bx	lr

080044de <TIM_CCxChannelCmd>:
 80044de:	b480      	push	{r7}
 80044e0:	b087      	sub	sp, #28
 80044e2:	af00      	add	r7, sp, #0
 80044e4:	60f8      	str	r0, [r7, #12]
 80044e6:	60b9      	str	r1, [r7, #8]
 80044e8:	607a      	str	r2, [r7, #4]
 80044ea:	68bb      	ldr	r3, [r7, #8]
 80044ec:	f003 031f 	and.w	r3, r3, #31
 80044f0:	2201      	movs	r2, #1
 80044f2:	fa02 f303 	lsl.w	r3, r2, r3
 80044f6:	617b      	str	r3, [r7, #20]
 80044f8:	68fb      	ldr	r3, [r7, #12]
 80044fa:	6a1a      	ldr	r2, [r3, #32]
 80044fc:	697b      	ldr	r3, [r7, #20]
 80044fe:	43db      	mvns	r3, r3
 8004500:	401a      	ands	r2, r3
 8004502:	68fb      	ldr	r3, [r7, #12]
 8004504:	621a      	str	r2, [r3, #32]
 8004506:	68fb      	ldr	r3, [r7, #12]
 8004508:	6a1a      	ldr	r2, [r3, #32]
 800450a:	68bb      	ldr	r3, [r7, #8]
 800450c:	f003 031f 	and.w	r3, r3, #31
 8004510:	6879      	ldr	r1, [r7, #4]
 8004512:	fa01 f303 	lsl.w	r3, r1, r3
 8004516:	431a      	orrs	r2, r3
 8004518:	68fb      	ldr	r3, [r7, #12]
 800451a:	621a      	str	r2, [r3, #32]
 800451c:	bf00      	nop
 800451e:	371c      	adds	r7, #28
 8004520:	46bd      	mov	sp, r7
 8004522:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004526:	4770      	bx	lr

08004528 <HAL_TIMEx_MasterConfigSynchronization>:
 8004528:	b480      	push	{r7}
 800452a:	b085      	sub	sp, #20
 800452c:	af00      	add	r7, sp, #0
 800452e:	6078      	str	r0, [r7, #4]
 8004530:	6039      	str	r1, [r7, #0]
 8004532:	687b      	ldr	r3, [r7, #4]
 8004534:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004538:	2b01      	cmp	r3, #1
 800453a:	d101      	bne.n	8004540 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800453c:	2302      	movs	r3, #2
 800453e:	e05a      	b.n	80045f6 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8004540:	687b      	ldr	r3, [r7, #4]
 8004542:	2201      	movs	r2, #1
 8004544:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004548:	687b      	ldr	r3, [r7, #4]
 800454a:	2202      	movs	r2, #2
 800454c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004550:	687b      	ldr	r3, [r7, #4]
 8004552:	681b      	ldr	r3, [r3, #0]
 8004554:	685b      	ldr	r3, [r3, #4]
 8004556:	60fb      	str	r3, [r7, #12]
 8004558:	687b      	ldr	r3, [r7, #4]
 800455a:	681b      	ldr	r3, [r3, #0]
 800455c:	689b      	ldr	r3, [r3, #8]
 800455e:	60bb      	str	r3, [r7, #8]
 8004560:	68fb      	ldr	r3, [r7, #12]
 8004562:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004566:	60fb      	str	r3, [r7, #12]
 8004568:	683b      	ldr	r3, [r7, #0]
 800456a:	681b      	ldr	r3, [r3, #0]
 800456c:	68fa      	ldr	r2, [r7, #12]
 800456e:	4313      	orrs	r3, r2
 8004570:	60fb      	str	r3, [r7, #12]
 8004572:	687b      	ldr	r3, [r7, #4]
 8004574:	681b      	ldr	r3, [r3, #0]
 8004576:	68fa      	ldr	r2, [r7, #12]
 8004578:	605a      	str	r2, [r3, #4]
 800457a:	687b      	ldr	r3, [r7, #4]
 800457c:	681b      	ldr	r3, [r3, #0]
 800457e:	4a21      	ldr	r2, [pc, #132]	@ (8004604 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8004580:	4293      	cmp	r3, r2
 8004582:	d022      	beq.n	80045ca <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004584:	687b      	ldr	r3, [r7, #4]
 8004586:	681b      	ldr	r3, [r3, #0]
 8004588:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800458c:	d01d      	beq.n	80045ca <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800458e:	687b      	ldr	r3, [r7, #4]
 8004590:	681b      	ldr	r3, [r3, #0]
 8004592:	4a1d      	ldr	r2, [pc, #116]	@ (8004608 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8004594:	4293      	cmp	r3, r2
 8004596:	d018      	beq.n	80045ca <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004598:	687b      	ldr	r3, [r7, #4]
 800459a:	681b      	ldr	r3, [r3, #0]
 800459c:	4a1b      	ldr	r2, [pc, #108]	@ (800460c <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800459e:	4293      	cmp	r3, r2
 80045a0:	d013      	beq.n	80045ca <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	681b      	ldr	r3, [r3, #0]
 80045a6:	4a1a      	ldr	r2, [pc, #104]	@ (8004610 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 80045a8:	4293      	cmp	r3, r2
 80045aa:	d00e      	beq.n	80045ca <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80045ac:	687b      	ldr	r3, [r7, #4]
 80045ae:	681b      	ldr	r3, [r3, #0]
 80045b0:	4a18      	ldr	r2, [pc, #96]	@ (8004614 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 80045b2:	4293      	cmp	r3, r2
 80045b4:	d009      	beq.n	80045ca <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80045b6:	687b      	ldr	r3, [r7, #4]
 80045b8:	681b      	ldr	r3, [r3, #0]
 80045ba:	4a17      	ldr	r2, [pc, #92]	@ (8004618 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 80045bc:	4293      	cmp	r3, r2
 80045be:	d004      	beq.n	80045ca <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80045c0:	687b      	ldr	r3, [r7, #4]
 80045c2:	681b      	ldr	r3, [r3, #0]
 80045c4:	4a15      	ldr	r2, [pc, #84]	@ (800461c <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 80045c6:	4293      	cmp	r3, r2
 80045c8:	d10c      	bne.n	80045e4 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 80045ca:	68bb      	ldr	r3, [r7, #8]
 80045cc:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80045d0:	60bb      	str	r3, [r7, #8]
 80045d2:	683b      	ldr	r3, [r7, #0]
 80045d4:	685b      	ldr	r3, [r3, #4]
 80045d6:	68ba      	ldr	r2, [r7, #8]
 80045d8:	4313      	orrs	r3, r2
 80045da:	60bb      	str	r3, [r7, #8]
 80045dc:	687b      	ldr	r3, [r7, #4]
 80045de:	681b      	ldr	r3, [r3, #0]
 80045e0:	68ba      	ldr	r2, [r7, #8]
 80045e2:	609a      	str	r2, [r3, #8]
 80045e4:	687b      	ldr	r3, [r7, #4]
 80045e6:	2201      	movs	r2, #1
 80045e8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80045ec:	687b      	ldr	r3, [r7, #4]
 80045ee:	2200      	movs	r2, #0
 80045f0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80045f4:	2300      	movs	r3, #0
 80045f6:	4618      	mov	r0, r3
 80045f8:	3714      	adds	r7, #20
 80045fa:	46bd      	mov	sp, r7
 80045fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004600:	4770      	bx	lr
 8004602:	bf00      	nop
 8004604:	40010000 	.word	0x40010000
 8004608:	40000400 	.word	0x40000400
 800460c:	40000800 	.word	0x40000800
 8004610:	40000c00 	.word	0x40000c00
 8004614:	40010400 	.word	0x40010400
 8004618:	40014000 	.word	0x40014000
 800461c:	40001800 	.word	0x40001800

08004620 <HAL_TIMEx_ConfigBreakDeadTime>:
 8004620:	b480      	push	{r7}
 8004622:	b085      	sub	sp, #20
 8004624:	af00      	add	r7, sp, #0
 8004626:	6078      	str	r0, [r7, #4]
 8004628:	6039      	str	r1, [r7, #0]
 800462a:	2300      	movs	r3, #0
 800462c:	60fb      	str	r3, [r7, #12]
 800462e:	687b      	ldr	r3, [r7, #4]
 8004630:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004634:	2b01      	cmp	r3, #1
 8004636:	d101      	bne.n	800463c <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8004638:	2302      	movs	r3, #2
 800463a:	e03d      	b.n	80046b8 <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 800463c:	687b      	ldr	r3, [r7, #4]
 800463e:	2201      	movs	r2, #1
 8004640:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004644:	68fb      	ldr	r3, [r7, #12]
 8004646:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 800464a:	683b      	ldr	r3, [r7, #0]
 800464c:	68db      	ldr	r3, [r3, #12]
 800464e:	4313      	orrs	r3, r2
 8004650:	60fb      	str	r3, [r7, #12]
 8004652:	68fb      	ldr	r3, [r7, #12]
 8004654:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8004658:	683b      	ldr	r3, [r7, #0]
 800465a:	689b      	ldr	r3, [r3, #8]
 800465c:	4313      	orrs	r3, r2
 800465e:	60fb      	str	r3, [r7, #12]
 8004660:	68fb      	ldr	r3, [r7, #12]
 8004662:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 8004666:	683b      	ldr	r3, [r7, #0]
 8004668:	685b      	ldr	r3, [r3, #4]
 800466a:	4313      	orrs	r3, r2
 800466c:	60fb      	str	r3, [r7, #12]
 800466e:	68fb      	ldr	r3, [r7, #12]
 8004670:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 8004674:	683b      	ldr	r3, [r7, #0]
 8004676:	681b      	ldr	r3, [r3, #0]
 8004678:	4313      	orrs	r3, r2
 800467a:	60fb      	str	r3, [r7, #12]
 800467c:	68fb      	ldr	r3, [r7, #12]
 800467e:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8004682:	683b      	ldr	r3, [r7, #0]
 8004684:	691b      	ldr	r3, [r3, #16]
 8004686:	4313      	orrs	r3, r2
 8004688:	60fb      	str	r3, [r7, #12]
 800468a:	68fb      	ldr	r3, [r7, #12]
 800468c:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 8004690:	683b      	ldr	r3, [r7, #0]
 8004692:	695b      	ldr	r3, [r3, #20]
 8004694:	4313      	orrs	r3, r2
 8004696:	60fb      	str	r3, [r7, #12]
 8004698:	68fb      	ldr	r3, [r7, #12]
 800469a:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 800469e:	683b      	ldr	r3, [r7, #0]
 80046a0:	69db      	ldr	r3, [r3, #28]
 80046a2:	4313      	orrs	r3, r2
 80046a4:	60fb      	str	r3, [r7, #12]
 80046a6:	687b      	ldr	r3, [r7, #4]
 80046a8:	681b      	ldr	r3, [r3, #0]
 80046aa:	68fa      	ldr	r2, [r7, #12]
 80046ac:	645a      	str	r2, [r3, #68]	@ 0x44
 80046ae:	687b      	ldr	r3, [r7, #4]
 80046b0:	2200      	movs	r2, #0
 80046b2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80046b6:	2300      	movs	r3, #0
 80046b8:	4618      	mov	r0, r3
 80046ba:	3714      	adds	r7, #20
 80046bc:	46bd      	mov	sp, r7
 80046be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046c2:	4770      	bx	lr

080046c4 <HAL_TIMEx_CommutCallback>:
 80046c4:	b480      	push	{r7}
 80046c6:	b083      	sub	sp, #12
 80046c8:	af00      	add	r7, sp, #0
 80046ca:	6078      	str	r0, [r7, #4]
 80046cc:	bf00      	nop
 80046ce:	370c      	adds	r7, #12
 80046d0:	46bd      	mov	sp, r7
 80046d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046d6:	4770      	bx	lr

080046d8 <HAL_TIMEx_BreakCallback>:
 80046d8:	b480      	push	{r7}
 80046da:	b083      	sub	sp, #12
 80046dc:	af00      	add	r7, sp, #0
 80046de:	6078      	str	r0, [r7, #4]
 80046e0:	bf00      	nop
 80046e2:	370c      	adds	r7, #12
 80046e4:	46bd      	mov	sp, r7
 80046e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046ea:	4770      	bx	lr

080046ec <memset>:
 80046ec:	4402      	add	r2, r0
 80046ee:	4603      	mov	r3, r0
 80046f0:	4293      	cmp	r3, r2
 80046f2:	d100      	bne.n	80046f6 <memset+0xa>
 80046f4:	4770      	bx	lr
 80046f6:	f803 1b01 	strb.w	r1, [r3], #1
 80046fa:	e7f9      	b.n	80046f0 <memset+0x4>

080046fc <__libc_init_array>:
 80046fc:	b570      	push	{r4, r5, r6, lr}
 80046fe:	4d0d      	ldr	r5, [pc, #52]	@ (8004734 <__libc_init_array+0x38>)
 8004700:	4c0d      	ldr	r4, [pc, #52]	@ (8004738 <__libc_init_array+0x3c>)
 8004702:	1b64      	subs	r4, r4, r5
 8004704:	10a4      	asrs	r4, r4, #2
 8004706:	2600      	movs	r6, #0
 8004708:	42a6      	cmp	r6, r4
 800470a:	d109      	bne.n	8004720 <__libc_init_array+0x24>
 800470c:	4d0b      	ldr	r5, [pc, #44]	@ (800473c <__libc_init_array+0x40>)
 800470e:	4c0c      	ldr	r4, [pc, #48]	@ (8004740 <__libc_init_array+0x44>)
 8004710:	f000 f818 	bl	8004744 <_init>
 8004714:	1b64      	subs	r4, r4, r5
 8004716:	10a4      	asrs	r4, r4, #2
 8004718:	2600      	movs	r6, #0
 800471a:	42a6      	cmp	r6, r4
 800471c:	d105      	bne.n	800472a <__libc_init_array+0x2e>
 800471e:	bd70      	pop	{r4, r5, r6, pc}
 8004720:	f855 3b04 	ldr.w	r3, [r5], #4
 8004724:	4798      	blx	r3
 8004726:	3601      	adds	r6, #1
 8004728:	e7ee      	b.n	8004708 <__libc_init_array+0xc>
 800472a:	f855 3b04 	ldr.w	r3, [r5], #4
 800472e:	4798      	blx	r3
 8004730:	3601      	adds	r6, #1
 8004732:	e7f2      	b.n	800471a <__libc_init_array+0x1e>
 8004734:	0800477c 	.word	0x0800477c
 8004738:	0800477c 	.word	0x0800477c
 800473c:	0800477c 	.word	0x0800477c
 8004740:	08004780 	.word	0x08004780

08004744 <_init>:
 8004744:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004746:	bf00      	nop
 8004748:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800474a:	bc08      	pop	{r3}
 800474c:	469e      	mov	lr, r3
 800474e:	4770      	bx	lr

08004750 <_fini>:
 8004750:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004752:	bf00      	nop
 8004754:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004756:	bc08      	pop	{r3}
 8004758:	469e      	mov	lr, r3
 800475a:	4770      	bx	lr
