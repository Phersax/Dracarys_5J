
robotic_arm.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000465c  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000018  08004820  08004820  00005820  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004838  08004838  0000603c  2**0
                  CONTENTS
  4 .ARM          00000008  08004838  08004838  00005838  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004840  08004840  0000603c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004840  08004840  00005840  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004844  08004844  00005844  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000003c  20000000  08004848  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000036c  2000003c  08004884  0000603c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200003a8  08004884  000063a8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000603c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000c153  00000000  00000000  0000606c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000204f  00000000  00000000  000121bf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000b18  00000000  00000000  00014210  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000880  00000000  00000000  00014d28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00021505  00000000  00000000  000155a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000e4e3  00000000  00000000  00036aad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000cb1b6  00000000  00000000  00044f90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00110146  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002ca8  00000000  00000000  0011018c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000067  00000000  00000000  00112e34  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	2000003c 	.word	0x2000003c
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08004808 	.word	0x08004808

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000040 	.word	0x20000040
 8000200:	08004808 	.word	0x08004808

08000204 <__aeabi_uldivmod>:
 8000204:	b953      	cbnz	r3, 800021c <__aeabi_uldivmod+0x18>
 8000206:	b94a      	cbnz	r2, 800021c <__aeabi_uldivmod+0x18>
 8000208:	2900      	cmp	r1, #0
 800020a:	bf08      	it	eq
 800020c:	2800      	cmpeq	r0, #0
 800020e:	bf1c      	itt	ne
 8000210:	f04f 31ff 	movne.w	r1, #4294967295
 8000214:	f04f 30ff 	movne.w	r0, #4294967295
 8000218:	f000 b96a 	b.w	80004f0 <__aeabi_idiv0>
 800021c:	f1ad 0c08 	sub.w	ip, sp, #8
 8000220:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000224:	f000 f806 	bl	8000234 <__udivmoddi4>
 8000228:	f8dd e004 	ldr.w	lr, [sp, #4]
 800022c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000230:	b004      	add	sp, #16
 8000232:	4770      	bx	lr

08000234 <__udivmoddi4>:
 8000234:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000238:	9d08      	ldr	r5, [sp, #32]
 800023a:	460c      	mov	r4, r1
 800023c:	2b00      	cmp	r3, #0
 800023e:	d14e      	bne.n	80002de <__udivmoddi4+0xaa>
 8000240:	4694      	mov	ip, r2
 8000242:	458c      	cmp	ip, r1
 8000244:	4686      	mov	lr, r0
 8000246:	fab2 f282 	clz	r2, r2
 800024a:	d962      	bls.n	8000312 <__udivmoddi4+0xde>
 800024c:	b14a      	cbz	r2, 8000262 <__udivmoddi4+0x2e>
 800024e:	f1c2 0320 	rsb	r3, r2, #32
 8000252:	4091      	lsls	r1, r2
 8000254:	fa20 f303 	lsr.w	r3, r0, r3
 8000258:	fa0c fc02 	lsl.w	ip, ip, r2
 800025c:	4319      	orrs	r1, r3
 800025e:	fa00 fe02 	lsl.w	lr, r0, r2
 8000262:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000266:	fa1f f68c 	uxth.w	r6, ip
 800026a:	fbb1 f4f7 	udiv	r4, r1, r7
 800026e:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000272:	fb07 1114 	mls	r1, r7, r4, r1
 8000276:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800027a:	fb04 f106 	mul.w	r1, r4, r6
 800027e:	4299      	cmp	r1, r3
 8000280:	d90a      	bls.n	8000298 <__udivmoddi4+0x64>
 8000282:	eb1c 0303 	adds.w	r3, ip, r3
 8000286:	f104 30ff 	add.w	r0, r4, #4294967295
 800028a:	f080 8112 	bcs.w	80004b2 <__udivmoddi4+0x27e>
 800028e:	4299      	cmp	r1, r3
 8000290:	f240 810f 	bls.w	80004b2 <__udivmoddi4+0x27e>
 8000294:	3c02      	subs	r4, #2
 8000296:	4463      	add	r3, ip
 8000298:	1a59      	subs	r1, r3, r1
 800029a:	fa1f f38e 	uxth.w	r3, lr
 800029e:	fbb1 f0f7 	udiv	r0, r1, r7
 80002a2:	fb07 1110 	mls	r1, r7, r0, r1
 80002a6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80002aa:	fb00 f606 	mul.w	r6, r0, r6
 80002ae:	429e      	cmp	r6, r3
 80002b0:	d90a      	bls.n	80002c8 <__udivmoddi4+0x94>
 80002b2:	eb1c 0303 	adds.w	r3, ip, r3
 80002b6:	f100 31ff 	add.w	r1, r0, #4294967295
 80002ba:	f080 80fc 	bcs.w	80004b6 <__udivmoddi4+0x282>
 80002be:	429e      	cmp	r6, r3
 80002c0:	f240 80f9 	bls.w	80004b6 <__udivmoddi4+0x282>
 80002c4:	4463      	add	r3, ip
 80002c6:	3802      	subs	r0, #2
 80002c8:	1b9b      	subs	r3, r3, r6
 80002ca:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 80002ce:	2100      	movs	r1, #0
 80002d0:	b11d      	cbz	r5, 80002da <__udivmoddi4+0xa6>
 80002d2:	40d3      	lsrs	r3, r2
 80002d4:	2200      	movs	r2, #0
 80002d6:	e9c5 3200 	strd	r3, r2, [r5]
 80002da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002de:	428b      	cmp	r3, r1
 80002e0:	d905      	bls.n	80002ee <__udivmoddi4+0xba>
 80002e2:	b10d      	cbz	r5, 80002e8 <__udivmoddi4+0xb4>
 80002e4:	e9c5 0100 	strd	r0, r1, [r5]
 80002e8:	2100      	movs	r1, #0
 80002ea:	4608      	mov	r0, r1
 80002ec:	e7f5      	b.n	80002da <__udivmoddi4+0xa6>
 80002ee:	fab3 f183 	clz	r1, r3
 80002f2:	2900      	cmp	r1, #0
 80002f4:	d146      	bne.n	8000384 <__udivmoddi4+0x150>
 80002f6:	42a3      	cmp	r3, r4
 80002f8:	d302      	bcc.n	8000300 <__udivmoddi4+0xcc>
 80002fa:	4290      	cmp	r0, r2
 80002fc:	f0c0 80f0 	bcc.w	80004e0 <__udivmoddi4+0x2ac>
 8000300:	1a86      	subs	r6, r0, r2
 8000302:	eb64 0303 	sbc.w	r3, r4, r3
 8000306:	2001      	movs	r0, #1
 8000308:	2d00      	cmp	r5, #0
 800030a:	d0e6      	beq.n	80002da <__udivmoddi4+0xa6>
 800030c:	e9c5 6300 	strd	r6, r3, [r5]
 8000310:	e7e3      	b.n	80002da <__udivmoddi4+0xa6>
 8000312:	2a00      	cmp	r2, #0
 8000314:	f040 8090 	bne.w	8000438 <__udivmoddi4+0x204>
 8000318:	eba1 040c 	sub.w	r4, r1, ip
 800031c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000320:	fa1f f78c 	uxth.w	r7, ip
 8000324:	2101      	movs	r1, #1
 8000326:	fbb4 f6f8 	udiv	r6, r4, r8
 800032a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800032e:	fb08 4416 	mls	r4, r8, r6, r4
 8000332:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000336:	fb07 f006 	mul.w	r0, r7, r6
 800033a:	4298      	cmp	r0, r3
 800033c:	d908      	bls.n	8000350 <__udivmoddi4+0x11c>
 800033e:	eb1c 0303 	adds.w	r3, ip, r3
 8000342:	f106 34ff 	add.w	r4, r6, #4294967295
 8000346:	d202      	bcs.n	800034e <__udivmoddi4+0x11a>
 8000348:	4298      	cmp	r0, r3
 800034a:	f200 80cd 	bhi.w	80004e8 <__udivmoddi4+0x2b4>
 800034e:	4626      	mov	r6, r4
 8000350:	1a1c      	subs	r4, r3, r0
 8000352:	fa1f f38e 	uxth.w	r3, lr
 8000356:	fbb4 f0f8 	udiv	r0, r4, r8
 800035a:	fb08 4410 	mls	r4, r8, r0, r4
 800035e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000362:	fb00 f707 	mul.w	r7, r0, r7
 8000366:	429f      	cmp	r7, r3
 8000368:	d908      	bls.n	800037c <__udivmoddi4+0x148>
 800036a:	eb1c 0303 	adds.w	r3, ip, r3
 800036e:	f100 34ff 	add.w	r4, r0, #4294967295
 8000372:	d202      	bcs.n	800037a <__udivmoddi4+0x146>
 8000374:	429f      	cmp	r7, r3
 8000376:	f200 80b0 	bhi.w	80004da <__udivmoddi4+0x2a6>
 800037a:	4620      	mov	r0, r4
 800037c:	1bdb      	subs	r3, r3, r7
 800037e:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000382:	e7a5      	b.n	80002d0 <__udivmoddi4+0x9c>
 8000384:	f1c1 0620 	rsb	r6, r1, #32
 8000388:	408b      	lsls	r3, r1
 800038a:	fa22 f706 	lsr.w	r7, r2, r6
 800038e:	431f      	orrs	r7, r3
 8000390:	fa20 fc06 	lsr.w	ip, r0, r6
 8000394:	fa04 f301 	lsl.w	r3, r4, r1
 8000398:	ea43 030c 	orr.w	r3, r3, ip
 800039c:	40f4      	lsrs	r4, r6
 800039e:	fa00 f801 	lsl.w	r8, r0, r1
 80003a2:	0c38      	lsrs	r0, r7, #16
 80003a4:	ea4f 4913 	mov.w	r9, r3, lsr #16
 80003a8:	fbb4 fef0 	udiv	lr, r4, r0
 80003ac:	fa1f fc87 	uxth.w	ip, r7
 80003b0:	fb00 441e 	mls	r4, r0, lr, r4
 80003b4:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80003b8:	fb0e f90c 	mul.w	r9, lr, ip
 80003bc:	45a1      	cmp	r9, r4
 80003be:	fa02 f201 	lsl.w	r2, r2, r1
 80003c2:	d90a      	bls.n	80003da <__udivmoddi4+0x1a6>
 80003c4:	193c      	adds	r4, r7, r4
 80003c6:	f10e 3aff 	add.w	sl, lr, #4294967295
 80003ca:	f080 8084 	bcs.w	80004d6 <__udivmoddi4+0x2a2>
 80003ce:	45a1      	cmp	r9, r4
 80003d0:	f240 8081 	bls.w	80004d6 <__udivmoddi4+0x2a2>
 80003d4:	f1ae 0e02 	sub.w	lr, lr, #2
 80003d8:	443c      	add	r4, r7
 80003da:	eba4 0409 	sub.w	r4, r4, r9
 80003de:	fa1f f983 	uxth.w	r9, r3
 80003e2:	fbb4 f3f0 	udiv	r3, r4, r0
 80003e6:	fb00 4413 	mls	r4, r0, r3, r4
 80003ea:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80003ee:	fb03 fc0c 	mul.w	ip, r3, ip
 80003f2:	45a4      	cmp	ip, r4
 80003f4:	d907      	bls.n	8000406 <__udivmoddi4+0x1d2>
 80003f6:	193c      	adds	r4, r7, r4
 80003f8:	f103 30ff 	add.w	r0, r3, #4294967295
 80003fc:	d267      	bcs.n	80004ce <__udivmoddi4+0x29a>
 80003fe:	45a4      	cmp	ip, r4
 8000400:	d965      	bls.n	80004ce <__udivmoddi4+0x29a>
 8000402:	3b02      	subs	r3, #2
 8000404:	443c      	add	r4, r7
 8000406:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 800040a:	fba0 9302 	umull	r9, r3, r0, r2
 800040e:	eba4 040c 	sub.w	r4, r4, ip
 8000412:	429c      	cmp	r4, r3
 8000414:	46ce      	mov	lr, r9
 8000416:	469c      	mov	ip, r3
 8000418:	d351      	bcc.n	80004be <__udivmoddi4+0x28a>
 800041a:	d04e      	beq.n	80004ba <__udivmoddi4+0x286>
 800041c:	b155      	cbz	r5, 8000434 <__udivmoddi4+0x200>
 800041e:	ebb8 030e 	subs.w	r3, r8, lr
 8000422:	eb64 040c 	sbc.w	r4, r4, ip
 8000426:	fa04 f606 	lsl.w	r6, r4, r6
 800042a:	40cb      	lsrs	r3, r1
 800042c:	431e      	orrs	r6, r3
 800042e:	40cc      	lsrs	r4, r1
 8000430:	e9c5 6400 	strd	r6, r4, [r5]
 8000434:	2100      	movs	r1, #0
 8000436:	e750      	b.n	80002da <__udivmoddi4+0xa6>
 8000438:	f1c2 0320 	rsb	r3, r2, #32
 800043c:	fa20 f103 	lsr.w	r1, r0, r3
 8000440:	fa0c fc02 	lsl.w	ip, ip, r2
 8000444:	fa24 f303 	lsr.w	r3, r4, r3
 8000448:	4094      	lsls	r4, r2
 800044a:	430c      	orrs	r4, r1
 800044c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000450:	fa00 fe02 	lsl.w	lr, r0, r2
 8000454:	fa1f f78c 	uxth.w	r7, ip
 8000458:	fbb3 f0f8 	udiv	r0, r3, r8
 800045c:	fb08 3110 	mls	r1, r8, r0, r3
 8000460:	0c23      	lsrs	r3, r4, #16
 8000462:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000466:	fb00 f107 	mul.w	r1, r0, r7
 800046a:	4299      	cmp	r1, r3
 800046c:	d908      	bls.n	8000480 <__udivmoddi4+0x24c>
 800046e:	eb1c 0303 	adds.w	r3, ip, r3
 8000472:	f100 36ff 	add.w	r6, r0, #4294967295
 8000476:	d22c      	bcs.n	80004d2 <__udivmoddi4+0x29e>
 8000478:	4299      	cmp	r1, r3
 800047a:	d92a      	bls.n	80004d2 <__udivmoddi4+0x29e>
 800047c:	3802      	subs	r0, #2
 800047e:	4463      	add	r3, ip
 8000480:	1a5b      	subs	r3, r3, r1
 8000482:	b2a4      	uxth	r4, r4
 8000484:	fbb3 f1f8 	udiv	r1, r3, r8
 8000488:	fb08 3311 	mls	r3, r8, r1, r3
 800048c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000490:	fb01 f307 	mul.w	r3, r1, r7
 8000494:	42a3      	cmp	r3, r4
 8000496:	d908      	bls.n	80004aa <__udivmoddi4+0x276>
 8000498:	eb1c 0404 	adds.w	r4, ip, r4
 800049c:	f101 36ff 	add.w	r6, r1, #4294967295
 80004a0:	d213      	bcs.n	80004ca <__udivmoddi4+0x296>
 80004a2:	42a3      	cmp	r3, r4
 80004a4:	d911      	bls.n	80004ca <__udivmoddi4+0x296>
 80004a6:	3902      	subs	r1, #2
 80004a8:	4464      	add	r4, ip
 80004aa:	1ae4      	subs	r4, r4, r3
 80004ac:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80004b0:	e739      	b.n	8000326 <__udivmoddi4+0xf2>
 80004b2:	4604      	mov	r4, r0
 80004b4:	e6f0      	b.n	8000298 <__udivmoddi4+0x64>
 80004b6:	4608      	mov	r0, r1
 80004b8:	e706      	b.n	80002c8 <__udivmoddi4+0x94>
 80004ba:	45c8      	cmp	r8, r9
 80004bc:	d2ae      	bcs.n	800041c <__udivmoddi4+0x1e8>
 80004be:	ebb9 0e02 	subs.w	lr, r9, r2
 80004c2:	eb63 0c07 	sbc.w	ip, r3, r7
 80004c6:	3801      	subs	r0, #1
 80004c8:	e7a8      	b.n	800041c <__udivmoddi4+0x1e8>
 80004ca:	4631      	mov	r1, r6
 80004cc:	e7ed      	b.n	80004aa <__udivmoddi4+0x276>
 80004ce:	4603      	mov	r3, r0
 80004d0:	e799      	b.n	8000406 <__udivmoddi4+0x1d2>
 80004d2:	4630      	mov	r0, r6
 80004d4:	e7d4      	b.n	8000480 <__udivmoddi4+0x24c>
 80004d6:	46d6      	mov	lr, sl
 80004d8:	e77f      	b.n	80003da <__udivmoddi4+0x1a6>
 80004da:	4463      	add	r3, ip
 80004dc:	3802      	subs	r0, #2
 80004de:	e74d      	b.n	800037c <__udivmoddi4+0x148>
 80004e0:	4606      	mov	r6, r0
 80004e2:	4623      	mov	r3, r4
 80004e4:	4608      	mov	r0, r1
 80004e6:	e70f      	b.n	8000308 <__udivmoddi4+0xd4>
 80004e8:	3e02      	subs	r6, #2
 80004ea:	4463      	add	r3, ip
 80004ec:	e730      	b.n	8000350 <__udivmoddi4+0x11c>
 80004ee:	bf00      	nop

080004f0 <__aeabi_idiv0>:
 80004f0:	4770      	bx	lr
 80004f2:	bf00      	nop

080004f4 <end_eff_config>:
 80004f4:	b580      	push	{r7, lr}
 80004f6:	b082      	sub	sp, #8
 80004f8:	af00      	add	r7, sp, #0
 80004fa:	6078      	str	r0, [r7, #4]
 80004fc:	6039      	str	r1, [r7, #0]
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	2b00      	cmp	r3, #0
 8000502:	dc03      	bgt.n	800050c <end_eff_config+0x18>
 8000504:	2104      	movs	r1, #4
 8000506:	4803      	ldr	r0, [pc, #12]	@ (8000514 <end_eff_config+0x20>)
 8000508:	f002 f835 	bl	8002576 <HAL_GPIO_TogglePin>
 800050c:	bf00      	nop
 800050e:	3708      	adds	r7, #8
 8000510:	46bd      	mov	sp, r7
 8000512:	bd80      	pop	{r7, pc}
 8000514:	40020400 	.word	0x40020400

08000518 <MX_GPIO_Init>:
 8000518:	b580      	push	{r7, lr}
 800051a:	b08a      	sub	sp, #40	@ 0x28
 800051c:	af00      	add	r7, sp, #0
 800051e:	f107 0314 	add.w	r3, r7, #20
 8000522:	2200      	movs	r2, #0
 8000524:	601a      	str	r2, [r3, #0]
 8000526:	605a      	str	r2, [r3, #4]
 8000528:	609a      	str	r2, [r3, #8]
 800052a:	60da      	str	r2, [r3, #12]
 800052c:	611a      	str	r2, [r3, #16]
 800052e:	2300      	movs	r3, #0
 8000530:	613b      	str	r3, [r7, #16]
 8000532:	4b66      	ldr	r3, [pc, #408]	@ (80006cc <MX_GPIO_Init+0x1b4>)
 8000534:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000536:	4a65      	ldr	r2, [pc, #404]	@ (80006cc <MX_GPIO_Init+0x1b4>)
 8000538:	f043 0304 	orr.w	r3, r3, #4
 800053c:	6313      	str	r3, [r2, #48]	@ 0x30
 800053e:	4b63      	ldr	r3, [pc, #396]	@ (80006cc <MX_GPIO_Init+0x1b4>)
 8000540:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000542:	f003 0304 	and.w	r3, r3, #4
 8000546:	613b      	str	r3, [r7, #16]
 8000548:	693b      	ldr	r3, [r7, #16]
 800054a:	2300      	movs	r3, #0
 800054c:	60fb      	str	r3, [r7, #12]
 800054e:	4b5f      	ldr	r3, [pc, #380]	@ (80006cc <MX_GPIO_Init+0x1b4>)
 8000550:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000552:	4a5e      	ldr	r2, [pc, #376]	@ (80006cc <MX_GPIO_Init+0x1b4>)
 8000554:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000558:	6313      	str	r3, [r2, #48]	@ 0x30
 800055a:	4b5c      	ldr	r3, [pc, #368]	@ (80006cc <MX_GPIO_Init+0x1b4>)
 800055c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800055e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000562:	60fb      	str	r3, [r7, #12]
 8000564:	68fb      	ldr	r3, [r7, #12]
 8000566:	2300      	movs	r3, #0
 8000568:	60bb      	str	r3, [r7, #8]
 800056a:	4b58      	ldr	r3, [pc, #352]	@ (80006cc <MX_GPIO_Init+0x1b4>)
 800056c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800056e:	4a57      	ldr	r2, [pc, #348]	@ (80006cc <MX_GPIO_Init+0x1b4>)
 8000570:	f043 0301 	orr.w	r3, r3, #1
 8000574:	6313      	str	r3, [r2, #48]	@ 0x30
 8000576:	4b55      	ldr	r3, [pc, #340]	@ (80006cc <MX_GPIO_Init+0x1b4>)
 8000578:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800057a:	f003 0301 	and.w	r3, r3, #1
 800057e:	60bb      	str	r3, [r7, #8]
 8000580:	68bb      	ldr	r3, [r7, #8]
 8000582:	2300      	movs	r3, #0
 8000584:	607b      	str	r3, [r7, #4]
 8000586:	4b51      	ldr	r3, [pc, #324]	@ (80006cc <MX_GPIO_Init+0x1b4>)
 8000588:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800058a:	4a50      	ldr	r2, [pc, #320]	@ (80006cc <MX_GPIO_Init+0x1b4>)
 800058c:	f043 0302 	orr.w	r3, r3, #2
 8000590:	6313      	str	r3, [r2, #48]	@ 0x30
 8000592:	4b4e      	ldr	r3, [pc, #312]	@ (80006cc <MX_GPIO_Init+0x1b4>)
 8000594:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000596:	f003 0302 	and.w	r3, r3, #2
 800059a:	607b      	str	r3, [r7, #4]
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	2200      	movs	r2, #0
 80005a0:	21e0      	movs	r1, #224	@ 0xe0
 80005a2:	484b      	ldr	r0, [pc, #300]	@ (80006d0 <MX_GPIO_Init+0x1b8>)
 80005a4:	f001 ffce 	bl	8002544 <HAL_GPIO_WritePin>
 80005a8:	2200      	movs	r2, #0
 80005aa:	2110      	movs	r1, #16
 80005ac:	4849      	ldr	r0, [pc, #292]	@ (80006d4 <MX_GPIO_Init+0x1bc>)
 80005ae:	f001 ffc9 	bl	8002544 <HAL_GPIO_WritePin>
 80005b2:	2201      	movs	r2, #1
 80005b4:	2120      	movs	r1, #32
 80005b6:	4847      	ldr	r0, [pc, #284]	@ (80006d4 <MX_GPIO_Init+0x1bc>)
 80005b8:	f001 ffc4 	bl	8002544 <HAL_GPIO_WritePin>
 80005bc:	2200      	movs	r2, #0
 80005be:	2103      	movs	r1, #3
 80005c0:	4845      	ldr	r0, [pc, #276]	@ (80006d8 <MX_GPIO_Init+0x1c0>)
 80005c2:	f001 ffbf 	bl	8002544 <HAL_GPIO_WritePin>
 80005c6:	2201      	movs	r2, #1
 80005c8:	2104      	movs	r1, #4
 80005ca:	4843      	ldr	r0, [pc, #268]	@ (80006d8 <MX_GPIO_Init+0x1c0>)
 80005cc:	f001 ffba 	bl	8002544 <HAL_GPIO_WritePin>
 80005d0:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80005d4:	617b      	str	r3, [r7, #20]
 80005d6:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 80005da:	61bb      	str	r3, [r7, #24]
 80005dc:	2300      	movs	r3, #0
 80005de:	61fb      	str	r3, [r7, #28]
 80005e0:	f107 0314 	add.w	r3, r7, #20
 80005e4:	4619      	mov	r1, r3
 80005e6:	483b      	ldr	r0, [pc, #236]	@ (80006d4 <MX_GPIO_Init+0x1bc>)
 80005e8:	f001 fe18 	bl	800221c <HAL_GPIO_Init>
 80005ec:	2304      	movs	r3, #4
 80005ee:	617b      	str	r3, [r7, #20]
 80005f0:	2302      	movs	r3, #2
 80005f2:	61bb      	str	r3, [r7, #24]
 80005f4:	2300      	movs	r3, #0
 80005f6:	61fb      	str	r3, [r7, #28]
 80005f8:	2303      	movs	r3, #3
 80005fa:	623b      	str	r3, [r7, #32]
 80005fc:	2307      	movs	r3, #7
 80005fe:	627b      	str	r3, [r7, #36]	@ 0x24
 8000600:	f107 0314 	add.w	r3, r7, #20
 8000604:	4619      	mov	r1, r3
 8000606:	4832      	ldr	r0, [pc, #200]	@ (80006d0 <MX_GPIO_Init+0x1b8>)
 8000608:	f001 fe08 	bl	800221c <HAL_GPIO_Init>
 800060c:	2320      	movs	r3, #32
 800060e:	617b      	str	r3, [r7, #20]
 8000610:	2301      	movs	r3, #1
 8000612:	61bb      	str	r3, [r7, #24]
 8000614:	2300      	movs	r3, #0
 8000616:	61fb      	str	r3, [r7, #28]
 8000618:	2300      	movs	r3, #0
 800061a:	623b      	str	r3, [r7, #32]
 800061c:	f107 0314 	add.w	r3, r7, #20
 8000620:	4619      	mov	r1, r3
 8000622:	482b      	ldr	r0, [pc, #172]	@ (80006d0 <MX_GPIO_Init+0x1b8>)
 8000624:	f001 fdfa 	bl	800221c <HAL_GPIO_Init>
 8000628:	23c0      	movs	r3, #192	@ 0xc0
 800062a:	617b      	str	r3, [r7, #20]
 800062c:	2301      	movs	r3, #1
 800062e:	61bb      	str	r3, [r7, #24]
 8000630:	2302      	movs	r3, #2
 8000632:	61fb      	str	r3, [r7, #28]
 8000634:	2300      	movs	r3, #0
 8000636:	623b      	str	r3, [r7, #32]
 8000638:	f107 0314 	add.w	r3, r7, #20
 800063c:	4619      	mov	r1, r3
 800063e:	4824      	ldr	r0, [pc, #144]	@ (80006d0 <MX_GPIO_Init+0x1b8>)
 8000640:	f001 fdec 	bl	800221c <HAL_GPIO_Init>
 8000644:	2310      	movs	r3, #16
 8000646:	617b      	str	r3, [r7, #20]
 8000648:	2301      	movs	r3, #1
 800064a:	61bb      	str	r3, [r7, #24]
 800064c:	2302      	movs	r3, #2
 800064e:	61fb      	str	r3, [r7, #28]
 8000650:	2300      	movs	r3, #0
 8000652:	623b      	str	r3, [r7, #32]
 8000654:	f107 0314 	add.w	r3, r7, #20
 8000658:	4619      	mov	r1, r3
 800065a:	481e      	ldr	r0, [pc, #120]	@ (80006d4 <MX_GPIO_Init+0x1bc>)
 800065c:	f001 fdde 	bl	800221c <HAL_GPIO_Init>
 8000660:	2320      	movs	r3, #32
 8000662:	617b      	str	r3, [r7, #20]
 8000664:	2301      	movs	r3, #1
 8000666:	61bb      	str	r3, [r7, #24]
 8000668:	2301      	movs	r3, #1
 800066a:	61fb      	str	r3, [r7, #28]
 800066c:	2302      	movs	r3, #2
 800066e:	623b      	str	r3, [r7, #32]
 8000670:	f107 0314 	add.w	r3, r7, #20
 8000674:	4619      	mov	r1, r3
 8000676:	4817      	ldr	r0, [pc, #92]	@ (80006d4 <MX_GPIO_Init+0x1bc>)
 8000678:	f001 fdd0 	bl	800221c <HAL_GPIO_Init>
 800067c:	2303      	movs	r3, #3
 800067e:	617b      	str	r3, [r7, #20]
 8000680:	2301      	movs	r3, #1
 8000682:	61bb      	str	r3, [r7, #24]
 8000684:	2302      	movs	r3, #2
 8000686:	61fb      	str	r3, [r7, #28]
 8000688:	2300      	movs	r3, #0
 800068a:	623b      	str	r3, [r7, #32]
 800068c:	f107 0314 	add.w	r3, r7, #20
 8000690:	4619      	mov	r1, r3
 8000692:	4811      	ldr	r0, [pc, #68]	@ (80006d8 <MX_GPIO_Init+0x1c0>)
 8000694:	f001 fdc2 	bl	800221c <HAL_GPIO_Init>
 8000698:	2304      	movs	r3, #4
 800069a:	617b      	str	r3, [r7, #20]
 800069c:	2301      	movs	r3, #1
 800069e:	61bb      	str	r3, [r7, #24]
 80006a0:	2301      	movs	r3, #1
 80006a2:	61fb      	str	r3, [r7, #28]
 80006a4:	2300      	movs	r3, #0
 80006a6:	623b      	str	r3, [r7, #32]
 80006a8:	f107 0314 	add.w	r3, r7, #20
 80006ac:	4619      	mov	r1, r3
 80006ae:	480a      	ldr	r0, [pc, #40]	@ (80006d8 <MX_GPIO_Init+0x1c0>)
 80006b0:	f001 fdb4 	bl	800221c <HAL_GPIO_Init>
 80006b4:	2200      	movs	r2, #0
 80006b6:	2100      	movs	r1, #0
 80006b8:	2028      	movs	r0, #40	@ 0x28
 80006ba:	f001 fd78 	bl	80021ae <HAL_NVIC_SetPriority>
 80006be:	2028      	movs	r0, #40	@ 0x28
 80006c0:	f001 fd91 	bl	80021e6 <HAL_NVIC_EnableIRQ>
 80006c4:	bf00      	nop
 80006c6:	3728      	adds	r7, #40	@ 0x28
 80006c8:	46bd      	mov	sp, r7
 80006ca:	bd80      	pop	{r7, pc}
 80006cc:	40023800 	.word	0x40023800
 80006d0:	40020000 	.word	0x40020000
 80006d4:	40020800 	.word	0x40020800
 80006d8:	40020400 	.word	0x40020400

080006dc <trapezoidal_func>:
 TIMx->CR1 &= (uint16_t) (~((uint16_t) TIM_CR1_CEN));
 }
 }*/

/*The trapezoidal profile applied on the steppers*/
void trapezoidal_func(int k, TIM_HandleTypeDef *htim, TIM_HandleTypeDef *hslave) {
 80006dc:	b580      	push	{r7, lr}
 80006de:	b086      	sub	sp, #24
 80006e0:	af00      	add	r7, sp, #0
 80006e2:	60f8      	str	r0, [r7, #12]
 80006e4:	60b9      	str	r1, [r7, #8]
 80006e6:	607a      	str	r2, [r7, #4]

	int cnt = __HAL_TIM_GET_COUNTER(hslave);  //retrieve the N_steps done by the slave
 80006e8:	687b      	ldr	r3, [r7, #4]
 80006ea:	681b      	ldr	r3, [r3, #0]
 80006ec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80006ee:	617b      	str	r3, [r7, #20]
	if (cnt >= hslave->Instance->ARR) { //verify if arr has been reached
 80006f0:	687b      	ldr	r3, [r7, #4]
 80006f2:	681b      	ldr	r3, [r3, #0]
 80006f4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80006f6:	697b      	ldr	r3, [r7, #20]
 80006f8:	429a      	cmp	r2, r3
 80006fa:	d827      	bhi.n	800074c <trapezoidal_func+0x70>
		if (hslave->Instance == TIM3) { //for the timers 2 the second pwm must be stopped too
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	681b      	ldr	r3, [r3, #0]
 8000700:	4a92      	ldr	r2, [pc, #584]	@ (800094c <trapezoidal_func+0x270>)
 8000702:	4293      	cmp	r3, r2
 8000704:	d103      	bne.n	800070e <trapezoidal_func+0x32>
			HAL_TIM_PWM_Stop_IT(htim, TIM_CHANNEL_2);
 8000706:	2104      	movs	r1, #4
 8000708:	68b8      	ldr	r0, [r7, #8]
 800070a:	f003 f82b 	bl	8003764 <HAL_TIM_PWM_Stop_IT>
		}

		HAL_TIM_PWM_Stop_IT(htim, TIM_CHANNEL_1); //stop the pwm
 800070e:	2100      	movs	r1, #0
 8000710:	68b8      	ldr	r0, [r7, #8]
 8000712:	f003 f827 	bl	8003764 <HAL_TIM_PWM_Stop_IT>

		count_rising_edge[k] = 0;	//reset the counter
 8000716:	4a8e      	ldr	r2, [pc, #568]	@ (8000950 <trapezoidal_func+0x274>)
 8000718:	68fb      	ldr	r3, [r7, #12]
 800071a:	2100      	movs	r1, #0
 800071c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		acc_count[k] = 0;           //reset the acceleration steps counter
 8000720:	4a8c      	ldr	r2, [pc, #560]	@ (8000954 <trapezoidal_func+0x278>)
 8000722:	68fb      	ldr	r3, [r7, #12]
 8000724:	2100      	movs	r1, #0
 8000726:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		//dec_count[k] = 0; //debug

		htim->Instance->EGR |= TIM_EGR_UG; //reset the timer master
 800072a:	68bb      	ldr	r3, [r7, #8]
 800072c:	681b      	ldr	r3, [r3, #0]
 800072e:	695a      	ldr	r2, [r3, #20]
 8000730:	68bb      	ldr	r3, [r7, #8]
 8000732:	681b      	ldr	r3, [r3, #0]
 8000734:	f042 0201 	orr.w	r2, r2, #1
 8000738:	615a      	str	r2, [r3, #20]
		hslave->Instance->EGR |= TIM_EGR_UG; //reset the timer slave
 800073a:	687b      	ldr	r3, [r7, #4]
 800073c:	681b      	ldr	r3, [r3, #0]
 800073e:	695a      	ldr	r2, [r3, #20]
 8000740:	687b      	ldr	r3, [r7, #4]
 8000742:	681b      	ldr	r3, [r3, #0]
 8000744:	f042 0201 	orr.w	r2, r2, #1
 8000748:	615a      	str	r2, [r3, #20]
			}

		}
	}

}
 800074a:	e172      	b.n	8000a32 <trapezoidal_func+0x356>
		if (arr_des_a[k] > arr_start[k]) { //subroutine to set the starting minimum acceleration
 800074c:	4a82      	ldr	r2, [pc, #520]	@ (8000958 <trapezoidal_func+0x27c>)
 800074e:	68fb      	ldr	r3, [r7, #12]
 8000750:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000754:	4619      	mov	r1, r3
 8000756:	4a81      	ldr	r2, [pc, #516]	@ (800095c <trapezoidal_func+0x280>)
 8000758:	68fb      	ldr	r3, [r7, #12]
 800075a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800075e:	4299      	cmp	r1, r3
 8000760:	d929      	bls.n	80007b6 <trapezoidal_func+0xda>
			__HAL_TIM_SET_AUTORELOAD(htim, arr_start[k]);
 8000762:	68bb      	ldr	r3, [r7, #8]
 8000764:	681b      	ldr	r3, [r3, #0]
 8000766:	497d      	ldr	r1, [pc, #500]	@ (800095c <trapezoidal_func+0x280>)
 8000768:	68fa      	ldr	r2, [r7, #12]
 800076a:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800076e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8000770:	4a7a      	ldr	r2, [pc, #488]	@ (800095c <trapezoidal_func+0x280>)
 8000772:	68fb      	ldr	r3, [r7, #12]
 8000774:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000778:	68bb      	ldr	r3, [r7, #8]
 800077a:	60da      	str	r2, [r3, #12]
			hslave->Instance->PSC = arr_start[k];
 800077c:	687b      	ldr	r3, [r7, #4]
 800077e:	681b      	ldr	r3, [r3, #0]
 8000780:	4976      	ldr	r1, [pc, #472]	@ (800095c <trapezoidal_func+0x280>)
 8000782:	68fa      	ldr	r2, [r7, #12]
 8000784:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8000788:	629a      	str	r2, [r3, #40]	@ 0x28
			__HAL_TIM_SET_COMPARE(htim, TIM_CHANNEL_1,
 800078a:	68bb      	ldr	r3, [r7, #8]
 800078c:	681b      	ldr	r3, [r3, #0]
 800078e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8000790:	68bb      	ldr	r3, [r7, #8]
 8000792:	681b      	ldr	r3, [r3, #0]
 8000794:	0852      	lsrs	r2, r2, #1
 8000796:	635a      	str	r2, [r3, #52]	@ 0x34
			hslave->Instance->EGR |= TIM_EGR_UG;
 8000798:	687b      	ldr	r3, [r7, #4]
 800079a:	681b      	ldr	r3, [r3, #0]
 800079c:	695a      	ldr	r2, [r3, #20]
 800079e:	687b      	ldr	r3, [r7, #4]
 80007a0:	681b      	ldr	r3, [r3, #0]
 80007a2:	f042 0201 	orr.w	r2, r2, #1
 80007a6:	615a      	str	r2, [r3, #20]
			hslave->Instance->CNT = count_rising_edge[k];
 80007a8:	687b      	ldr	r3, [r7, #4]
 80007aa:	681b      	ldr	r3, [r3, #0]
 80007ac:	4968      	ldr	r1, [pc, #416]	@ (8000950 <trapezoidal_func+0x274>)
 80007ae:	68fa      	ldr	r2, [r7, #12]
 80007b0:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80007b4:	625a      	str	r2, [r3, #36]	@ 0x24
		if (arr_des_a[k] < (arr_current[k] - acc_rate_a[k])
 80007b6:	4a68      	ldr	r2, [pc, #416]	@ (8000958 <trapezoidal_func+0x27c>)
 80007b8:	68fb      	ldr	r3, [r7, #12]
 80007ba:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80007be:	4619      	mov	r1, r3
 80007c0:	4a67      	ldr	r2, [pc, #412]	@ (8000960 <trapezoidal_func+0x284>)
 80007c2:	68fb      	ldr	r3, [r7, #12]
 80007c4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80007c8:	4618      	mov	r0, r3
 80007ca:	4a66      	ldr	r2, [pc, #408]	@ (8000964 <trapezoidal_func+0x288>)
 80007cc:	68fb      	ldr	r3, [r7, #12]
 80007ce:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80007d2:	1ac3      	subs	r3, r0, r3
 80007d4:	4299      	cmp	r1, r3
 80007d6:	d266      	bcs.n	80008a6 <trapezoidal_func+0x1ca>
				&& cnt <= (int) (n_steps_a[k] * 1 / 2)) { //acceleration phase
 80007d8:	4a63      	ldr	r2, [pc, #396]	@ (8000968 <trapezoidal_func+0x28c>)
 80007da:	68fb      	ldr	r3, [r7, #12]
 80007dc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80007e0:	0fda      	lsrs	r2, r3, #31
 80007e2:	4413      	add	r3, r2
 80007e4:	105b      	asrs	r3, r3, #1
 80007e6:	461a      	mov	r2, r3
 80007e8:	697b      	ldr	r3, [r7, #20]
 80007ea:	4293      	cmp	r3, r2
 80007ec:	dc5b      	bgt.n	80008a6 <trapezoidal_func+0x1ca>
			arr_current[k] -= acc_rate_a[k];
 80007ee:	4a5c      	ldr	r2, [pc, #368]	@ (8000960 <trapezoidal_func+0x284>)
 80007f0:	68fb      	ldr	r3, [r7, #12]
 80007f2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80007f6:	4619      	mov	r1, r3
 80007f8:	4a5a      	ldr	r2, [pc, #360]	@ (8000964 <trapezoidal_func+0x288>)
 80007fa:	68fb      	ldr	r3, [r7, #12]
 80007fc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000800:	1acb      	subs	r3, r1, r3
 8000802:	4619      	mov	r1, r3
 8000804:	4a56      	ldr	r2, [pc, #344]	@ (8000960 <trapezoidal_func+0x284>)
 8000806:	68fb      	ldr	r3, [r7, #12]
 8000808:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
			if (arr_current[k] <= arr_max[k]) //max velocity saturation
 800080c:	4a54      	ldr	r2, [pc, #336]	@ (8000960 <trapezoidal_func+0x284>)
 800080e:	68fb      	ldr	r3, [r7, #12]
 8000810:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000814:	4619      	mov	r1, r3
 8000816:	4a55      	ldr	r2, [pc, #340]	@ (800096c <trapezoidal_func+0x290>)
 8000818:	68fb      	ldr	r3, [r7, #12]
 800081a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800081e:	4299      	cmp	r1, r3
 8000820:	d808      	bhi.n	8000834 <trapezoidal_func+0x158>
				arr_current[k] = arr_max[k];
 8000822:	4a52      	ldr	r2, [pc, #328]	@ (800096c <trapezoidal_func+0x290>)
 8000824:	68fb      	ldr	r3, [r7, #12]
 8000826:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800082a:	4619      	mov	r1, r3
 800082c:	4a4c      	ldr	r2, [pc, #304]	@ (8000960 <trapezoidal_func+0x284>)
 800082e:	68fb      	ldr	r3, [r7, #12]
 8000830:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
			__HAL_TIM_SET_AUTORELOAD(htim, arr_current[k]);
 8000834:	4a4a      	ldr	r2, [pc, #296]	@ (8000960 <trapezoidal_func+0x284>)
 8000836:	68fb      	ldr	r3, [r7, #12]
 8000838:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800083c:	68bb      	ldr	r3, [r7, #8]
 800083e:	681b      	ldr	r3, [r3, #0]
 8000840:	62da      	str	r2, [r3, #44]	@ 0x2c
 8000842:	4a47      	ldr	r2, [pc, #284]	@ (8000960 <trapezoidal_func+0x284>)
 8000844:	68fb      	ldr	r3, [r7, #12]
 8000846:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800084a:	461a      	mov	r2, r3
 800084c:	68bb      	ldr	r3, [r7, #8]
 800084e:	60da      	str	r2, [r3, #12]
			hslave->Instance->PSC = arr_current[k];
 8000850:	4a43      	ldr	r2, [pc, #268]	@ (8000960 <trapezoidal_func+0x284>)
 8000852:	68fb      	ldr	r3, [r7, #12]
 8000854:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000858:	687b      	ldr	r3, [r7, #4]
 800085a:	681b      	ldr	r3, [r3, #0]
 800085c:	629a      	str	r2, [r3, #40]	@ 0x28
			__HAL_TIM_SET_COMPARE(htim, TIM_CHANNEL_1,
 800085e:	68bb      	ldr	r3, [r7, #8]
 8000860:	681b      	ldr	r3, [r3, #0]
 8000862:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8000864:	68bb      	ldr	r3, [r7, #8]
 8000866:	681b      	ldr	r3, [r3, #0]
 8000868:	0852      	lsrs	r2, r2, #1
 800086a:	635a      	str	r2, [r3, #52]	@ 0x34
			hslave->Instance->EGR |= TIM_EGR_UG;
 800086c:	687b      	ldr	r3, [r7, #4]
 800086e:	681b      	ldr	r3, [r3, #0]
 8000870:	695a      	ldr	r2, [r3, #20]
 8000872:	687b      	ldr	r3, [r7, #4]
 8000874:	681b      	ldr	r3, [r3, #0]
 8000876:	f042 0201 	orr.w	r2, r2, #1
 800087a:	615a      	str	r2, [r3, #20]
			hslave->Instance->CNT = count_rising_edge[k];
 800087c:	687b      	ldr	r3, [r7, #4]
 800087e:	681b      	ldr	r3, [r3, #0]
 8000880:	4933      	ldr	r1, [pc, #204]	@ (8000950 <trapezoidal_func+0x274>)
 8000882:	68fa      	ldr	r2, [r7, #12]
 8000884:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8000888:	625a      	str	r2, [r3, #36]	@ 0x24
			acc_count[k] += (htim->Instance->PSC + 1); //increase the acc_count
 800088a:	68bb      	ldr	r3, [r7, #8]
 800088c:	681b      	ldr	r3, [r3, #0]
 800088e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000890:	1c5a      	adds	r2, r3, #1
 8000892:	4930      	ldr	r1, [pc, #192]	@ (8000954 <trapezoidal_func+0x278>)
 8000894:	68fb      	ldr	r3, [r7, #12]
 8000896:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800089a:	441a      	add	r2, r3
 800089c:	492d      	ldr	r1, [pc, #180]	@ (8000954 <trapezoidal_func+0x278>)
 800089e:	68fb      	ldr	r3, [r7, #12]
 80008a0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80008a4:	e0c5      	b.n	8000a32 <trapezoidal_func+0x356>
			if (arr_des_a[k] >= (arr_current[k] - acc_rate_a[k])
 80008a6:	4a2c      	ldr	r2, [pc, #176]	@ (8000958 <trapezoidal_func+0x27c>)
 80008a8:	68fb      	ldr	r3, [r7, #12]
 80008aa:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80008ae:	4619      	mov	r1, r3
 80008b0:	4a2b      	ldr	r2, [pc, #172]	@ (8000960 <trapezoidal_func+0x284>)
 80008b2:	68fb      	ldr	r3, [r7, #12]
 80008b4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80008b8:	4618      	mov	r0, r3
 80008ba:	4a2a      	ldr	r2, [pc, #168]	@ (8000964 <trapezoidal_func+0x288>)
 80008bc:	68fb      	ldr	r3, [r7, #12]
 80008be:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80008c2:	1ac3      	subs	r3, r0, r3
 80008c4:	4299      	cmp	r1, r3
 80008c6:	d353      	bcc.n	8000970 <trapezoidal_func+0x294>
					&& arr_current[k] > arr_des_a[k]
 80008c8:	4a25      	ldr	r2, [pc, #148]	@ (8000960 <trapezoidal_func+0x284>)
 80008ca:	68fb      	ldr	r3, [r7, #12]
 80008cc:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80008d0:	4921      	ldr	r1, [pc, #132]	@ (8000958 <trapezoidal_func+0x27c>)
 80008d2:	68fb      	ldr	r3, [r7, #12]
 80008d4:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80008d8:	429a      	cmp	r2, r3
 80008da:	dd49      	ble.n	8000970 <trapezoidal_func+0x294>
					&& cnt <= (int) (n_steps_a[k] * 1 / 2)) { //constant phase
 80008dc:	4a22      	ldr	r2, [pc, #136]	@ (8000968 <trapezoidal_func+0x28c>)
 80008de:	68fb      	ldr	r3, [r7, #12]
 80008e0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80008e4:	0fda      	lsrs	r2, r3, #31
 80008e6:	4413      	add	r3, r2
 80008e8:	105b      	asrs	r3, r3, #1
 80008ea:	461a      	mov	r2, r3
 80008ec:	697b      	ldr	r3, [r7, #20]
 80008ee:	4293      	cmp	r3, r2
 80008f0:	dc3e      	bgt.n	8000970 <trapezoidal_func+0x294>
				__HAL_TIM_SET_AUTORELOAD(htim, arr_des_a[k]);
 80008f2:	4a19      	ldr	r2, [pc, #100]	@ (8000958 <trapezoidal_func+0x27c>)
 80008f4:	68fb      	ldr	r3, [r7, #12]
 80008f6:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80008fa:	68bb      	ldr	r3, [r7, #8]
 80008fc:	681b      	ldr	r3, [r3, #0]
 80008fe:	62da      	str	r2, [r3, #44]	@ 0x2c
 8000900:	4a15      	ldr	r2, [pc, #84]	@ (8000958 <trapezoidal_func+0x27c>)
 8000902:	68fb      	ldr	r3, [r7, #12]
 8000904:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000908:	461a      	mov	r2, r3
 800090a:	68bb      	ldr	r3, [r7, #8]
 800090c:	60da      	str	r2, [r3, #12]
				hslave->Instance->PSC = arr_des_a[k];
 800090e:	4a12      	ldr	r2, [pc, #72]	@ (8000958 <trapezoidal_func+0x27c>)
 8000910:	68fb      	ldr	r3, [r7, #12]
 8000912:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000916:	687b      	ldr	r3, [r7, #4]
 8000918:	681b      	ldr	r3, [r3, #0]
 800091a:	629a      	str	r2, [r3, #40]	@ 0x28
				__HAL_TIM_SET_COMPARE(htim, TIM_CHANNEL_1,
 800091c:	68bb      	ldr	r3, [r7, #8]
 800091e:	681b      	ldr	r3, [r3, #0]
 8000920:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8000922:	68bb      	ldr	r3, [r7, #8]
 8000924:	681b      	ldr	r3, [r3, #0]
 8000926:	0852      	lsrs	r2, r2, #1
 8000928:	635a      	str	r2, [r3, #52]	@ 0x34
				hslave->Instance->EGR |= TIM_EGR_UG;
 800092a:	687b      	ldr	r3, [r7, #4]
 800092c:	681b      	ldr	r3, [r3, #0]
 800092e:	695a      	ldr	r2, [r3, #20]
 8000930:	687b      	ldr	r3, [r7, #4]
 8000932:	681b      	ldr	r3, [r3, #0]
 8000934:	f042 0201 	orr.w	r2, r2, #1
 8000938:	615a      	str	r2, [r3, #20]
				hslave->Instance->CNT = count_rising_edge[k];
 800093a:	687b      	ldr	r3, [r7, #4]
 800093c:	681b      	ldr	r3, [r3, #0]
 800093e:	4904      	ldr	r1, [pc, #16]	@ (8000950 <trapezoidal_func+0x274>)
 8000940:	68fa      	ldr	r2, [r7, #12]
 8000942:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8000946:	625a      	str	r2, [r3, #36]	@ 0x24
 8000948:	e073      	b.n	8000a32 <trapezoidal_func+0x356>
 800094a:	bf00      	nop
 800094c:	40000400 	.word	0x40000400
 8000950:	20000058 	.word	0x20000058
 8000954:	20000064 	.word	0x20000064
 8000958:	2000010c 	.word	0x2000010c
 800095c:	20000000 	.word	0x20000000
 8000960:	20000024 	.word	0x20000024
 8000964:	20000018 	.word	0x20000018
 8000968:	20000100 	.word	0x20000100
 800096c:	2000000c 	.word	0x2000000c
				if (cnt >= (n_steps_a[k] - acc_count[k])) { //deceleration phase
 8000970:	4a32      	ldr	r2, [pc, #200]	@ (8000a3c <trapezoidal_func+0x360>)
 8000972:	68fb      	ldr	r3, [r7, #12]
 8000974:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000978:	4619      	mov	r1, r3
 800097a:	4a31      	ldr	r2, [pc, #196]	@ (8000a40 <trapezoidal_func+0x364>)
 800097c:	68fb      	ldr	r3, [r7, #12]
 800097e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000982:	1aca      	subs	r2, r1, r3
 8000984:	697b      	ldr	r3, [r7, #20]
 8000986:	429a      	cmp	r2, r3
 8000988:	d853      	bhi.n	8000a32 <trapezoidal_func+0x356>
					arr_current[k] += acc_rate_a[k];
 800098a:	4a2e      	ldr	r2, [pc, #184]	@ (8000a44 <trapezoidal_func+0x368>)
 800098c:	68fb      	ldr	r3, [r7, #12]
 800098e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000992:	4619      	mov	r1, r3
 8000994:	4a2c      	ldr	r2, [pc, #176]	@ (8000a48 <trapezoidal_func+0x36c>)
 8000996:	68fb      	ldr	r3, [r7, #12]
 8000998:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800099c:	440b      	add	r3, r1
 800099e:	4619      	mov	r1, r3
 80009a0:	4a28      	ldr	r2, [pc, #160]	@ (8000a44 <trapezoidal_func+0x368>)
 80009a2:	68fb      	ldr	r3, [r7, #12]
 80009a4:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
					if (arr_current[k] >= (arr_start[k] - acc_rate_a[k])) //min velocity saturation
 80009a8:	4a26      	ldr	r2, [pc, #152]	@ (8000a44 <trapezoidal_func+0x368>)
 80009aa:	68fb      	ldr	r3, [r7, #12]
 80009ac:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80009b0:	4618      	mov	r0, r3
 80009b2:	4a26      	ldr	r2, [pc, #152]	@ (8000a4c <trapezoidal_func+0x370>)
 80009b4:	68fb      	ldr	r3, [r7, #12]
 80009b6:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80009ba:	4923      	ldr	r1, [pc, #140]	@ (8000a48 <trapezoidal_func+0x36c>)
 80009bc:	68fb      	ldr	r3, [r7, #12]
 80009be:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80009c2:	1ad3      	subs	r3, r2, r3
 80009c4:	4298      	cmp	r0, r3
 80009c6:	d308      	bcc.n	80009da <trapezoidal_func+0x2fe>
						arr_current[k] = arr_start[k];
 80009c8:	4a20      	ldr	r2, [pc, #128]	@ (8000a4c <trapezoidal_func+0x370>)
 80009ca:	68fb      	ldr	r3, [r7, #12]
 80009cc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80009d0:	4619      	mov	r1, r3
 80009d2:	4a1c      	ldr	r2, [pc, #112]	@ (8000a44 <trapezoidal_func+0x368>)
 80009d4:	68fb      	ldr	r3, [r7, #12]
 80009d6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
					__HAL_TIM_SET_AUTORELOAD(htim, arr_current[k]);
 80009da:	4a1a      	ldr	r2, [pc, #104]	@ (8000a44 <trapezoidal_func+0x368>)
 80009dc:	68fb      	ldr	r3, [r7, #12]
 80009de:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80009e2:	68bb      	ldr	r3, [r7, #8]
 80009e4:	681b      	ldr	r3, [r3, #0]
 80009e6:	62da      	str	r2, [r3, #44]	@ 0x2c
 80009e8:	4a16      	ldr	r2, [pc, #88]	@ (8000a44 <trapezoidal_func+0x368>)
 80009ea:	68fb      	ldr	r3, [r7, #12]
 80009ec:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80009f0:	461a      	mov	r2, r3
 80009f2:	68bb      	ldr	r3, [r7, #8]
 80009f4:	60da      	str	r2, [r3, #12]
					hslave->Instance->PSC = arr_current[k];
 80009f6:	4a13      	ldr	r2, [pc, #76]	@ (8000a44 <trapezoidal_func+0x368>)
 80009f8:	68fb      	ldr	r3, [r7, #12]
 80009fa:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80009fe:	687b      	ldr	r3, [r7, #4]
 8000a00:	681b      	ldr	r3, [r3, #0]
 8000a02:	629a      	str	r2, [r3, #40]	@ 0x28
					__HAL_TIM_SET_COMPARE(htim, TIM_CHANNEL_1,
 8000a04:	68bb      	ldr	r3, [r7, #8]
 8000a06:	681b      	ldr	r3, [r3, #0]
 8000a08:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8000a0a:	68bb      	ldr	r3, [r7, #8]
 8000a0c:	681b      	ldr	r3, [r3, #0]
 8000a0e:	0852      	lsrs	r2, r2, #1
 8000a10:	635a      	str	r2, [r3, #52]	@ 0x34
					hslave->Instance->EGR |= TIM_EGR_UG;
 8000a12:	687b      	ldr	r3, [r7, #4]
 8000a14:	681b      	ldr	r3, [r3, #0]
 8000a16:	695a      	ldr	r2, [r3, #20]
 8000a18:	687b      	ldr	r3, [r7, #4]
 8000a1a:	681b      	ldr	r3, [r3, #0]
 8000a1c:	f042 0201 	orr.w	r2, r2, #1
 8000a20:	615a      	str	r2, [r3, #20]
					hslave->Instance->CNT = count_rising_edge[k];
 8000a22:	687b      	ldr	r3, [r7, #4]
 8000a24:	681b      	ldr	r3, [r3, #0]
 8000a26:	490a      	ldr	r1, [pc, #40]	@ (8000a50 <trapezoidal_func+0x374>)
 8000a28:	68fa      	ldr	r2, [r7, #12]
 8000a2a:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8000a2e:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8000a30:	e7ff      	b.n	8000a32 <trapezoidal_func+0x356>
 8000a32:	bf00      	nop
 8000a34:	3718      	adds	r7, #24
 8000a36:	46bd      	mov	sp, r7
 8000a38:	bd80      	pop	{r7, pc}
 8000a3a:	bf00      	nop
 8000a3c:	20000100 	.word	0x20000100
 8000a40:	20000064 	.word	0x20000064
 8000a44:	20000024 	.word	0x20000024
 8000a48:	20000018 	.word	0x20000018
 8000a4c:	20000000 	.word	0x20000000
 8000a50:	20000058 	.word	0x20000058

08000a54 <HAL_TIM_PeriodElapsedCallback>:

//the following function is useful if you have specific needs
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 8000a54:	b480      	push	{r7}
 8000a56:	b083      	sub	sp, #12
 8000a58:	af00      	add	r7, sp, #0
 8000a5a:	6078      	str	r0, [r7, #4]
	 HAL_GPIO_WritePin(ENDEFF_en_GPIO_Port, ENDEFF_en_Pin, GPIO_PIN_RESET); //disable the end_eff
	 HAL_TIM_Base_Stop_IT(htim);

	 }*/

}
 8000a5c:	bf00      	nop
 8000a5e:	370c      	adds	r7, #12
 8000a60:	46bd      	mov	sp, r7
 8000a62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a66:	4770      	bx	lr

08000a68 <HAL_TIM_PWM_PulseFinishedCallback>:


//the following functions is called for each interrupt of the master (pwm timer)
void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim) {
 8000a68:	b580      	push	{r7, lr}
 8000a6a:	b082      	sub	sp, #8
 8000a6c:	af00      	add	r7, sp, #0
 8000a6e:	6078      	str	r0, [r7, #4]

	if (htim->Instance == TIM1) {//joint1
 8000a70:	687b      	ldr	r3, [r7, #4]
 8000a72:	681b      	ldr	r3, [r3, #0]
 8000a74:	4a1d      	ldr	r2, [pc, #116]	@ (8000aec <HAL_TIM_PWM_PulseFinishedCallback+0x84>)
 8000a76:	4293      	cmp	r3, r2
 8000a78:	d10d      	bne.n	8000a96 <HAL_TIM_PWM_PulseFinishedCallback+0x2e>

		count_rising_edge[0] += (htim->Instance->PSC + 1);
 8000a7a:	687b      	ldr	r3, [r7, #4]
 8000a7c:	681b      	ldr	r3, [r3, #0]
 8000a7e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000a80:	1c5a      	adds	r2, r3, #1
 8000a82:	4b1b      	ldr	r3, [pc, #108]	@ (8000af0 <HAL_TIM_PWM_PulseFinishedCallback+0x88>)
 8000a84:	681b      	ldr	r3, [r3, #0]
 8000a86:	4413      	add	r3, r2
 8000a88:	4a19      	ldr	r2, [pc, #100]	@ (8000af0 <HAL_TIM_PWM_PulseFinishedCallback+0x88>)
 8000a8a:	6013      	str	r3, [r2, #0]
		//arr[0] = -(__HAL_TIM_GET_AUTORELOAD(&htim1));  //debug graph
		trapezoidal_func(0, htim, &htim4); //0 = the joint1 timer
 8000a8c:	4a19      	ldr	r2, [pc, #100]	@ (8000af4 <HAL_TIM_PWM_PulseFinishedCallback+0x8c>)
 8000a8e:	6879      	ldr	r1, [r7, #4]
 8000a90:	2000      	movs	r0, #0
 8000a92:	f7ff fe23 	bl	80006dc <trapezoidal_func>

	}

	if (htim->Instance == TIM2) {//joint2
 8000a96:	687b      	ldr	r3, [r7, #4]
 8000a98:	681b      	ldr	r3, [r3, #0]
 8000a9a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8000a9e:	d10d      	bne.n	8000abc <HAL_TIM_PWM_PulseFinishedCallback+0x54>

		count_rising_edge[1] += (htim->Instance->PSC + 1);
 8000aa0:	687b      	ldr	r3, [r7, #4]
 8000aa2:	681b      	ldr	r3, [r3, #0]
 8000aa4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000aa6:	1c5a      	adds	r2, r3, #1
 8000aa8:	4b11      	ldr	r3, [pc, #68]	@ (8000af0 <HAL_TIM_PWM_PulseFinishedCallback+0x88>)
 8000aaa:	685b      	ldr	r3, [r3, #4]
 8000aac:	4413      	add	r3, r2
 8000aae:	4a10      	ldr	r2, [pc, #64]	@ (8000af0 <HAL_TIM_PWM_PulseFinishedCallback+0x88>)
 8000ab0:	6053      	str	r3, [r2, #4]
		//arr[1] = -(__HAL_TIM_GET_AUTORELOAD(htim));  //debug graph
		trapezoidal_func(1, htim, &htim3); //1 = the joint2 timer
 8000ab2:	4a11      	ldr	r2, [pc, #68]	@ (8000af8 <HAL_TIM_PWM_PulseFinishedCallback+0x90>)
 8000ab4:	6879      	ldr	r1, [r7, #4]
 8000ab6:	2001      	movs	r0, #1
 8000ab8:	f7ff fe10 	bl	80006dc <trapezoidal_func>

	}

	if (htim->Instance == TIM8) {//joint3
 8000abc:	687b      	ldr	r3, [r7, #4]
 8000abe:	681b      	ldr	r3, [r3, #0]
 8000ac0:	4a0e      	ldr	r2, [pc, #56]	@ (8000afc <HAL_TIM_PWM_PulseFinishedCallback+0x94>)
 8000ac2:	4293      	cmp	r3, r2
 8000ac4:	d10d      	bne.n	8000ae2 <HAL_TIM_PWM_PulseFinishedCallback+0x7a>

		count_rising_edge[2] += (htim->Instance->PSC + 1);
 8000ac6:	687b      	ldr	r3, [r7, #4]
 8000ac8:	681b      	ldr	r3, [r3, #0]
 8000aca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000acc:	1c5a      	adds	r2, r3, #1
 8000ace:	4b08      	ldr	r3, [pc, #32]	@ (8000af0 <HAL_TIM_PWM_PulseFinishedCallback+0x88>)
 8000ad0:	689b      	ldr	r3, [r3, #8]
 8000ad2:	4413      	add	r3, r2
 8000ad4:	4a06      	ldr	r2, [pc, #24]	@ (8000af0 <HAL_TIM_PWM_PulseFinishedCallback+0x88>)
 8000ad6:	6093      	str	r3, [r2, #8]
		//arr[2] = -(__HAL_TIM_GET_AUTORELOAD(htim));  //debug graph
		trapezoidal_func(2, htim, &htim5); //2= the joint3 timer
 8000ad8:	4a09      	ldr	r2, [pc, #36]	@ (8000b00 <HAL_TIM_PWM_PulseFinishedCallback+0x98>)
 8000ada:	6879      	ldr	r1, [r7, #4]
 8000adc:	2002      	movs	r0, #2
 8000ade:	f7ff fdfd 	bl	80006dc <trapezoidal_func>

	}
}
 8000ae2:	bf00      	nop
 8000ae4:	3708      	adds	r7, #8
 8000ae6:	46bd      	mov	sp, r7
 8000ae8:	bd80      	pop	{r7, pc}
 8000aea:	bf00      	nop
 8000aec:	40010000 	.word	0x40010000
 8000af0:	20000058 	.word	0x20000058
 8000af4:	200001f4 	.word	0x200001f4
 8000af8:	200001ac 	.word	0x200001ac
 8000afc:	40010400 	.word	0x40010400
 8000b00:	2000023c 	.word	0x2000023c

08000b04 <main>:

/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void) {
 8000b04:	b580      	push	{r7, lr}
 8000b06:	b084      	sub	sp, #16
 8000b08:	af02      	add	r7, sp, #8
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 8000b0a:	f001 f9df 	bl	8001ecc <HAL_Init>
	/* USER CODE BEGIN Init */

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 8000b0e:	f000 f92d 	bl	8000d6c <SystemClock_Config>
	/* USER CODE BEGIN SysInit */

	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 8000b12:	f7ff fd01 	bl	8000518 <MX_GPIO_Init>
	MX_TIM3_Init();
 8000b16:	f000 fd17 	bl	8001548 <MX_TIM3_Init>
	MX_TIM5_Init();
 8000b1a:	f000 fddd 	bl	80016d8 <MX_TIM5_Init>
	MX_TIM1_Init();
 8000b1e:	f000 fbef 	bl	8001300 <MX_TIM1_Init>
	MX_TIM2_Init();
 8000b22:	f000 fc8f 	bl	8001444 <MX_TIM2_Init>
	MX_TIM4_Init();
 8000b26:	f000 fd73 	bl	8001610 <MX_TIM4_Init>
	MX_TIM8_Init();
 8000b2a:	f000 fe6f 	bl	800180c <MX_TIM8_Init>
	MX_TIM10_Init();
 8000b2e:	f000 ff0f 	bl	8001950 <MX_TIM10_Init>
	MX_TIM11_Init();
 8000b32:	f000 ff5b 	bl	80019ec <MX_TIM11_Init>
	MX_TIM6_Init();
 8000b36:	f000 fe33 	bl	80017a0 <MX_TIM6_Init>
	/* USER CODE BEGIN 2 */
	HAL_TIM_Base_Start(&htim4); //start timer 1st joint
 8000b3a:	4870      	ldr	r0, [pc, #448]	@ (8000cfc <main+0x1f8>)
 8000b3c:	f002 fb72 	bl	8003224 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(&htim3); //start timer 2nd joint
 8000b40:	486f      	ldr	r0, [pc, #444]	@ (8000d00 <main+0x1fc>)
 8000b42:	f002 fb6f 	bl	8003224 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(&htim5); //start timer 3rd joint
 8000b46:	486f      	ldr	r0, [pc, #444]	@ (8000d04 <main+0x200>)
 8000b48:	f002 fb6c 	bl	8003224 <HAL_TIM_Base_Start>

	HAL_GPIO_WritePin(ENABLE_GPIO_Port, ENABLE_Pin, GPIO_PIN_RESET); //ENABLE stepper motors
 8000b4c:	2200      	movs	r2, #0
 8000b4e:	2120      	movs	r1, #32
 8000b50:	486d      	ldr	r0, [pc, #436]	@ (8000d08 <main+0x204>)
 8000b52:	f001 fcf7 	bl	8002544 <HAL_GPIO_WritePin>

	/* stepper_init(obj, timer pwm, timer slave, resol, microstep, enable_port, direction_port */
	stepper_init(&stp1, &htim1, &htim4, 1.8, 4 * 4.27, DIRECTION1_GPIO_Port,
 8000b56:	2301      	movs	r3, #1
 8000b58:	9301      	str	r3, [sp, #4]
 8000b5a:	4b6c      	ldr	r3, [pc, #432]	@ (8000d0c <main+0x208>)
 8000b5c:	9300      	str	r3, [sp, #0]
 8000b5e:	2311      	movs	r3, #17
 8000b60:	ed9f 0a6b 	vldr	s0, [pc, #428]	@ 8000d10 <main+0x20c>
 8000b64:	4a65      	ldr	r2, [pc, #404]	@ (8000cfc <main+0x1f8>)
 8000b66:	496b      	ldr	r1, [pc, #428]	@ (8000d14 <main+0x210>)
 8000b68:	486b      	ldr	r0, [pc, #428]	@ (8000d18 <main+0x214>)
 8000b6a:	f000 f9e9 	bl	8000f40 <stepper_init>
	DIRECTION1_Pin);
	stepper_init(&stp2, &htim2, &htim3, 1.8, 4 * 6, DIRECTION2_GPIO_Port,
 8000b6e:	2310      	movs	r3, #16
 8000b70:	9301      	str	r3, [sp, #4]
 8000b72:	4b65      	ldr	r3, [pc, #404]	@ (8000d08 <main+0x204>)
 8000b74:	9300      	str	r3, [sp, #0]
 8000b76:	2318      	movs	r3, #24
 8000b78:	ed9f 0a65 	vldr	s0, [pc, #404]	@ 8000d10 <main+0x20c>
 8000b7c:	4a60      	ldr	r2, [pc, #384]	@ (8000d00 <main+0x1fc>)
 8000b7e:	4967      	ldr	r1, [pc, #412]	@ (8000d1c <main+0x218>)
 8000b80:	4867      	ldr	r0, [pc, #412]	@ (8000d20 <main+0x21c>)
 8000b82:	f000 f9dd 	bl	8000f40 <stepper_init>
	DIRECTION2_Pin);
	stepper_init(&stp3, &htim2, &htim3, 1.8, 4 * 6, DIRECTION3_GPIO_Port,
 8000b86:	2380      	movs	r3, #128	@ 0x80
 8000b88:	9301      	str	r3, [sp, #4]
 8000b8a:	4b66      	ldr	r3, [pc, #408]	@ (8000d24 <main+0x220>)
 8000b8c:	9300      	str	r3, [sp, #0]
 8000b8e:	2318      	movs	r3, #24
 8000b90:	ed9f 0a5f 	vldr	s0, [pc, #380]	@ 8000d10 <main+0x20c>
 8000b94:	4a5a      	ldr	r2, [pc, #360]	@ (8000d00 <main+0x1fc>)
 8000b96:	4961      	ldr	r1, [pc, #388]	@ (8000d1c <main+0x218>)
 8000b98:	4863      	ldr	r0, [pc, #396]	@ (8000d28 <main+0x224>)
 8000b9a:	f000 f9d1 	bl	8000f40 <stepper_init>
	DIRECTION3_Pin);
	stepper_init(&stp4, &htim8, &htim5, 1.8, 8 * 4.9, DIRECTION4_GPIO_Port,
 8000b9e:	2340      	movs	r3, #64	@ 0x40
 8000ba0:	9301      	str	r3, [sp, #4]
 8000ba2:	4b60      	ldr	r3, [pc, #384]	@ (8000d24 <main+0x220>)
 8000ba4:	9300      	str	r3, [sp, #0]
 8000ba6:	2327      	movs	r3, #39	@ 0x27
 8000ba8:	ed9f 0a59 	vldr	s0, [pc, #356]	@ 8000d10 <main+0x20c>
 8000bac:	4a55      	ldr	r2, [pc, #340]	@ (8000d04 <main+0x200>)
 8000bae:	495f      	ldr	r1, [pc, #380]	@ (8000d2c <main+0x228>)
 8000bb0:	485f      	ldr	r0, [pc, #380]	@ (8000d30 <main+0x22c>)
 8000bb2:	f000 f9c5 	bl	8000f40 <stepper_init>
	DIRECTION4_Pin);

	//servo: default position 0° in the range {-90,+90}
	/*servo_init(obj, timer pwm)*/
	servo_init(&srv1, &htim10);
 8000bb6:	495f      	ldr	r1, [pc, #380]	@ (8000d34 <main+0x230>)
 8000bb8:	485f      	ldr	r0, [pc, #380]	@ (8000d38 <main+0x234>)
 8000bba:	f000 f94b 	bl	8000e54 <servo_init>
	servo_init(&srv2, &htim11);
 8000bbe:	495f      	ldr	r1, [pc, #380]	@ (8000d3c <main+0x238>)
 8000bc0:	485f      	ldr	r0, [pc, #380]	@ (8000d40 <main+0x23c>)
 8000bc2:	f000 f947 	bl	8000e54 <servo_init>



	for (int i = 0; i < 2; i++) { //trajectory repeated 2 times
 8000bc6:	2300      	movs	r3, #0
 8000bc8:	607b      	str	r3, [r7, #4]
 8000bca:	e090      	b.n	8000cee <main+0x1ea>

		//1ST MOVEMENT
		stepper_move(&stp1, COUNTERCLOCKWISE, 36.5, 40);
 8000bcc:	eddf 0a5d 	vldr	s1, [pc, #372]	@ 8000d44 <main+0x240>
 8000bd0:	ed9f 0a5d 	vldr	s0, [pc, #372]	@ 8000d48 <main+0x244>
 8000bd4:	2100      	movs	r1, #0
 8000bd6:	4850      	ldr	r0, [pc, #320]	@ (8000d18 <main+0x214>)
 8000bd8:	f000 f9ec 	bl	8000fb4 <stepper_move>

		stepper_move(&stp2, CLOCKWISE, 132.5, 10);
 8000bdc:	eef2 0a04 	vmov.f32	s1, #36	@ 0x41200000  10.0
 8000be0:	ed9f 0a5a 	vldr	s0, [pc, #360]	@ 8000d4c <main+0x248>
 8000be4:	2101      	movs	r1, #1
 8000be6:	484e      	ldr	r0, [pc, #312]	@ (8000d20 <main+0x21c>)
 8000be8:	f000 f9e4 	bl	8000fb4 <stepper_move>
		stepper_move(&stp3, COUNTERCLOCKWISE, 132.5, 10);
 8000bec:	eef2 0a04 	vmov.f32	s1, #36	@ 0x41200000  10.0
 8000bf0:	ed9f 0a56 	vldr	s0, [pc, #344]	@ 8000d4c <main+0x248>
 8000bf4:	2100      	movs	r1, #0
 8000bf6:	484c      	ldr	r0, [pc, #304]	@ (8000d28 <main+0x224>)
 8000bf8:	f000 f9dc 	bl	8000fb4 <stepper_move>

		stepper_move(&stp4, CLOCKWISE, 40, 40);
 8000bfc:	eddf 0a51 	vldr	s1, [pc, #324]	@ 8000d44 <main+0x240>
 8000c00:	ed9f 0a50 	vldr	s0, [pc, #320]	@ 8000d44 <main+0x240>
 8000c04:	2101      	movs	r1, #1
 8000c06:	484a      	ldr	r0, [pc, #296]	@ (8000d30 <main+0x22c>)
 8000c08:	f000 f9d4 	bl	8000fb4 <stepper_move>

		servo_move(&srv2, -15);
 8000c0c:	eeba 0a0e 	vmov.f32	s0, #174	@ 0xc1700000 -15.0
 8000c10:	484b      	ldr	r0, [pc, #300]	@ (8000d40 <main+0x23c>)
 8000c12:	f000 f947 	bl	8000ea4 <servo_move>
		end_eff_config(0, &htim6);
 8000c16:	494e      	ldr	r1, [pc, #312]	@ (8000d50 <main+0x24c>)
 8000c18:	2000      	movs	r0, #0
 8000c1a:	f7ff fc6b 	bl	80004f4 <end_eff_config>

		HAL_Delay(3500);
 8000c1e:	f640 50ac 	movw	r0, #3500	@ 0xdac
 8000c22:	f001 f9c5 	bl	8001fb0 <HAL_Delay>

		//2ND MOVEMENT

		stepper_move(&stp2, COUNTERCLOCKWISE, 75, 10);
 8000c26:	eef2 0a04 	vmov.f32	s1, #36	@ 0x41200000  10.0
 8000c2a:	ed9f 0a4a 	vldr	s0, [pc, #296]	@ 8000d54 <main+0x250>
 8000c2e:	2100      	movs	r1, #0
 8000c30:	483b      	ldr	r0, [pc, #236]	@ (8000d20 <main+0x21c>)
 8000c32:	f000 f9bf 	bl	8000fb4 <stepper_move>
		stepper_move(&stp3, CLOCKWISE, 75, 10);
 8000c36:	eef2 0a04 	vmov.f32	s1, #36	@ 0x41200000  10.0
 8000c3a:	ed9f 0a46 	vldr	s0, [pc, #280]	@ 8000d54 <main+0x250>
 8000c3e:	2101      	movs	r1, #1
 8000c40:	4839      	ldr	r0, [pc, #228]	@ (8000d28 <main+0x224>)
 8000c42:	f000 f9b7 	bl	8000fb4 <stepper_move>

		HAL_Delay(2000);
 8000c46:	f44f 60fa 	mov.w	r0, #2000	@ 0x7d0
 8000c4a:	f001 f9b1 	bl	8001fb0 <HAL_Delay>

		//3RD MOVEMENT
		stepper_move(&stp1, CLOCKWISE, 70, 70);
 8000c4e:	eddf 0a42 	vldr	s1, [pc, #264]	@ 8000d58 <main+0x254>
 8000c52:	ed9f 0a41 	vldr	s0, [pc, #260]	@ 8000d58 <main+0x254>
 8000c56:	2101      	movs	r1, #1
 8000c58:	482f      	ldr	r0, [pc, #188]	@ (8000d18 <main+0x214>)
 8000c5a:	f000 f9ab 	bl	8000fb4 <stepper_move>
		HAL_Delay(3900);
 8000c5e:	f640 703c 	movw	r0, #3900	@ 0xf3c
 8000c62:	f001 f9a5 	bl	8001fb0 <HAL_Delay>

		//4TH MOVEMENT

		stepper_move(&stp2, CLOCKWISE, 45, 10);
 8000c66:	eef2 0a04 	vmov.f32	s1, #36	@ 0x41200000  10.0
 8000c6a:	ed9f 0a3c 	vldr	s0, [pc, #240]	@ 8000d5c <main+0x258>
 8000c6e:	2101      	movs	r1, #1
 8000c70:	482b      	ldr	r0, [pc, #172]	@ (8000d20 <main+0x21c>)
 8000c72:	f000 f99f 	bl	8000fb4 <stepper_move>
		stepper_move(&stp3, COUNTERCLOCKWISE, 45, 10);
 8000c76:	eef2 0a04 	vmov.f32	s1, #36	@ 0x41200000  10.0
 8000c7a:	ed9f 0a38 	vldr	s0, [pc, #224]	@ 8000d5c <main+0x258>
 8000c7e:	2100      	movs	r1, #0
 8000c80:	4829      	ldr	r0, [pc, #164]	@ (8000d28 <main+0x224>)
 8000c82:	f000 f997 	bl	8000fb4 <stepper_move>


		servo_move(&srv2, 0);
 8000c86:	ed9f 0a36 	vldr	s0, [pc, #216]	@ 8000d60 <main+0x25c>
 8000c8a:	482d      	ldr	r0, [pc, #180]	@ (8000d40 <main+0x23c>)
 8000c8c:	f000 f90a 	bl	8000ea4 <servo_move>

		HAL_Delay(4000);
 8000c90:	f44f 607a 	mov.w	r0, #4000	@ 0xfa0
 8000c94:	f001 f98c 	bl	8001fb0 <HAL_Delay>

		//BACK TO INITIAL POSITION

		end_eff_config(0, &htim6);
 8000c98:	492d      	ldr	r1, [pc, #180]	@ (8000d50 <main+0x24c>)
 8000c9a:	2000      	movs	r0, #0
 8000c9c:	f7ff fc2a 	bl	80004f4 <end_eff_config>

		stepper_move(&stp2, COUNTERCLOCKWISE, 104.5, 10);
 8000ca0:	eef2 0a04 	vmov.f32	s1, #36	@ 0x41200000  10.0
 8000ca4:	ed9f 0a2f 	vldr	s0, [pc, #188]	@ 8000d64 <main+0x260>
 8000ca8:	2100      	movs	r1, #0
 8000caa:	481d      	ldr	r0, [pc, #116]	@ (8000d20 <main+0x21c>)
 8000cac:	f000 f982 	bl	8000fb4 <stepper_move>
		stepper_move(&stp3, CLOCKWISE, 104.5, 10);
 8000cb0:	eef2 0a04 	vmov.f32	s1, #36	@ 0x41200000  10.0
 8000cb4:	ed9f 0a2b 	vldr	s0, [pc, #172]	@ 8000d64 <main+0x260>
 8000cb8:	2101      	movs	r1, #1
 8000cba:	481b      	ldr	r0, [pc, #108]	@ (8000d28 <main+0x224>)
 8000cbc:	f000 f97a 	bl	8000fb4 <stepper_move>

		stepper_move(&stp1, COUNTERCLOCKWISE, 33.5, 40);
 8000cc0:	eddf 0a20 	vldr	s1, [pc, #128]	@ 8000d44 <main+0x240>
 8000cc4:	ed9f 0a28 	vldr	s0, [pc, #160]	@ 8000d68 <main+0x264>
 8000cc8:	2100      	movs	r1, #0
 8000cca:	4813      	ldr	r0, [pc, #76]	@ (8000d18 <main+0x214>)
 8000ccc:	f000 f972 	bl	8000fb4 <stepper_move>

		stepper_move(&stp4, COUNTERCLOCKWISE, 40, 40);
 8000cd0:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 8000d44 <main+0x240>
 8000cd4:	ed9f 0a1b 	vldr	s0, [pc, #108]	@ 8000d44 <main+0x240>
 8000cd8:	2100      	movs	r1, #0
 8000cda:	4815      	ldr	r0, [pc, #84]	@ (8000d30 <main+0x22c>)
 8000cdc:	f000 f96a 	bl	8000fb4 <stepper_move>

		HAL_Delay(3000);
 8000ce0:	f640 30b8 	movw	r0, #3000	@ 0xbb8
 8000ce4:	f001 f964 	bl	8001fb0 <HAL_Delay>
	for (int i = 0; i < 2; i++) { //trajectory repeated 2 times
 8000ce8:	687b      	ldr	r3, [r7, #4]
 8000cea:	3301      	adds	r3, #1
 8000cec:	607b      	str	r3, [r7, #4]
 8000cee:	687b      	ldr	r3, [r7, #4]
 8000cf0:	2b01      	cmp	r3, #1
 8000cf2:	f77f af6b 	ble.w	8000bcc <main+0xc8>
	/* USER CODE END 2 */

	/* Infinite loop */
	/* USER CODE BEGIN WHILE */

	while (1) {
 8000cf6:	bf00      	nop
 8000cf8:	e7fd      	b.n	8000cf6 <main+0x1f2>
 8000cfa:	bf00      	nop
 8000cfc:	200001f4 	.word	0x200001f4
 8000d00:	200001ac 	.word	0x200001ac
 8000d04:	2000023c 	.word	0x2000023c
 8000d08:	40020800 	.word	0x40020800
 8000d0c:	40020400 	.word	0x40020400
 8000d10:	3fe66666 	.word	0x3fe66666
 8000d14:	2000011c 	.word	0x2000011c
 8000d18:	20000070 	.word	0x20000070
 8000d1c:	20000164 	.word	0x20000164
 8000d20:	20000090 	.word	0x20000090
 8000d24:	40020000 	.word	0x40020000
 8000d28:	200000b0 	.word	0x200000b0
 8000d2c:	200002cc 	.word	0x200002cc
 8000d30:	200000d0 	.word	0x200000d0
 8000d34:	20000314 	.word	0x20000314
 8000d38:	200000f0 	.word	0x200000f0
 8000d3c:	2000035c 	.word	0x2000035c
 8000d40:	200000f8 	.word	0x200000f8
 8000d44:	42200000 	.word	0x42200000
 8000d48:	42120000 	.word	0x42120000
 8000d4c:	43048000 	.word	0x43048000
 8000d50:	20000284 	.word	0x20000284
 8000d54:	42960000 	.word	0x42960000
 8000d58:	428c0000 	.word	0x428c0000
 8000d5c:	42340000 	.word	0x42340000
 8000d60:	00000000 	.word	0x00000000
 8000d64:	42d10000 	.word	0x42d10000
 8000d68:	42060000 	.word	0x42060000

08000d6c <SystemClock_Config>:

/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void) {
 8000d6c:	b580      	push	{r7, lr}
 8000d6e:	b094      	sub	sp, #80	@ 0x50
 8000d70:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 8000d72:	f107 031c 	add.w	r3, r7, #28
 8000d76:	2234      	movs	r2, #52	@ 0x34
 8000d78:	2100      	movs	r1, #0
 8000d7a:	4618      	mov	r0, r3
 8000d7c:	f003 fd18 	bl	80047b0 <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 8000d80:	f107 0308 	add.w	r3, r7, #8
 8000d84:	2200      	movs	r2, #0
 8000d86:	601a      	str	r2, [r3, #0]
 8000d88:	605a      	str	r2, [r3, #4]
 8000d8a:	609a      	str	r2, [r3, #8]
 8000d8c:	60da      	str	r2, [r3, #12]
 8000d8e:	611a      	str	r2, [r3, #16]

	/** Configure the main internal regulator output voltage
	 */
	__HAL_RCC_PWR_CLK_ENABLE();
 8000d90:	2300      	movs	r3, #0
 8000d92:	607b      	str	r3, [r7, #4]
 8000d94:	4b2a      	ldr	r3, [pc, #168]	@ (8000e40 <SystemClock_Config+0xd4>)
 8000d96:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000d98:	4a29      	ldr	r2, [pc, #164]	@ (8000e40 <SystemClock_Config+0xd4>)
 8000d9a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000d9e:	6413      	str	r3, [r2, #64]	@ 0x40
 8000da0:	4b27      	ldr	r3, [pc, #156]	@ (8000e40 <SystemClock_Config+0xd4>)
 8000da2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000da4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000da8:	607b      	str	r3, [r7, #4]
 8000daa:	687b      	ldr	r3, [r7, #4]
	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8000dac:	2300      	movs	r3, #0
 8000dae:	603b      	str	r3, [r7, #0]
 8000db0:	4b24      	ldr	r3, [pc, #144]	@ (8000e44 <SystemClock_Config+0xd8>)
 8000db2:	681b      	ldr	r3, [r3, #0]
 8000db4:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8000db8:	4a22      	ldr	r2, [pc, #136]	@ (8000e44 <SystemClock_Config+0xd8>)
 8000dba:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000dbe:	6013      	str	r3, [r2, #0]
 8000dc0:	4b20      	ldr	r3, [pc, #128]	@ (8000e44 <SystemClock_Config+0xd8>)
 8000dc2:	681b      	ldr	r3, [r3, #0]
 8000dc4:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000dc8:	603b      	str	r3, [r7, #0]
 8000dca:	683b      	ldr	r3, [r7, #0]

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000dcc:	2301      	movs	r3, #1
 8000dce:	61fb      	str	r3, [r7, #28]
	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000dd0:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000dd4:	623b      	str	r3, [r7, #32]
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000dd6:	2302      	movs	r3, #2
 8000dd8:	637b      	str	r3, [r7, #52]	@ 0x34
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000dda:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8000dde:	63bb      	str	r3, [r7, #56]	@ 0x38
	RCC_OscInitStruct.PLL.PLLM = 4;
 8000de0:	2304      	movs	r3, #4
 8000de2:	63fb      	str	r3, [r7, #60]	@ 0x3c
	RCC_OscInitStruct.PLL.PLLN = 84;
 8000de4:	2354      	movs	r3, #84	@ 0x54
 8000de6:	643b      	str	r3, [r7, #64]	@ 0x40
	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000de8:	2302      	movs	r3, #2
 8000dea:	647b      	str	r3, [r7, #68]	@ 0x44
	RCC_OscInitStruct.PLL.PLLQ = 2;
 8000dec:	2302      	movs	r3, #2
 8000dee:	64bb      	str	r3, [r7, #72]	@ 0x48
	RCC_OscInitStruct.PLL.PLLR = 2;
 8000df0:	2302      	movs	r3, #2
 8000df2:	64fb      	str	r3, [r7, #76]	@ 0x4c
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 8000df4:	f107 031c 	add.w	r3, r7, #28
 8000df8:	4618      	mov	r0, r3
 8000dfa:	f001 ff25 	bl	8002c48 <HAL_RCC_OscConfig>
 8000dfe:	4603      	mov	r3, r0
 8000e00:	2b00      	cmp	r3, #0
 8000e02:	d001      	beq.n	8000e08 <SystemClock_Config+0x9c>
		Error_Handler();
 8000e04:	f000 f820 	bl	8000e48 <Error_Handler>
	}

	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 8000e08:	230f      	movs	r3, #15
 8000e0a:	60bb      	str	r3, [r7, #8]
			| RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000e0c:	2302      	movs	r3, #2
 8000e0e:	60fb      	str	r3, [r7, #12]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000e10:	2300      	movs	r3, #0
 8000e12:	613b      	str	r3, [r7, #16]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000e14:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000e18:	617b      	str	r3, [r7, #20]
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000e1a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000e1e:	61bb      	str	r3, [r7, #24]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK) {
 8000e20:	f107 0308 	add.w	r3, r7, #8
 8000e24:	2102      	movs	r1, #2
 8000e26:	4618      	mov	r0, r3
 8000e28:	f001 fbd8 	bl	80025dc <HAL_RCC_ClockConfig>
 8000e2c:	4603      	mov	r3, r0
 8000e2e:	2b00      	cmp	r3, #0
 8000e30:	d001      	beq.n	8000e36 <SystemClock_Config+0xca>
		Error_Handler();
 8000e32:	f000 f809 	bl	8000e48 <Error_Handler>
	}
}
 8000e36:	bf00      	nop
 8000e38:	3750      	adds	r7, #80	@ 0x50
 8000e3a:	46bd      	mov	sp, r7
 8000e3c:	bd80      	pop	{r7, pc}
 8000e3e:	bf00      	nop
 8000e40:	40023800 	.word	0x40023800
 8000e44:	40007000 	.word	0x40007000

08000e48 <Error_Handler>:

/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void) {
 8000e48:	b480      	push	{r7}
 8000e4a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000e4c:	b672      	cpsid	i
}
 8000e4e:	bf00      	nop
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8000e50:	bf00      	nop
 8000e52:	e7fd      	b.n	8000e50 <Error_Handler+0x8>

08000e54 <servo_init>:
 *  Created on: Mar 2, 2025
 *      Author: david
 */
#include <servo.h>

void servo_init(servo_obj *srv, TIM_HandleTypeDef *pwm_timer) {
 8000e54:	b580      	push	{r7, lr}
 8000e56:	b082      	sub	sp, #8
 8000e58:	af00      	add	r7, sp, #0
 8000e5a:	6078      	str	r0, [r7, #4]
 8000e5c:	6039      	str	r1, [r7, #0]
	srv->pwm_timer = pwm_timer;
 8000e5e:	687b      	ldr	r3, [r7, #4]
 8000e60:	683a      	ldr	r2, [r7, #0]
 8000e62:	601a      	str	r2, [r3, #0]
	srv->unit = (CCR_MAX - CCR_MIN) / (2 * ANGLE_MAX);
 8000e64:	687b      	ldr	r3, [r7, #4]
 8000e66:	4a0e      	ldr	r2, [pc, #56]	@ (8000ea0 <servo_init+0x4c>)
 8000e68:	605a      	str	r2, [r3, #4]
	//pwm=50hz
	srv->pwm_timer->Instance->PSC = 27;
 8000e6a:	687b      	ldr	r3, [r7, #4]
 8000e6c:	681b      	ldr	r3, [r3, #0]
 8000e6e:	681b      	ldr	r3, [r3, #0]
 8000e70:	221b      	movs	r2, #27
 8000e72:	629a      	str	r2, [r3, #40]	@ 0x28
	srv->pwm_timer->Instance->ARR = 60000 - 1;
 8000e74:	687b      	ldr	r3, [r7, #4]
 8000e76:	681b      	ldr	r3, [r3, #0]
 8000e78:	681b      	ldr	r3, [r3, #0]
 8000e7a:	f64e 225f 	movw	r2, #59999	@ 0xea5f
 8000e7e:	62da      	str	r2, [r3, #44]	@ 0x2c
	__HAL_TIM_SET_COMPARE(srv->pwm_timer, TIM_CHANNEL_1,
 8000e80:	687b      	ldr	r3, [r7, #4]
 8000e82:	681b      	ldr	r3, [r3, #0]
 8000e84:	681b      	ldr	r3, [r3, #0]
 8000e86:	f241 1293 	movw	r2, #4499	@ 0x1193
 8000e8a:	635a      	str	r2, [r3, #52]	@ 0x34
			(int) ((CCR_MAX + CCR_MIN) / 2));
	HAL_TIM_PWM_Start(srv->pwm_timer, TIM_CHANNEL_1); //START PWM)
 8000e8c:	687b      	ldr	r3, [r7, #4]
 8000e8e:	681b      	ldr	r3, [r3, #0]
 8000e90:	2100      	movs	r1, #0
 8000e92:	4618      	mov	r0, r3
 8000e94:	f002 fa88 	bl	80033a8 <HAL_TIM_PWM_Start>
}
 8000e98:	bf00      	nop
 8000e9a:	3708      	adds	r7, #8
 8000e9c:	46bd      	mov	sp, r7
 8000e9e:	bd80      	pop	{r7, pc}
 8000ea0:	42055555 	.word	0x42055555

08000ea4 <servo_move>:


void servo_move(servo_obj *srv, float position) {
 8000ea4:	b480      	push	{r7}
 8000ea6:	b085      	sub	sp, #20
 8000ea8:	af00      	add	r7, sp, #0
 8000eaa:	6078      	str	r0, [r7, #4]
 8000eac:	ed87 0a00 	vstr	s0, [r7]

	int ccr;
	//saturation
	if (position > ANGLE_MAX)
 8000eb0:	edd7 7a00 	vldr	s15, [r7]
 8000eb4:	ed9f 7a1e 	vldr	s14, [pc, #120]	@ 8000f30 <servo_move+0x8c>
 8000eb8:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000ebc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000ec0:	dd01      	ble.n	8000ec6 <servo_move+0x22>
		position = ANGLE_MAX; //max angle position available
 8000ec2:	4b1c      	ldr	r3, [pc, #112]	@ (8000f34 <servo_move+0x90>)
 8000ec4:	603b      	str	r3, [r7, #0]
	if (position < -ANGLE_MAX)
 8000ec6:	edd7 7a00 	vldr	s15, [r7]
 8000eca:	ed9f 7a1b 	vldr	s14, [pc, #108]	@ 8000f38 <servo_move+0x94>
 8000ece:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000ed2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000ed6:	d501      	bpl.n	8000edc <servo_move+0x38>
		position = -ANGLE_MAX; //min angle position available
 8000ed8:	4b18      	ldr	r3, [pc, #96]	@ (8000f3c <servo_move+0x98>)
 8000eda:	603b      	str	r3, [r7, #0]

	//compute ccr value
	if (position != 0)
 8000edc:	edd7 7a00 	vldr	s15, [r7]
 8000ee0:	eef5 7a40 	vcmp.f32	s15, #0.0
 8000ee4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000ee8:	d00f      	beq.n	8000f0a <servo_move+0x66>
		ccr = (int) ((CCR_MAX + CCR_MIN) / 2) + (int) (srv->unit * position);
 8000eea:	687b      	ldr	r3, [r7, #4]
 8000eec:	ed93 7a01 	vldr	s14, [r3, #4]
 8000ef0:	edd7 7a00 	vldr	s15, [r7]
 8000ef4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000ef8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000efc:	ee17 3a90 	vmov	r3, s15
 8000f00:	f503 538c 	add.w	r3, r3, #4480	@ 0x1180
 8000f04:	3313      	adds	r3, #19
 8000f06:	60fb      	str	r3, [r7, #12]
 8000f08:	e002      	b.n	8000f10 <servo_move+0x6c>

	else {  //position==0
		ccr = (int) ((CCR_MAX + CCR_MIN) / 2); /*0 deg */
 8000f0a:	f241 1393 	movw	r3, #4499	@ 0x1193
 8000f0e:	60fb      	str	r3, [r7, #12]
	}
	__HAL_TIM_SET_COMPARE(srv->pwm_timer, TIM_CHANNEL_1, ccr);
 8000f10:	687b      	ldr	r3, [r7, #4]
 8000f12:	681b      	ldr	r3, [r3, #0]
 8000f14:	681b      	ldr	r3, [r3, #0]
 8000f16:	68fa      	ldr	r2, [r7, #12]
 8000f18:	635a      	str	r2, [r3, #52]	@ 0x34
	srv->pwm_timer->Instance->EGR = TIM_EGR_UG; //reset timer
 8000f1a:	687b      	ldr	r3, [r7, #4]
 8000f1c:	681b      	ldr	r3, [r3, #0]
 8000f1e:	681b      	ldr	r3, [r3, #0]
 8000f20:	2201      	movs	r2, #1
 8000f22:	615a      	str	r2, [r3, #20]

}
 8000f24:	bf00      	nop
 8000f26:	3714      	adds	r7, #20
 8000f28:	46bd      	mov	sp, r7
 8000f2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f2e:	4770      	bx	lr
 8000f30:	42b40000 	.word	0x42b40000
 8000f34:	42b40000 	.word	0x42b40000
 8000f38:	c2b40000 	.word	0xc2b40000
 8000f3c:	c2b40000 	.word	0xc2b40000

08000f40 <stepper_init>:

//stepper struct
void stepper_init(stepper_obj *stp, TIM_HandleTypeDef *pwm_timer,
		TIM_HandleTypeDef *position_timer, float stepper_resolution,
		uint16_t microstep, GPIO_TypeDef *direction_port,
		uint16_t direction_pin) {
 8000f40:	b480      	push	{r7}
 8000f42:	b087      	sub	sp, #28
 8000f44:	af00      	add	r7, sp, #0
 8000f46:	6178      	str	r0, [r7, #20]
 8000f48:	6139      	str	r1, [r7, #16]
 8000f4a:	60fa      	str	r2, [r7, #12]
 8000f4c:	ed87 0a02 	vstr	s0, [r7, #8]
 8000f50:	80fb      	strh	r3, [r7, #6]

	stp->position_timer = position_timer;
 8000f52:	697b      	ldr	r3, [r7, #20]
 8000f54:	68fa      	ldr	r2, [r7, #12]
 8000f56:	605a      	str	r2, [r3, #4]
	stp->pwm_timer = pwm_timer;
 8000f58:	697b      	ldr	r3, [r7, #20]
 8000f5a:	693a      	ldr	r2, [r7, #16]
 8000f5c:	601a      	str	r2, [r3, #0]

	stp->direction_port = direction_port;
 8000f5e:	697b      	ldr	r3, [r7, #20]
 8000f60:	6a3a      	ldr	r2, [r7, #32]
 8000f62:	609a      	str	r2, [r3, #8]
	stp->direction_pin = direction_pin;
 8000f64:	697b      	ldr	r3, [r7, #20]
 8000f66:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 8000f68:	819a      	strh	r2, [r3, #12]

	stp->stepper_resolution = stepper_resolution;
 8000f6a:	697b      	ldr	r3, [r7, #20]
 8000f6c:	68ba      	ldr	r2, [r7, #8]
 8000f6e:	611a      	str	r2, [r3, #16]
	stp->microstep = microstep;
 8000f70:	697b      	ldr	r3, [r7, #20]
 8000f72:	88fa      	ldrh	r2, [r7, #6]
 8000f74:	831a      	strh	r2, [r3, #24]
	stp->step_per_rev = 360.0f / stepper_resolution; // 360°/resolution
 8000f76:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 8000fb0 <stepper_init+0x70>
 8000f7a:	ed97 7a02 	vldr	s14, [r7, #8]
 8000f7e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000f82:	697b      	ldr	r3, [r7, #20]
 8000f84:	edc3 7a05 	vstr	s15, [r3, #20]
	stp->step_scale = stp->step_per_rev * microstep;
 8000f88:	697b      	ldr	r3, [r7, #20]
 8000f8a:	ed93 7a05 	vldr	s14, [r3, #20]
 8000f8e:	88fb      	ldrh	r3, [r7, #6]
 8000f90:	ee07 3a90 	vmov	s15, r3
 8000f94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000f98:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000f9c:	697b      	ldr	r3, [r7, #20]
 8000f9e:	edc3 7a07 	vstr	s15, [r3, #28]

}
 8000fa2:	bf00      	nop
 8000fa4:	371c      	adds	r7, #28
 8000fa6:	46bd      	mov	sp, r7
 8000fa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fac:	4770      	bx	lr
 8000fae:	bf00      	nop
 8000fb0:	43b40000 	.word	0x43b40000

08000fb4 <stepper_move>:
static int flag_configured_timer2; //for the timer2 config

//float freq_des_steps; //DEBUG

void stepper_move(stepper_obj *stp, direction_str direction, float position,
		float freq_desired) {
 8000fb4:	b580      	push	{r7, lr}
 8000fb6:	b088      	sub	sp, #32
 8000fb8:	af00      	add	r7, sp, #0
 8000fba:	60f8      	str	r0, [r7, #12]
 8000fbc:	460b      	mov	r3, r1
 8000fbe:	ed87 0a01 	vstr	s0, [r7, #4]
 8000fc2:	edc7 0a00 	vstr	s1, [r7]
 8000fc6:	72fb      	strb	r3, [r7, #11]

	int arr_des;
	float freq_des_steps;
	int i = 0;
 8000fc8:	2300      	movs	r3, #0
 8000fca:	61fb      	str	r3, [r7, #28]
	int n_steps = stp->step_scale * position / 360.0f; //[n_steps]
 8000fcc:	68fb      	ldr	r3, [r7, #12]
 8000fce:	ed93 7a07 	vldr	s14, [r3, #28]
 8000fd2:	edd7 7a01 	vldr	s15, [r7, #4]
 8000fd6:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000fda:	eddf 6a6d 	vldr	s13, [pc, #436]	@ 8001190 <stepper_move+0x1dc>
 8000fde:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000fe2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000fe6:	ee17 3a90 	vmov	r3, s15
 8000fea:	61bb      	str	r3, [r7, #24]

	freq_des_steps = stp->step_scale * freq_desired / 360.0f; //[n_steps/s]
 8000fec:	68fb      	ldr	r3, [r7, #12]
 8000fee:	ed93 7a07 	vldr	s14, [r3, #28]
 8000ff2:	edd7 7a00 	vldr	s15, [r7]
 8000ff6:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000ffa:	eddf 6a65 	vldr	s13, [pc, #404]	@ 8001190 <stepper_move+0x1dc>
 8000ffe:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001002:	edc7 7a05 	vstr	s15, [r7, #20]

	arr_des = (HAL_RCC_GetPCLK2Freq() * 2 / freq_des_steps)
 8001006:	f001 fbdb 	bl	80027c0 <HAL_RCC_GetPCLK2Freq>
 800100a:	4603      	mov	r3, r0
 800100c:	005b      	lsls	r3, r3, #1
 800100e:	ee07 3a90 	vmov	s15, r3
 8001012:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8001016:	edd7 7a05 	vldr	s15, [r7, #20]
 800101a:	eec7 6a27 	vdiv.f32	s13, s14, s15
			/ (stp->pwm_timer->Instance->PSC + 1) - 1;
 800101e:	68fb      	ldr	r3, [r7, #12]
 8001020:	681b      	ldr	r3, [r3, #0]
 8001022:	681b      	ldr	r3, [r3, #0]
 8001024:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001026:	3301      	adds	r3, #1
 8001028:	ee07 3a90 	vmov	s15, r3
 800102c:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8001030:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001034:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8001038:	ee77 7ac7 	vsub.f32	s15, s15, s14
	arr_des = (HAL_RCC_GetPCLK2Freq() * 2 / freq_des_steps)
 800103c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001040:	ee17 3a90 	vmov	r3, s15
 8001044:	613b      	str	r3, [r7, #16]

	HAL_GPIO_WritePin(stp->direction_port, stp->direction_pin, direction); //DIRECTION
 8001046:	68fb      	ldr	r3, [r7, #12]
 8001048:	6898      	ldr	r0, [r3, #8]
 800104a:	68fb      	ldr	r3, [r7, #12]
 800104c:	899b      	ldrh	r3, [r3, #12]
 800104e:	7afa      	ldrb	r2, [r7, #11]
 8001050:	4619      	mov	r1, r3
 8001052:	f001 fa77 	bl	8002544 <HAL_GPIO_WritePin>

	if (stp->pwm_timer->Instance != TIM2) {
 8001056:	68fb      	ldr	r3, [r7, #12]
 8001058:	681b      	ldr	r3, [r3, #0]
 800105a:	681b      	ldr	r3, [r3, #0]
 800105c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001060:	d028      	beq.n	80010b4 <stepper_move+0x100>

		//reset_timers(stp);

		__HAL_TIM_SET_AUTORELOAD(stp->position_timer,
 8001062:	68fb      	ldr	r3, [r7, #12]
 8001064:	681b      	ldr	r3, [r3, #0]
 8001066:	681b      	ldr	r3, [r3, #0]
 8001068:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800106a:	3301      	adds	r3, #1
 800106c:	69ba      	ldr	r2, [r7, #24]
 800106e:	fb03 f202 	mul.w	r2, r3, r2
 8001072:	68fb      	ldr	r3, [r7, #12]
 8001074:	685b      	ldr	r3, [r3, #4]
 8001076:	681b      	ldr	r3, [r3, #0]
 8001078:	3a01      	subs	r2, #1
 800107a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800107c:	68fb      	ldr	r3, [r7, #12]
 800107e:	681b      	ldr	r3, [r3, #0]
 8001080:	681b      	ldr	r3, [r3, #0]
 8001082:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001084:	3301      	adds	r3, #1
 8001086:	69ba      	ldr	r2, [r7, #24]
 8001088:	fb03 f202 	mul.w	r2, r3, r2
 800108c:	68fb      	ldr	r3, [r7, #12]
 800108e:	685b      	ldr	r3, [r3, #4]
 8001090:	3a01      	subs	r2, #1
 8001092:	60da      	str	r2, [r3, #12]
				(n_steps * (stp->pwm_timer->Instance->PSC + 1)) - 1);
		__HAL_TIM_SET_COMPARE(stp->pwm_timer, TIM_CHANNEL_1,
 8001094:	68fb      	ldr	r3, [r7, #12]
 8001096:	681b      	ldr	r3, [r3, #0]
 8001098:	681b      	ldr	r3, [r3, #0]
 800109a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800109c:	68fb      	ldr	r3, [r7, #12]
 800109e:	681b      	ldr	r3, [r3, #0]
 80010a0:	681b      	ldr	r3, [r3, #0]
 80010a2:	0852      	lsrs	r2, r2, #1
 80010a4:	635a      	str	r2, [r3, #52]	@ 0x34
				__HAL_TIM_GET_AUTORELOAD(stp->pwm_timer)/2);

		HAL_TIM_PWM_Start_IT(stp->pwm_timer, TIM_CHANNEL_1); //START PWM
 80010a6:	68fb      	ldr	r3, [r7, #12]
 80010a8:	681b      	ldr	r3, [r3, #0]
 80010aa:	2100      	movs	r1, #0
 80010ac:	4618      	mov	r0, r3
 80010ae:	f002 fa43 	bl	8003538 <HAL_TIM_PWM_Start_IT>
 80010b2:	e041      	b.n	8001138 <stepper_move+0x184>

	} else { //set parameters for the timer2 separately cause it has 2 channel
		if (flag_configured_timer2 != 1) { //this cause the second stepper must be equal to the first one
 80010b4:	4b37      	ldr	r3, [pc, #220]	@ (8001194 <stepper_move+0x1e0>)
 80010b6:	681b      	ldr	r3, [r3, #0]
 80010b8:	2b01      	cmp	r3, #1
 80010ba:	d02b      	beq.n	8001114 <stepper_move+0x160>

			//reset_timers(stp);
			__HAL_TIM_SET_AUTORELOAD(stp->position_timer,
 80010bc:	68fb      	ldr	r3, [r7, #12]
 80010be:	681b      	ldr	r3, [r3, #0]
 80010c0:	681b      	ldr	r3, [r3, #0]
 80010c2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80010c4:	3301      	adds	r3, #1
 80010c6:	69ba      	ldr	r2, [r7, #24]
 80010c8:	fb03 f202 	mul.w	r2, r3, r2
 80010cc:	68fb      	ldr	r3, [r7, #12]
 80010ce:	685b      	ldr	r3, [r3, #4]
 80010d0:	681b      	ldr	r3, [r3, #0]
 80010d2:	3a01      	subs	r2, #1
 80010d4:	62da      	str	r2, [r3, #44]	@ 0x2c
 80010d6:	68fb      	ldr	r3, [r7, #12]
 80010d8:	681b      	ldr	r3, [r3, #0]
 80010da:	681b      	ldr	r3, [r3, #0]
 80010dc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80010de:	3301      	adds	r3, #1
 80010e0:	69ba      	ldr	r2, [r7, #24]
 80010e2:	fb03 f202 	mul.w	r2, r3, r2
 80010e6:	68fb      	ldr	r3, [r7, #12]
 80010e8:	685b      	ldr	r3, [r3, #4]
 80010ea:	3a01      	subs	r2, #1
 80010ec:	60da      	str	r2, [r3, #12]
					(n_steps * (stp->pwm_timer->Instance->PSC + 1)) - 1);
			__HAL_TIM_SET_COMPARE(stp->pwm_timer, TIM_CHANNEL_1,
 80010ee:	68fb      	ldr	r3, [r7, #12]
 80010f0:	681b      	ldr	r3, [r3, #0]
 80010f2:	681b      	ldr	r3, [r3, #0]
 80010f4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80010f6:	68fb      	ldr	r3, [r7, #12]
 80010f8:	681b      	ldr	r3, [r3, #0]
 80010fa:	681b      	ldr	r3, [r3, #0]
 80010fc:	0852      	lsrs	r2, r2, #1
 80010fe:	635a      	str	r2, [r3, #52]	@ 0x34
					__HAL_TIM_GET_AUTORELOAD(stp->pwm_timer)/2);

			__HAL_TIM_SET_COMPARE(stp->pwm_timer, TIM_CHANNEL_2,
 8001100:	68fb      	ldr	r3, [r7, #12]
 8001102:	681b      	ldr	r3, [r3, #0]
 8001104:	681b      	ldr	r3, [r3, #0]
 8001106:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8001108:	68fb      	ldr	r3, [r7, #12]
 800110a:	681b      	ldr	r3, [r3, #0]
 800110c:	681b      	ldr	r3, [r3, #0]
 800110e:	0852      	lsrs	r2, r2, #1
 8001110:	639a      	str	r2, [r3, #56]	@ 0x38
 8001112:	e00b      	b.n	800112c <stepper_move+0x178>
					__HAL_TIM_GET_AUTORELOAD(stp->pwm_timer)/2);

		} else {
			HAL_TIM_PWM_Start_IT(stp->pwm_timer, TIM_CHANNEL_1); //START PWM
 8001114:	68fb      	ldr	r3, [r7, #12]
 8001116:	681b      	ldr	r3, [r3, #0]
 8001118:	2100      	movs	r1, #0
 800111a:	4618      	mov	r0, r3
 800111c:	f002 fa0c 	bl	8003538 <HAL_TIM_PWM_Start_IT>
			HAL_TIM_PWM_Start_IT(stp->pwm_timer, TIM_CHANNEL_2); //START PWM)
 8001120:	68fb      	ldr	r3, [r7, #12]
 8001122:	681b      	ldr	r3, [r3, #0]
 8001124:	2104      	movs	r1, #4
 8001126:	4618      	mov	r0, r3
 8001128:	f002 fa06 	bl	8003538 <HAL_TIM_PWM_Start_IT>

		}
		flag_configured_timer2 ^= 1;
 800112c:	4b19      	ldr	r3, [pc, #100]	@ (8001194 <stepper_move+0x1e0>)
 800112e:	681b      	ldr	r3, [r3, #0]
 8001130:	f083 0301 	eor.w	r3, r3, #1
 8001134:	4a17      	ldr	r2, [pc, #92]	@ (8001194 <stepper_move+0x1e0>)
 8001136:	6013      	str	r3, [r2, #0]

	}
	n_steps = n_steps * (stp->pwm_timer->Instance->PSC + 1); //update the var and bring the value outside
 8001138:	68fb      	ldr	r3, [r7, #12]
 800113a:	681b      	ldr	r3, [r3, #0]
 800113c:	681b      	ldr	r3, [r3, #0]
 800113e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001140:	3301      	adds	r3, #1
 8001142:	69ba      	ldr	r2, [r7, #24]
 8001144:	fb02 f303 	mul.w	r3, r2, r3
 8001148:	61bb      	str	r3, [r7, #24]

	if (stp->pwm_timer->Instance == TIM1) {
 800114a:	68fb      	ldr	r3, [r7, #12]
 800114c:	681b      	ldr	r3, [r3, #0]
 800114e:	681b      	ldr	r3, [r3, #0]
 8001150:	4a11      	ldr	r2, [pc, #68]	@ (8001198 <stepper_move+0x1e4>)
 8001152:	4293      	cmp	r3, r2
 8001154:	d102      	bne.n	800115c <stepper_move+0x1a8>
		i = 0; //timer joint 1
 8001156:	2300      	movs	r3, #0
 8001158:	61fb      	str	r3, [r7, #28]
 800115a:	e00a      	b.n	8001172 <stepper_move+0x1be>
	} else {
		if (stp->pwm_timer->Instance == TIM2) {
 800115c:	68fb      	ldr	r3, [r7, #12]
 800115e:	681b      	ldr	r3, [r3, #0]
 8001160:	681b      	ldr	r3, [r3, #0]
 8001162:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001166:	d102      	bne.n	800116e <stepper_move+0x1ba>
			i = 1; //timer joint 2
 8001168:	2301      	movs	r3, #1
 800116a:	61fb      	str	r3, [r7, #28]
 800116c:	e001      	b.n	8001172 <stepper_move+0x1be>
		} else
			i = 2; //timer joint 3
 800116e:	2302      	movs	r3, #2
 8001170:	61fb      	str	r3, [r7, #28]
	}
	n_steps_a[i] = n_steps;
 8001172:	490a      	ldr	r1, [pc, #40]	@ (800119c <stepper_move+0x1e8>)
 8001174:	69fb      	ldr	r3, [r7, #28]
 8001176:	69ba      	ldr	r2, [r7, #24]
 8001178:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	arr_des_a[i] = arr_des;
 800117c:	4908      	ldr	r1, [pc, #32]	@ (80011a0 <stepper_move+0x1ec>)
 800117e:	69fb      	ldr	r3, [r7, #28]
 8001180:	693a      	ldr	r2, [r7, #16]
 8001182:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

}
 8001186:	bf00      	nop
 8001188:	3720      	adds	r7, #32
 800118a:	46bd      	mov	sp, r7
 800118c:	bd80      	pop	{r7, pc}
 800118e:	bf00      	nop
 8001190:	43b40000 	.word	0x43b40000
 8001194:	20000118 	.word	0x20000118
 8001198:	40010000 	.word	0x40010000
 800119c:	20000100 	.word	0x20000100
 80011a0:	2000010c 	.word	0x2000010c

080011a4 <HAL_MspInit>:
 80011a4:	b580      	push	{r7, lr}
 80011a6:	b082      	sub	sp, #8
 80011a8:	af00      	add	r7, sp, #0
 80011aa:	2300      	movs	r3, #0
 80011ac:	607b      	str	r3, [r7, #4]
 80011ae:	4b10      	ldr	r3, [pc, #64]	@ (80011f0 <HAL_MspInit+0x4c>)
 80011b0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80011b2:	4a0f      	ldr	r2, [pc, #60]	@ (80011f0 <HAL_MspInit+0x4c>)
 80011b4:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80011b8:	6453      	str	r3, [r2, #68]	@ 0x44
 80011ba:	4b0d      	ldr	r3, [pc, #52]	@ (80011f0 <HAL_MspInit+0x4c>)
 80011bc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80011be:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80011c2:	607b      	str	r3, [r7, #4]
 80011c4:	687b      	ldr	r3, [r7, #4]
 80011c6:	2300      	movs	r3, #0
 80011c8:	603b      	str	r3, [r7, #0]
 80011ca:	4b09      	ldr	r3, [pc, #36]	@ (80011f0 <HAL_MspInit+0x4c>)
 80011cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80011ce:	4a08      	ldr	r2, [pc, #32]	@ (80011f0 <HAL_MspInit+0x4c>)
 80011d0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80011d4:	6413      	str	r3, [r2, #64]	@ 0x40
 80011d6:	4b06      	ldr	r3, [pc, #24]	@ (80011f0 <HAL_MspInit+0x4c>)
 80011d8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80011da:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80011de:	603b      	str	r3, [r7, #0]
 80011e0:	683b      	ldr	r3, [r7, #0]
 80011e2:	2006      	movs	r0, #6
 80011e4:	f000 ffd8 	bl	8002198 <HAL_NVIC_SetPriorityGrouping>
 80011e8:	bf00      	nop
 80011ea:	3708      	adds	r7, #8
 80011ec:	46bd      	mov	sp, r7
 80011ee:	bd80      	pop	{r7, pc}
 80011f0:	40023800 	.word	0x40023800

080011f4 <NMI_Handler>:
 80011f4:	b480      	push	{r7}
 80011f6:	af00      	add	r7, sp, #0
 80011f8:	bf00      	nop
 80011fa:	e7fd      	b.n	80011f8 <NMI_Handler+0x4>

080011fc <HardFault_Handler>:
 80011fc:	b480      	push	{r7}
 80011fe:	af00      	add	r7, sp, #0
 8001200:	bf00      	nop
 8001202:	e7fd      	b.n	8001200 <HardFault_Handler+0x4>

08001204 <MemManage_Handler>:
 8001204:	b480      	push	{r7}
 8001206:	af00      	add	r7, sp, #0
 8001208:	bf00      	nop
 800120a:	e7fd      	b.n	8001208 <MemManage_Handler+0x4>

0800120c <BusFault_Handler>:
 800120c:	b480      	push	{r7}
 800120e:	af00      	add	r7, sp, #0
 8001210:	bf00      	nop
 8001212:	e7fd      	b.n	8001210 <BusFault_Handler+0x4>

08001214 <UsageFault_Handler>:
 8001214:	b480      	push	{r7}
 8001216:	af00      	add	r7, sp, #0
 8001218:	bf00      	nop
 800121a:	e7fd      	b.n	8001218 <UsageFault_Handler+0x4>

0800121c <SVC_Handler>:
 800121c:	b480      	push	{r7}
 800121e:	af00      	add	r7, sp, #0
 8001220:	bf00      	nop
 8001222:	46bd      	mov	sp, r7
 8001224:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001228:	4770      	bx	lr

0800122a <DebugMon_Handler>:
 800122a:	b480      	push	{r7}
 800122c:	af00      	add	r7, sp, #0
 800122e:	bf00      	nop
 8001230:	46bd      	mov	sp, r7
 8001232:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001236:	4770      	bx	lr

08001238 <PendSV_Handler>:
 8001238:	b480      	push	{r7}
 800123a:	af00      	add	r7, sp, #0
 800123c:	bf00      	nop
 800123e:	46bd      	mov	sp, r7
 8001240:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001244:	4770      	bx	lr

08001246 <SysTick_Handler>:
 8001246:	b580      	push	{r7, lr}
 8001248:	af00      	add	r7, sp, #0
 800124a:	f000 fe91 	bl	8001f70 <HAL_IncTick>
 800124e:	bf00      	nop
 8001250:	bd80      	pop	{r7, pc}
	...

08001254 <TIM1_CC_IRQHandler>:
 8001254:	b580      	push	{r7, lr}
 8001256:	af00      	add	r7, sp, #0
 8001258:	4802      	ldr	r0, [pc, #8]	@ (8001264 <TIM1_CC_IRQHandler+0x10>)
 800125a:	f002 fb41 	bl	80038e0 <HAL_TIM_IRQHandler>
 800125e:	bf00      	nop
 8001260:	bd80      	pop	{r7, pc}
 8001262:	bf00      	nop
 8001264:	2000011c 	.word	0x2000011c

08001268 <TIM2_IRQHandler>:
 8001268:	b580      	push	{r7, lr}
 800126a:	af00      	add	r7, sp, #0
 800126c:	4802      	ldr	r0, [pc, #8]	@ (8001278 <TIM2_IRQHandler+0x10>)
 800126e:	f002 fb37 	bl	80038e0 <HAL_TIM_IRQHandler>
 8001272:	bf00      	nop
 8001274:	bd80      	pop	{r7, pc}
 8001276:	bf00      	nop
 8001278:	20000164 	.word	0x20000164

0800127c <EXTI15_10_IRQHandler>:
 800127c:	b580      	push	{r7, lr}
 800127e:	af00      	add	r7, sp, #0
 8001280:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 8001284:	f001 f992 	bl	80025ac <HAL_GPIO_EXTI_IRQHandler>
 8001288:	bf00      	nop
 800128a:	bd80      	pop	{r7, pc}

0800128c <TIM8_BRK_TIM12_IRQHandler>:
 800128c:	b580      	push	{r7, lr}
 800128e:	af00      	add	r7, sp, #0
 8001290:	4802      	ldr	r0, [pc, #8]	@ (800129c <TIM8_BRK_TIM12_IRQHandler+0x10>)
 8001292:	f002 fb25 	bl	80038e0 <HAL_TIM_IRQHandler>
 8001296:	bf00      	nop
 8001298:	bd80      	pop	{r7, pc}
 800129a:	bf00      	nop
 800129c:	200002cc 	.word	0x200002cc

080012a0 <TIM8_UP_TIM13_IRQHandler>:
 80012a0:	b580      	push	{r7, lr}
 80012a2:	af00      	add	r7, sp, #0
 80012a4:	4802      	ldr	r0, [pc, #8]	@ (80012b0 <TIM8_UP_TIM13_IRQHandler+0x10>)
 80012a6:	f002 fb1b 	bl	80038e0 <HAL_TIM_IRQHandler>
 80012aa:	bf00      	nop
 80012ac:	bd80      	pop	{r7, pc}
 80012ae:	bf00      	nop
 80012b0:	200002cc 	.word	0x200002cc

080012b4 <TIM8_TRG_COM_TIM14_IRQHandler>:
 80012b4:	b580      	push	{r7, lr}
 80012b6:	af00      	add	r7, sp, #0
 80012b8:	4802      	ldr	r0, [pc, #8]	@ (80012c4 <TIM8_TRG_COM_TIM14_IRQHandler+0x10>)
 80012ba:	f002 fb11 	bl	80038e0 <HAL_TIM_IRQHandler>
 80012be:	bf00      	nop
 80012c0:	bd80      	pop	{r7, pc}
 80012c2:	bf00      	nop
 80012c4:	200002cc 	.word	0x200002cc

080012c8 <TIM8_CC_IRQHandler>:
 80012c8:	b580      	push	{r7, lr}
 80012ca:	af00      	add	r7, sp, #0
 80012cc:	4802      	ldr	r0, [pc, #8]	@ (80012d8 <TIM8_CC_IRQHandler+0x10>)
 80012ce:	f002 fb07 	bl	80038e0 <HAL_TIM_IRQHandler>
 80012d2:	bf00      	nop
 80012d4:	bd80      	pop	{r7, pc}
 80012d6:	bf00      	nop
 80012d8:	200002cc 	.word	0x200002cc

080012dc <SystemInit>:
 80012dc:	b480      	push	{r7}
 80012de:	af00      	add	r7, sp, #0
 80012e0:	4b06      	ldr	r3, [pc, #24]	@ (80012fc <SystemInit+0x20>)
 80012e2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80012e6:	4a05      	ldr	r2, [pc, #20]	@ (80012fc <SystemInit+0x20>)
 80012e8:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80012ec:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 80012f0:	bf00      	nop
 80012f2:	46bd      	mov	sp, r7
 80012f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012f8:	4770      	bx	lr
 80012fa:	bf00      	nop
 80012fc:	e000ed00 	.word	0xe000ed00

08001300 <MX_TIM1_Init>:
TIM_HandleTypeDef htim8;
TIM_HandleTypeDef htim10;
TIM_HandleTypeDef htim11;

/* TIM1 init function */
void MX_TIM1_Init(void) {
 8001300:	b580      	push	{r7, lr}
 8001302:	b096      	sub	sp, #88	@ 0x58
 8001304:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM1_Init 0 */

	/* USER CODE END TIM1_Init 0 */

	TIM_ClockConfigTypeDef sClockSourceConfig = { 0 };
 8001306:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800130a:	2200      	movs	r2, #0
 800130c:	601a      	str	r2, [r3, #0]
 800130e:	605a      	str	r2, [r3, #4]
 8001310:	609a      	str	r2, [r3, #8]
 8001312:	60da      	str	r2, [r3, #12]
	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 8001314:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8001318:	2200      	movs	r2, #0
 800131a:	601a      	str	r2, [r3, #0]
 800131c:	605a      	str	r2, [r3, #4]
	TIM_OC_InitTypeDef sConfigOC = { 0 };
 800131e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001322:	2200      	movs	r2, #0
 8001324:	601a      	str	r2, [r3, #0]
 8001326:	605a      	str	r2, [r3, #4]
 8001328:	609a      	str	r2, [r3, #8]
 800132a:	60da      	str	r2, [r3, #12]
 800132c:	611a      	str	r2, [r3, #16]
 800132e:	615a      	str	r2, [r3, #20]
 8001330:	619a      	str	r2, [r3, #24]
	TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = { 0 };
 8001332:	1d3b      	adds	r3, r7, #4
 8001334:	2220      	movs	r2, #32
 8001336:	2100      	movs	r1, #0
 8001338:	4618      	mov	r0, r3
 800133a:	f003 fa39 	bl	80047b0 <memset>

	/* USER CODE BEGIN TIM1_Init 1 */

	/* USER CODE END TIM1_Init 1 */
	htim1.Instance = TIM1;
 800133e:	4b3f      	ldr	r3, [pc, #252]	@ (800143c <MX_TIM1_Init+0x13c>)
 8001340:	4a3f      	ldr	r2, [pc, #252]	@ (8001440 <MX_TIM1_Init+0x140>)
 8001342:	601a      	str	r2, [r3, #0]
	htim1.Init.Prescaler = 4;
 8001344:	4b3d      	ldr	r3, [pc, #244]	@ (800143c <MX_TIM1_Init+0x13c>)
 8001346:	2204      	movs	r2, #4
 8001348:	605a      	str	r2, [r3, #4]
	htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 800134a:	4b3c      	ldr	r3, [pc, #240]	@ (800143c <MX_TIM1_Init+0x13c>)
 800134c:	2200      	movs	r2, #0
 800134e:	609a      	str	r2, [r3, #8]
	htim1.Init.Period = 65535;
 8001350:	4b3a      	ldr	r3, [pc, #232]	@ (800143c <MX_TIM1_Init+0x13c>)
 8001352:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001356:	60da      	str	r2, [r3, #12]
	htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001358:	4b38      	ldr	r3, [pc, #224]	@ (800143c <MX_TIM1_Init+0x13c>)
 800135a:	2200      	movs	r2, #0
 800135c:	611a      	str	r2, [r3, #16]
	htim1.Init.RepetitionCounter = 0;
 800135e:	4b37      	ldr	r3, [pc, #220]	@ (800143c <MX_TIM1_Init+0x13c>)
 8001360:	2200      	movs	r2, #0
 8001362:	615a      	str	r2, [r3, #20]
	htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001364:	4b35      	ldr	r3, [pc, #212]	@ (800143c <MX_TIM1_Init+0x13c>)
 8001366:	2280      	movs	r2, #128	@ 0x80
 8001368:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim1) != HAL_OK) {
 800136a:	4834      	ldr	r0, [pc, #208]	@ (800143c <MX_TIM1_Init+0x13c>)
 800136c:	f001 ff0a 	bl	8003184 <HAL_TIM_Base_Init>
 8001370:	4603      	mov	r3, r0
 8001372:	2b00      	cmp	r3, #0
 8001374:	d001      	beq.n	800137a <MX_TIM1_Init+0x7a>
		Error_Handler();
 8001376:	f7ff fd67 	bl	8000e48 <Error_Handler>
	}
	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800137a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800137e:	64bb      	str	r3, [r7, #72]	@ 0x48
	if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK) {
 8001380:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 8001384:	4619      	mov	r1, r3
 8001386:	482d      	ldr	r0, [pc, #180]	@ (800143c <MX_TIM1_Init+0x13c>)
 8001388:	f002 fc5c 	bl	8003c44 <HAL_TIM_ConfigClockSource>
 800138c:	4603      	mov	r3, r0
 800138e:	2b00      	cmp	r3, #0
 8001390:	d001      	beq.n	8001396 <MX_TIM1_Init+0x96>
		Error_Handler();
 8001392:	f7ff fd59 	bl	8000e48 <Error_Handler>
	}
	if (HAL_TIM_PWM_Init(&htim1) != HAL_OK) {
 8001396:	4829      	ldr	r0, [pc, #164]	@ (800143c <MX_TIM1_Init+0x13c>)
 8001398:	f001 ffac 	bl	80032f4 <HAL_TIM_PWM_Init>
 800139c:	4603      	mov	r3, r0
 800139e:	2b00      	cmp	r3, #0
 80013a0:	d001      	beq.n	80013a6 <MX_TIM1_Init+0xa6>
		Error_Handler();
 80013a2:	f7ff fd51 	bl	8000e48 <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 80013a6:	2320      	movs	r3, #32
 80013a8:	643b      	str	r3, [r7, #64]	@ 0x40
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_ENABLE;
 80013aa:	2380      	movs	r3, #128	@ 0x80
 80013ac:	647b      	str	r3, [r7, #68]	@ 0x44
	if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig)
 80013ae:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 80013b2:	4619      	mov	r1, r3
 80013b4:	4821      	ldr	r0, [pc, #132]	@ (800143c <MX_TIM1_Init+0x13c>)
 80013b6:	f003 f919 	bl	80045ec <HAL_TIMEx_MasterConfigSynchronization>
 80013ba:	4603      	mov	r3, r0
 80013bc:	2b00      	cmp	r3, #0
 80013be:	d001      	beq.n	80013c4 <MX_TIM1_Init+0xc4>
			!= HAL_OK) {
		Error_Handler();
 80013c0:	f7ff fd42 	bl	8000e48 <Error_Handler>
	}
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80013c4:	2360      	movs	r3, #96	@ 0x60
 80013c6:	627b      	str	r3, [r7, #36]	@ 0x24
	sConfigOC.Pulse = 32768;
 80013c8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80013cc:	62bb      	str	r3, [r7, #40]	@ 0x28
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80013ce:	2300      	movs	r3, #0
 80013d0:	62fb      	str	r3, [r7, #44]	@ 0x2c
	sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 80013d2:	2300      	movs	r3, #0
 80013d4:	633b      	str	r3, [r7, #48]	@ 0x30
	sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 80013d6:	2304      	movs	r3, #4
 80013d8:	637b      	str	r3, [r7, #52]	@ 0x34
	sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 80013da:	2300      	movs	r3, #0
 80013dc:	63bb      	str	r3, [r7, #56]	@ 0x38
	sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 80013de:	2300      	movs	r3, #0
 80013e0:	63fb      	str	r3, [r7, #60]	@ 0x3c
	if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1)
 80013e2:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80013e6:	2200      	movs	r2, #0
 80013e8:	4619      	mov	r1, r3
 80013ea:	4814      	ldr	r0, [pc, #80]	@ (800143c <MX_TIM1_Init+0x13c>)
 80013ec:	f002 fb68 	bl	8003ac0 <HAL_TIM_PWM_ConfigChannel>
 80013f0:	4603      	mov	r3, r0
 80013f2:	2b00      	cmp	r3, #0
 80013f4:	d001      	beq.n	80013fa <MX_TIM1_Init+0xfa>
			!= HAL_OK) {
		Error_Handler();
 80013f6:	f7ff fd27 	bl	8000e48 <Error_Handler>
	}
	sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 80013fa:	2300      	movs	r3, #0
 80013fc:	607b      	str	r3, [r7, #4]
	sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 80013fe:	2300      	movs	r3, #0
 8001400:	60bb      	str	r3, [r7, #8]
	sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8001402:	2300      	movs	r3, #0
 8001404:	60fb      	str	r3, [r7, #12]
	sBreakDeadTimeConfig.DeadTime = 0;
 8001406:	2300      	movs	r3, #0
 8001408:	613b      	str	r3, [r7, #16]
	sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 800140a:	2300      	movs	r3, #0
 800140c:	617b      	str	r3, [r7, #20]
	sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 800140e:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001412:	61bb      	str	r3, [r7, #24]
	sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8001414:	2300      	movs	r3, #0
 8001416:	623b      	str	r3, [r7, #32]
	if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig)
 8001418:	1d3b      	adds	r3, r7, #4
 800141a:	4619      	mov	r1, r3
 800141c:	4807      	ldr	r0, [pc, #28]	@ (800143c <MX_TIM1_Init+0x13c>)
 800141e:	f003 f961 	bl	80046e4 <HAL_TIMEx_ConfigBreakDeadTime>
 8001422:	4603      	mov	r3, r0
 8001424:	2b00      	cmp	r3, #0
 8001426:	d001      	beq.n	800142c <MX_TIM1_Init+0x12c>
			!= HAL_OK) {
		Error_Handler();
 8001428:	f7ff fd0e 	bl	8000e48 <Error_Handler>
	}
	/* USER CODE BEGIN TIM1_Init 2 */

	/* USER CODE END TIM1_Init 2 */
	HAL_TIM_MspPostInit(&htim1);
 800142c:	4803      	ldr	r0, [pc, #12]	@ (800143c <MX_TIM1_Init+0x13c>)
 800142e:	f000 fc29 	bl	8001c84 <HAL_TIM_MspPostInit>

}
 8001432:	bf00      	nop
 8001434:	3758      	adds	r7, #88	@ 0x58
 8001436:	46bd      	mov	sp, r7
 8001438:	bd80      	pop	{r7, pc}
 800143a:	bf00      	nop
 800143c:	2000011c 	.word	0x2000011c
 8001440:	40010000 	.word	0x40010000

08001444 <MX_TIM2_Init>:
/* TIM2 init function */
void MX_TIM2_Init(void) {
 8001444:	b580      	push	{r7, lr}
 8001446:	b08e      	sub	sp, #56	@ 0x38
 8001448:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM2_Init 0 */

	/* USER CODE END TIM2_Init 0 */

	TIM_ClockConfigTypeDef sClockSourceConfig = { 0 };
 800144a:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800144e:	2200      	movs	r2, #0
 8001450:	601a      	str	r2, [r3, #0]
 8001452:	605a      	str	r2, [r3, #4]
 8001454:	609a      	str	r2, [r3, #8]
 8001456:	60da      	str	r2, [r3, #12]
	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 8001458:	f107 0320 	add.w	r3, r7, #32
 800145c:	2200      	movs	r2, #0
 800145e:	601a      	str	r2, [r3, #0]
 8001460:	605a      	str	r2, [r3, #4]
	TIM_OC_InitTypeDef sConfigOC = { 0 };
 8001462:	1d3b      	adds	r3, r7, #4
 8001464:	2200      	movs	r2, #0
 8001466:	601a      	str	r2, [r3, #0]
 8001468:	605a      	str	r2, [r3, #4]
 800146a:	609a      	str	r2, [r3, #8]
 800146c:	60da      	str	r2, [r3, #12]
 800146e:	611a      	str	r2, [r3, #16]
 8001470:	615a      	str	r2, [r3, #20]
 8001472:	619a      	str	r2, [r3, #24]

	/* USER CODE BEGIN TIM2_Init 1 */

	/* USER CODE END TIM2_Init 1 */
	htim2.Instance = TIM2;
 8001474:	4b33      	ldr	r3, [pc, #204]	@ (8001544 <MX_TIM2_Init+0x100>)
 8001476:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800147a:	601a      	str	r2, [r3, #0]
	htim2.Init.Prescaler = 4;
 800147c:	4b31      	ldr	r3, [pc, #196]	@ (8001544 <MX_TIM2_Init+0x100>)
 800147e:	2204      	movs	r2, #4
 8001480:	605a      	str	r2, [r3, #4]
	htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001482:	4b30      	ldr	r3, [pc, #192]	@ (8001544 <MX_TIM2_Init+0x100>)
 8001484:	2200      	movs	r2, #0
 8001486:	609a      	str	r2, [r3, #8]
	htim2.Init.Period = 65535;
 8001488:	4b2e      	ldr	r3, [pc, #184]	@ (8001544 <MX_TIM2_Init+0x100>)
 800148a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800148e:	60da      	str	r2, [r3, #12]
	htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001490:	4b2c      	ldr	r3, [pc, #176]	@ (8001544 <MX_TIM2_Init+0x100>)
 8001492:	2200      	movs	r2, #0
 8001494:	611a      	str	r2, [r3, #16]
	htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001496:	4b2b      	ldr	r3, [pc, #172]	@ (8001544 <MX_TIM2_Init+0x100>)
 8001498:	2280      	movs	r2, #128	@ 0x80
 800149a:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim2) != HAL_OK) {
 800149c:	4829      	ldr	r0, [pc, #164]	@ (8001544 <MX_TIM2_Init+0x100>)
 800149e:	f001 fe71 	bl	8003184 <HAL_TIM_Base_Init>
 80014a2:	4603      	mov	r3, r0
 80014a4:	2b00      	cmp	r3, #0
 80014a6:	d001      	beq.n	80014ac <MX_TIM2_Init+0x68>
		Error_Handler();
 80014a8:	f7ff fcce 	bl	8000e48 <Error_Handler>
	}
	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80014ac:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80014b0:	62bb      	str	r3, [r7, #40]	@ 0x28
	if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK) {
 80014b2:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80014b6:	4619      	mov	r1, r3
 80014b8:	4822      	ldr	r0, [pc, #136]	@ (8001544 <MX_TIM2_Init+0x100>)
 80014ba:	f002 fbc3 	bl	8003c44 <HAL_TIM_ConfigClockSource>
 80014be:	4603      	mov	r3, r0
 80014c0:	2b00      	cmp	r3, #0
 80014c2:	d001      	beq.n	80014c8 <MX_TIM2_Init+0x84>
		Error_Handler();
 80014c4:	f7ff fcc0 	bl	8000e48 <Error_Handler>
	}
	if (HAL_TIM_PWM_Init(&htim2) != HAL_OK) {
 80014c8:	481e      	ldr	r0, [pc, #120]	@ (8001544 <MX_TIM2_Init+0x100>)
 80014ca:	f001 ff13 	bl	80032f4 <HAL_TIM_PWM_Init>
 80014ce:	4603      	mov	r3, r0
 80014d0:	2b00      	cmp	r3, #0
 80014d2:	d001      	beq.n	80014d8 <MX_TIM2_Init+0x94>
		Error_Handler();
 80014d4:	f7ff fcb8 	bl	8000e48 <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 80014d8:	2320      	movs	r3, #32
 80014da:	623b      	str	r3, [r7, #32]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_ENABLE;
 80014dc:	2380      	movs	r3, #128	@ 0x80
 80014de:	627b      	str	r3, [r7, #36]	@ 0x24
	if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig)
 80014e0:	f107 0320 	add.w	r3, r7, #32
 80014e4:	4619      	mov	r1, r3
 80014e6:	4817      	ldr	r0, [pc, #92]	@ (8001544 <MX_TIM2_Init+0x100>)
 80014e8:	f003 f880 	bl	80045ec <HAL_TIMEx_MasterConfigSynchronization>
 80014ec:	4603      	mov	r3, r0
 80014ee:	2b00      	cmp	r3, #0
 80014f0:	d001      	beq.n	80014f6 <MX_TIM2_Init+0xb2>
			!= HAL_OK) {
		Error_Handler();
 80014f2:	f7ff fca9 	bl	8000e48 <Error_Handler>
	}
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80014f6:	2360      	movs	r3, #96	@ 0x60
 80014f8:	607b      	str	r3, [r7, #4]
	sConfigOC.Pulse = 32768;
 80014fa:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80014fe:	60bb      	str	r3, [r7, #8]
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001500:	2300      	movs	r3, #0
 8001502:	60fb      	str	r3, [r7, #12]
	sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 8001504:	2304      	movs	r3, #4
 8001506:	617b      	str	r3, [r7, #20]
	if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1)
 8001508:	1d3b      	adds	r3, r7, #4
 800150a:	2200      	movs	r2, #0
 800150c:	4619      	mov	r1, r3
 800150e:	480d      	ldr	r0, [pc, #52]	@ (8001544 <MX_TIM2_Init+0x100>)
 8001510:	f002 fad6 	bl	8003ac0 <HAL_TIM_PWM_ConfigChannel>
 8001514:	4603      	mov	r3, r0
 8001516:	2b00      	cmp	r3, #0
 8001518:	d001      	beq.n	800151e <MX_TIM2_Init+0xda>
			!= HAL_OK) {
		Error_Handler();
 800151a:	f7ff fc95 	bl	8000e48 <Error_Handler>
	}
	if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2)
 800151e:	1d3b      	adds	r3, r7, #4
 8001520:	2204      	movs	r2, #4
 8001522:	4619      	mov	r1, r3
 8001524:	4807      	ldr	r0, [pc, #28]	@ (8001544 <MX_TIM2_Init+0x100>)
 8001526:	f002 facb 	bl	8003ac0 <HAL_TIM_PWM_ConfigChannel>
 800152a:	4603      	mov	r3, r0
 800152c:	2b00      	cmp	r3, #0
 800152e:	d001      	beq.n	8001534 <MX_TIM2_Init+0xf0>
			!= HAL_OK) {
		Error_Handler();
 8001530:	f7ff fc8a 	bl	8000e48 <Error_Handler>
	}
	/* USER CODE BEGIN TIM2_Init 2 */

	/* USER CODE END TIM2_Init 2 */
	HAL_TIM_MspPostInit(&htim2);
 8001534:	4803      	ldr	r0, [pc, #12]	@ (8001544 <MX_TIM2_Init+0x100>)
 8001536:	f000 fba5 	bl	8001c84 <HAL_TIM_MspPostInit>

}
 800153a:	bf00      	nop
 800153c:	3738      	adds	r7, #56	@ 0x38
 800153e:	46bd      	mov	sp, r7
 8001540:	bd80      	pop	{r7, pc}
 8001542:	bf00      	nop
 8001544:	20000164 	.word	0x20000164

08001548 <MX_TIM3_Init>:
/* TIM3 init function */
void MX_TIM3_Init(void) {
 8001548:	b580      	push	{r7, lr}
 800154a:	b08c      	sub	sp, #48	@ 0x30
 800154c:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM3_Init 0 */

	/* USER CODE END TIM3_Init 0 */

	TIM_ClockConfigTypeDef sClockSourceConfig = { 0 };
 800154e:	f107 0320 	add.w	r3, r7, #32
 8001552:	2200      	movs	r2, #0
 8001554:	601a      	str	r2, [r3, #0]
 8001556:	605a      	str	r2, [r3, #4]
 8001558:	609a      	str	r2, [r3, #8]
 800155a:	60da      	str	r2, [r3, #12]
	TIM_SlaveConfigTypeDef sSlaveConfig = { 0 };
 800155c:	f107 030c 	add.w	r3, r7, #12
 8001560:	2200      	movs	r2, #0
 8001562:	601a      	str	r2, [r3, #0]
 8001564:	605a      	str	r2, [r3, #4]
 8001566:	609a      	str	r2, [r3, #8]
 8001568:	60da      	str	r2, [r3, #12]
 800156a:	611a      	str	r2, [r3, #16]
	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 800156c:	1d3b      	adds	r3, r7, #4
 800156e:	2200      	movs	r2, #0
 8001570:	601a      	str	r2, [r3, #0]
 8001572:	605a      	str	r2, [r3, #4]

	/* USER CODE BEGIN TIM3_Init 1 */

	/* USER CODE END TIM3_Init 1 */
	htim3.Instance = TIM3;
 8001574:	4b24      	ldr	r3, [pc, #144]	@ (8001608 <MX_TIM3_Init+0xc0>)
 8001576:	4a25      	ldr	r2, [pc, #148]	@ (800160c <MX_TIM3_Init+0xc4>)
 8001578:	601a      	str	r2, [r3, #0]
	htim3.Init.Prescaler = 65535;
 800157a:	4b23      	ldr	r3, [pc, #140]	@ (8001608 <MX_TIM3_Init+0xc0>)
 800157c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001580:	605a      	str	r2, [r3, #4]
	htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001582:	4b21      	ldr	r3, [pc, #132]	@ (8001608 <MX_TIM3_Init+0xc0>)
 8001584:	2200      	movs	r2, #0
 8001586:	609a      	str	r2, [r3, #8]
	htim3.Init.Period = 199;
 8001588:	4b1f      	ldr	r3, [pc, #124]	@ (8001608 <MX_TIM3_Init+0xc0>)
 800158a:	22c7      	movs	r2, #199	@ 0xc7
 800158c:	60da      	str	r2, [r3, #12]
	htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800158e:	4b1e      	ldr	r3, [pc, #120]	@ (8001608 <MX_TIM3_Init+0xc0>)
 8001590:	2200      	movs	r2, #0
 8001592:	611a      	str	r2, [r3, #16]
	htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001594:	4b1c      	ldr	r3, [pc, #112]	@ (8001608 <MX_TIM3_Init+0xc0>)
 8001596:	2280      	movs	r2, #128	@ 0x80
 8001598:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim3) != HAL_OK) {
 800159a:	481b      	ldr	r0, [pc, #108]	@ (8001608 <MX_TIM3_Init+0xc0>)
 800159c:	f001 fdf2 	bl	8003184 <HAL_TIM_Base_Init>
 80015a0:	4603      	mov	r3, r0
 80015a2:	2b00      	cmp	r3, #0
 80015a4:	d001      	beq.n	80015aa <MX_TIM3_Init+0x62>
		Error_Handler();
 80015a6:	f7ff fc4f 	bl	8000e48 <Error_Handler>
	}
	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80015aa:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80015ae:	623b      	str	r3, [r7, #32]
	if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK) {
 80015b0:	f107 0320 	add.w	r3, r7, #32
 80015b4:	4619      	mov	r1, r3
 80015b6:	4814      	ldr	r0, [pc, #80]	@ (8001608 <MX_TIM3_Init+0xc0>)
 80015b8:	f002 fb44 	bl	8003c44 <HAL_TIM_ConfigClockSource>
 80015bc:	4603      	mov	r3, r0
 80015be:	2b00      	cmp	r3, #0
 80015c0:	d001      	beq.n	80015c6 <MX_TIM3_Init+0x7e>
		Error_Handler();
 80015c2:	f7ff fc41 	bl	8000e48 <Error_Handler>
	}
	sSlaveConfig.SlaveMode = TIM_SLAVEMODE_TRIGGER;
 80015c6:	2306      	movs	r3, #6
 80015c8:	60fb      	str	r3, [r7, #12]
	sSlaveConfig.InputTrigger = TIM_TS_ITR1;
 80015ca:	2310      	movs	r3, #16
 80015cc:	613b      	str	r3, [r7, #16]
	if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK) {
 80015ce:	f107 030c 	add.w	r3, r7, #12
 80015d2:	4619      	mov	r1, r3
 80015d4:	480c      	ldr	r0, [pc, #48]	@ (8001608 <MX_TIM3_Init+0xc0>)
 80015d6:	f002 fbfc 	bl	8003dd2 <HAL_TIM_SlaveConfigSynchro>
 80015da:	4603      	mov	r3, r0
 80015dc:	2b00      	cmp	r3, #0
 80015de:	d001      	beq.n	80015e4 <MX_TIM3_Init+0x9c>
		Error_Handler();
 80015e0:	f7ff fc32 	bl	8000e48 <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80015e4:	2300      	movs	r3, #0
 80015e6:	607b      	str	r3, [r7, #4]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80015e8:	2300      	movs	r3, #0
 80015ea:	60bb      	str	r3, [r7, #8]
	if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig)
 80015ec:	1d3b      	adds	r3, r7, #4
 80015ee:	4619      	mov	r1, r3
 80015f0:	4805      	ldr	r0, [pc, #20]	@ (8001608 <MX_TIM3_Init+0xc0>)
 80015f2:	f002 fffb 	bl	80045ec <HAL_TIMEx_MasterConfigSynchronization>
 80015f6:	4603      	mov	r3, r0
 80015f8:	2b00      	cmp	r3, #0
 80015fa:	d001      	beq.n	8001600 <MX_TIM3_Init+0xb8>
			!= HAL_OK) {
		Error_Handler();
 80015fc:	f7ff fc24 	bl	8000e48 <Error_Handler>
	}
	/* USER CODE BEGIN TIM3_Init 2 */

	/* USER CODE END TIM3_Init 2 */

}
 8001600:	bf00      	nop
 8001602:	3730      	adds	r7, #48	@ 0x30
 8001604:	46bd      	mov	sp, r7
 8001606:	bd80      	pop	{r7, pc}
 8001608:	200001ac 	.word	0x200001ac
 800160c:	40000400 	.word	0x40000400

08001610 <MX_TIM4_Init>:
/* TIM4 init function */
void MX_TIM4_Init(void) {
 8001610:	b580      	push	{r7, lr}
 8001612:	b08c      	sub	sp, #48	@ 0x30
 8001614:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM4_Init 0 */

	/* USER CODE END TIM4_Init 0 */

	TIM_ClockConfigTypeDef sClockSourceConfig = { 0 };
 8001616:	f107 0320 	add.w	r3, r7, #32
 800161a:	2200      	movs	r2, #0
 800161c:	601a      	str	r2, [r3, #0]
 800161e:	605a      	str	r2, [r3, #4]
 8001620:	609a      	str	r2, [r3, #8]
 8001622:	60da      	str	r2, [r3, #12]
	TIM_SlaveConfigTypeDef sSlaveConfig = { 0 };
 8001624:	f107 030c 	add.w	r3, r7, #12
 8001628:	2200      	movs	r2, #0
 800162a:	601a      	str	r2, [r3, #0]
 800162c:	605a      	str	r2, [r3, #4]
 800162e:	609a      	str	r2, [r3, #8]
 8001630:	60da      	str	r2, [r3, #12]
 8001632:	611a      	str	r2, [r3, #16]
	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 8001634:	1d3b      	adds	r3, r7, #4
 8001636:	2200      	movs	r2, #0
 8001638:	601a      	str	r2, [r3, #0]
 800163a:	605a      	str	r2, [r3, #4]

	/* USER CODE BEGIN TIM4_Init 1 */

	/* USER CODE END TIM4_Init 1 */
	htim4.Instance = TIM4;
 800163c:	4b24      	ldr	r3, [pc, #144]	@ (80016d0 <MX_TIM4_Init+0xc0>)
 800163e:	4a25      	ldr	r2, [pc, #148]	@ (80016d4 <MX_TIM4_Init+0xc4>)
 8001640:	601a      	str	r2, [r3, #0]
	htim4.Init.Prescaler = 65535;
 8001642:	4b23      	ldr	r3, [pc, #140]	@ (80016d0 <MX_TIM4_Init+0xc0>)
 8001644:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001648:	605a      	str	r2, [r3, #4]
	htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 800164a:	4b21      	ldr	r3, [pc, #132]	@ (80016d0 <MX_TIM4_Init+0xc0>)
 800164c:	2200      	movs	r2, #0
 800164e:	609a      	str	r2, [r3, #8]
	htim4.Init.Period = 199;
 8001650:	4b1f      	ldr	r3, [pc, #124]	@ (80016d0 <MX_TIM4_Init+0xc0>)
 8001652:	22c7      	movs	r2, #199	@ 0xc7
 8001654:	60da      	str	r2, [r3, #12]
	htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001656:	4b1e      	ldr	r3, [pc, #120]	@ (80016d0 <MX_TIM4_Init+0xc0>)
 8001658:	2200      	movs	r2, #0
 800165a:	611a      	str	r2, [r3, #16]
	htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800165c:	4b1c      	ldr	r3, [pc, #112]	@ (80016d0 <MX_TIM4_Init+0xc0>)
 800165e:	2280      	movs	r2, #128	@ 0x80
 8001660:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim4) != HAL_OK) {
 8001662:	481b      	ldr	r0, [pc, #108]	@ (80016d0 <MX_TIM4_Init+0xc0>)
 8001664:	f001 fd8e 	bl	8003184 <HAL_TIM_Base_Init>
 8001668:	4603      	mov	r3, r0
 800166a:	2b00      	cmp	r3, #0
 800166c:	d001      	beq.n	8001672 <MX_TIM4_Init+0x62>
		Error_Handler();
 800166e:	f7ff fbeb 	bl	8000e48 <Error_Handler>
	}
	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001672:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001676:	623b      	str	r3, [r7, #32]
	if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK) {
 8001678:	f107 0320 	add.w	r3, r7, #32
 800167c:	4619      	mov	r1, r3
 800167e:	4814      	ldr	r0, [pc, #80]	@ (80016d0 <MX_TIM4_Init+0xc0>)
 8001680:	f002 fae0 	bl	8003c44 <HAL_TIM_ConfigClockSource>
 8001684:	4603      	mov	r3, r0
 8001686:	2b00      	cmp	r3, #0
 8001688:	d001      	beq.n	800168e <MX_TIM4_Init+0x7e>
		Error_Handler();
 800168a:	f7ff fbdd 	bl	8000e48 <Error_Handler>
	}
	sSlaveConfig.SlaveMode = TIM_SLAVEMODE_TRIGGER;
 800168e:	2306      	movs	r3, #6
 8001690:	60fb      	str	r3, [r7, #12]
	sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8001692:	2300      	movs	r3, #0
 8001694:	613b      	str	r3, [r7, #16]
	if (HAL_TIM_SlaveConfigSynchro(&htim4, &sSlaveConfig) != HAL_OK) {
 8001696:	f107 030c 	add.w	r3, r7, #12
 800169a:	4619      	mov	r1, r3
 800169c:	480c      	ldr	r0, [pc, #48]	@ (80016d0 <MX_TIM4_Init+0xc0>)
 800169e:	f002 fb98 	bl	8003dd2 <HAL_TIM_SlaveConfigSynchro>
 80016a2:	4603      	mov	r3, r0
 80016a4:	2b00      	cmp	r3, #0
 80016a6:	d001      	beq.n	80016ac <MX_TIM4_Init+0x9c>
		Error_Handler();
 80016a8:	f7ff fbce 	bl	8000e48 <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80016ac:	2300      	movs	r3, #0
 80016ae:	607b      	str	r3, [r7, #4]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80016b0:	2300      	movs	r3, #0
 80016b2:	60bb      	str	r3, [r7, #8]
	if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig)
 80016b4:	1d3b      	adds	r3, r7, #4
 80016b6:	4619      	mov	r1, r3
 80016b8:	4805      	ldr	r0, [pc, #20]	@ (80016d0 <MX_TIM4_Init+0xc0>)
 80016ba:	f002 ff97 	bl	80045ec <HAL_TIMEx_MasterConfigSynchronization>
 80016be:	4603      	mov	r3, r0
 80016c0:	2b00      	cmp	r3, #0
 80016c2:	d001      	beq.n	80016c8 <MX_TIM4_Init+0xb8>
			!= HAL_OK) {
		Error_Handler();
 80016c4:	f7ff fbc0 	bl	8000e48 <Error_Handler>
	}
	/* USER CODE BEGIN TIM4_Init 2 */

	/* USER CODE END TIM4_Init 2 */

}
 80016c8:	bf00      	nop
 80016ca:	3730      	adds	r7, #48	@ 0x30
 80016cc:	46bd      	mov	sp, r7
 80016ce:	bd80      	pop	{r7, pc}
 80016d0:	200001f4 	.word	0x200001f4
 80016d4:	40000800 	.word	0x40000800

080016d8 <MX_TIM5_Init>:
/* TIM5 init function */
void MX_TIM5_Init(void) {
 80016d8:	b580      	push	{r7, lr}
 80016da:	b08c      	sub	sp, #48	@ 0x30
 80016dc:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM5_Init 0 */

	/* USER CODE END TIM5_Init 0 */

	TIM_ClockConfigTypeDef sClockSourceConfig = { 0 };
 80016de:	f107 0320 	add.w	r3, r7, #32
 80016e2:	2200      	movs	r2, #0
 80016e4:	601a      	str	r2, [r3, #0]
 80016e6:	605a      	str	r2, [r3, #4]
 80016e8:	609a      	str	r2, [r3, #8]
 80016ea:	60da      	str	r2, [r3, #12]
	TIM_SlaveConfigTypeDef sSlaveConfig = { 0 };
 80016ec:	f107 030c 	add.w	r3, r7, #12
 80016f0:	2200      	movs	r2, #0
 80016f2:	601a      	str	r2, [r3, #0]
 80016f4:	605a      	str	r2, [r3, #4]
 80016f6:	609a      	str	r2, [r3, #8]
 80016f8:	60da      	str	r2, [r3, #12]
 80016fa:	611a      	str	r2, [r3, #16]
	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 80016fc:	1d3b      	adds	r3, r7, #4
 80016fe:	2200      	movs	r2, #0
 8001700:	601a      	str	r2, [r3, #0]
 8001702:	605a      	str	r2, [r3, #4]

	/* USER CODE BEGIN TIM5_Init 1 */

	/* USER CODE END TIM5_Init 1 */
	htim5.Instance = TIM5;
 8001704:	4b24      	ldr	r3, [pc, #144]	@ (8001798 <MX_TIM5_Init+0xc0>)
 8001706:	4a25      	ldr	r2, [pc, #148]	@ (800179c <MX_TIM5_Init+0xc4>)
 8001708:	601a      	str	r2, [r3, #0]
	htim5.Init.Prescaler = 65535;
 800170a:	4b23      	ldr	r3, [pc, #140]	@ (8001798 <MX_TIM5_Init+0xc0>)
 800170c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001710:	605a      	str	r2, [r3, #4]
	htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001712:	4b21      	ldr	r3, [pc, #132]	@ (8001798 <MX_TIM5_Init+0xc0>)
 8001714:	2200      	movs	r2, #0
 8001716:	609a      	str	r2, [r3, #8]
	htim5.Init.Period = 199;
 8001718:	4b1f      	ldr	r3, [pc, #124]	@ (8001798 <MX_TIM5_Init+0xc0>)
 800171a:	22c7      	movs	r2, #199	@ 0xc7
 800171c:	60da      	str	r2, [r3, #12]
	htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800171e:	4b1e      	ldr	r3, [pc, #120]	@ (8001798 <MX_TIM5_Init+0xc0>)
 8001720:	2200      	movs	r2, #0
 8001722:	611a      	str	r2, [r3, #16]
	htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001724:	4b1c      	ldr	r3, [pc, #112]	@ (8001798 <MX_TIM5_Init+0xc0>)
 8001726:	2200      	movs	r2, #0
 8001728:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim5) != HAL_OK) {
 800172a:	481b      	ldr	r0, [pc, #108]	@ (8001798 <MX_TIM5_Init+0xc0>)
 800172c:	f001 fd2a 	bl	8003184 <HAL_TIM_Base_Init>
 8001730:	4603      	mov	r3, r0
 8001732:	2b00      	cmp	r3, #0
 8001734:	d001      	beq.n	800173a <MX_TIM5_Init+0x62>
		Error_Handler();
 8001736:	f7ff fb87 	bl	8000e48 <Error_Handler>
	}
	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800173a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800173e:	623b      	str	r3, [r7, #32]
	if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK) {
 8001740:	f107 0320 	add.w	r3, r7, #32
 8001744:	4619      	mov	r1, r3
 8001746:	4814      	ldr	r0, [pc, #80]	@ (8001798 <MX_TIM5_Init+0xc0>)
 8001748:	f002 fa7c 	bl	8003c44 <HAL_TIM_ConfigClockSource>
 800174c:	4603      	mov	r3, r0
 800174e:	2b00      	cmp	r3, #0
 8001750:	d001      	beq.n	8001756 <MX_TIM5_Init+0x7e>
		Error_Handler();
 8001752:	f7ff fb79 	bl	8000e48 <Error_Handler>
	}
	sSlaveConfig.SlaveMode = TIM_SLAVEMODE_TRIGGER;
 8001756:	2306      	movs	r3, #6
 8001758:	60fb      	str	r3, [r7, #12]
	sSlaveConfig.InputTrigger = TIM_TS_ITR3;
 800175a:	2330      	movs	r3, #48	@ 0x30
 800175c:	613b      	str	r3, [r7, #16]
	if (HAL_TIM_SlaveConfigSynchro(&htim5, &sSlaveConfig) != HAL_OK) {
 800175e:	f107 030c 	add.w	r3, r7, #12
 8001762:	4619      	mov	r1, r3
 8001764:	480c      	ldr	r0, [pc, #48]	@ (8001798 <MX_TIM5_Init+0xc0>)
 8001766:	f002 fb34 	bl	8003dd2 <HAL_TIM_SlaveConfigSynchro>
 800176a:	4603      	mov	r3, r0
 800176c:	2b00      	cmp	r3, #0
 800176e:	d001      	beq.n	8001774 <MX_TIM5_Init+0x9c>
		Error_Handler();
 8001770:	f7ff fb6a 	bl	8000e48 <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001774:	2300      	movs	r3, #0
 8001776:	607b      	str	r3, [r7, #4]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001778:	2300      	movs	r3, #0
 800177a:	60bb      	str	r3, [r7, #8]
	if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig)
 800177c:	1d3b      	adds	r3, r7, #4
 800177e:	4619      	mov	r1, r3
 8001780:	4805      	ldr	r0, [pc, #20]	@ (8001798 <MX_TIM5_Init+0xc0>)
 8001782:	f002 ff33 	bl	80045ec <HAL_TIMEx_MasterConfigSynchronization>
 8001786:	4603      	mov	r3, r0
 8001788:	2b00      	cmp	r3, #0
 800178a:	d001      	beq.n	8001790 <MX_TIM5_Init+0xb8>
			!= HAL_OK) {
		Error_Handler();
 800178c:	f7ff fb5c 	bl	8000e48 <Error_Handler>
	}
	/* USER CODE BEGIN TIM5_Init 2 */

	/* USER CODE END TIM5_Init 2 */

}
 8001790:	bf00      	nop
 8001792:	3730      	adds	r7, #48	@ 0x30
 8001794:	46bd      	mov	sp, r7
 8001796:	bd80      	pop	{r7, pc}
 8001798:	2000023c 	.word	0x2000023c
 800179c:	40000c00 	.word	0x40000c00

080017a0 <MX_TIM6_Init>:
/* TIM6 init function */
void MX_TIM6_Init(void) {
 80017a0:	b580      	push	{r7, lr}
 80017a2:	b082      	sub	sp, #8
 80017a4:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM6_Init 0 */

	/* USER CODE END TIM6_Init 0 */

	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 80017a6:	463b      	mov	r3, r7
 80017a8:	2200      	movs	r2, #0
 80017aa:	601a      	str	r2, [r3, #0]
 80017ac:	605a      	str	r2, [r3, #4]

	/* USER CODE BEGIN TIM6_Init 1 */

	/* USER CODE END TIM6_Init 1 */
	htim6.Instance = TIM6;
 80017ae:	4b15      	ldr	r3, [pc, #84]	@ (8001804 <MX_TIM6_Init+0x64>)
 80017b0:	4a15      	ldr	r2, [pc, #84]	@ (8001808 <MX_TIM6_Init+0x68>)
 80017b2:	601a      	str	r2, [r3, #0]
	htim6.Init.Prescaler = 1400 * 3;
 80017b4:	4b13      	ldr	r3, [pc, #76]	@ (8001804 <MX_TIM6_Init+0x64>)
 80017b6:	f241 0268 	movw	r2, #4200	@ 0x1068
 80017ba:	605a      	str	r2, [r3, #4]
	htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80017bc:	4b11      	ldr	r3, [pc, #68]	@ (8001804 <MX_TIM6_Init+0x64>)
 80017be:	2200      	movs	r2, #0
 80017c0:	609a      	str	r2, [r3, #8]
	htim6.Init.Period = 59999;
 80017c2:	4b10      	ldr	r3, [pc, #64]	@ (8001804 <MX_TIM6_Init+0x64>)
 80017c4:	f64e 225f 	movw	r2, #59999	@ 0xea5f
 80017c8:	60da      	str	r2, [r3, #12]
	htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80017ca:	4b0e      	ldr	r3, [pc, #56]	@ (8001804 <MX_TIM6_Init+0x64>)
 80017cc:	2200      	movs	r2, #0
 80017ce:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim6) != HAL_OK) {
 80017d0:	480c      	ldr	r0, [pc, #48]	@ (8001804 <MX_TIM6_Init+0x64>)
 80017d2:	f001 fcd7 	bl	8003184 <HAL_TIM_Base_Init>
 80017d6:	4603      	mov	r3, r0
 80017d8:	2b00      	cmp	r3, #0
 80017da:	d001      	beq.n	80017e0 <MX_TIM6_Init+0x40>
		Error_Handler();
 80017dc:	f7ff fb34 	bl	8000e48 <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80017e0:	2300      	movs	r3, #0
 80017e2:	603b      	str	r3, [r7, #0]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80017e4:	2300      	movs	r3, #0
 80017e6:	607b      	str	r3, [r7, #4]
	if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig)
 80017e8:	463b      	mov	r3, r7
 80017ea:	4619      	mov	r1, r3
 80017ec:	4805      	ldr	r0, [pc, #20]	@ (8001804 <MX_TIM6_Init+0x64>)
 80017ee:	f002 fefd 	bl	80045ec <HAL_TIMEx_MasterConfigSynchronization>
 80017f2:	4603      	mov	r3, r0
 80017f4:	2b00      	cmp	r3, #0
 80017f6:	d001      	beq.n	80017fc <MX_TIM6_Init+0x5c>
			!= HAL_OK) {
		Error_Handler();
 80017f8:	f7ff fb26 	bl	8000e48 <Error_Handler>
	}
	/* USER CODE BEGIN TIM6_Init 2 */

	/* USER CODE END TIM6_Init 2 */

}
 80017fc:	bf00      	nop
 80017fe:	3708      	adds	r7, #8
 8001800:	46bd      	mov	sp, r7
 8001802:	bd80      	pop	{r7, pc}
 8001804:	20000284 	.word	0x20000284
 8001808:	40001000 	.word	0x40001000

0800180c <MX_TIM8_Init>:
/* TIM8 init function */
void MX_TIM8_Init(void) {
 800180c:	b580      	push	{r7, lr}
 800180e:	b096      	sub	sp, #88	@ 0x58
 8001810:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM8_Init 0 */

	/* USER CODE END TIM8_Init 0 */

	TIM_ClockConfigTypeDef sClockSourceConfig = { 0 };
 8001812:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 8001816:	2200      	movs	r2, #0
 8001818:	601a      	str	r2, [r3, #0]
 800181a:	605a      	str	r2, [r3, #4]
 800181c:	609a      	str	r2, [r3, #8]
 800181e:	60da      	str	r2, [r3, #12]
	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 8001820:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8001824:	2200      	movs	r2, #0
 8001826:	601a      	str	r2, [r3, #0]
 8001828:	605a      	str	r2, [r3, #4]
	TIM_OC_InitTypeDef sConfigOC = { 0 };
 800182a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800182e:	2200      	movs	r2, #0
 8001830:	601a      	str	r2, [r3, #0]
 8001832:	605a      	str	r2, [r3, #4]
 8001834:	609a      	str	r2, [r3, #8]
 8001836:	60da      	str	r2, [r3, #12]
 8001838:	611a      	str	r2, [r3, #16]
 800183a:	615a      	str	r2, [r3, #20]
 800183c:	619a      	str	r2, [r3, #24]
	TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = { 0 };
 800183e:	1d3b      	adds	r3, r7, #4
 8001840:	2220      	movs	r2, #32
 8001842:	2100      	movs	r1, #0
 8001844:	4618      	mov	r0, r3
 8001846:	f002 ffb3 	bl	80047b0 <memset>

	/* USER CODE BEGIN TIM8_Init 1 */

	/* USER CODE END TIM8_Init 1 */
	htim8.Instance = TIM8;
 800184a:	4b3f      	ldr	r3, [pc, #252]	@ (8001948 <MX_TIM8_Init+0x13c>)
 800184c:	4a3f      	ldr	r2, [pc, #252]	@ (800194c <MX_TIM8_Init+0x140>)
 800184e:	601a      	str	r2, [r3, #0]
	htim8.Init.Prescaler = 4;
 8001850:	4b3d      	ldr	r3, [pc, #244]	@ (8001948 <MX_TIM8_Init+0x13c>)
 8001852:	2204      	movs	r2, #4
 8001854:	605a      	str	r2, [r3, #4]
	htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001856:	4b3c      	ldr	r3, [pc, #240]	@ (8001948 <MX_TIM8_Init+0x13c>)
 8001858:	2200      	movs	r2, #0
 800185a:	609a      	str	r2, [r3, #8]
	htim8.Init.Period = 65535;
 800185c:	4b3a      	ldr	r3, [pc, #232]	@ (8001948 <MX_TIM8_Init+0x13c>)
 800185e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001862:	60da      	str	r2, [r3, #12]
	htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001864:	4b38      	ldr	r3, [pc, #224]	@ (8001948 <MX_TIM8_Init+0x13c>)
 8001866:	2200      	movs	r2, #0
 8001868:	611a      	str	r2, [r3, #16]
	htim8.Init.RepetitionCounter = 0;
 800186a:	4b37      	ldr	r3, [pc, #220]	@ (8001948 <MX_TIM8_Init+0x13c>)
 800186c:	2200      	movs	r2, #0
 800186e:	615a      	str	r2, [r3, #20]
	htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001870:	4b35      	ldr	r3, [pc, #212]	@ (8001948 <MX_TIM8_Init+0x13c>)
 8001872:	2280      	movs	r2, #128	@ 0x80
 8001874:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim8) != HAL_OK) {
 8001876:	4834      	ldr	r0, [pc, #208]	@ (8001948 <MX_TIM8_Init+0x13c>)
 8001878:	f001 fc84 	bl	8003184 <HAL_TIM_Base_Init>
 800187c:	4603      	mov	r3, r0
 800187e:	2b00      	cmp	r3, #0
 8001880:	d001      	beq.n	8001886 <MX_TIM8_Init+0x7a>
		Error_Handler();
 8001882:	f7ff fae1 	bl	8000e48 <Error_Handler>
	}
	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001886:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800188a:	64bb      	str	r3, [r7, #72]	@ 0x48
	if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK) {
 800188c:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 8001890:	4619      	mov	r1, r3
 8001892:	482d      	ldr	r0, [pc, #180]	@ (8001948 <MX_TIM8_Init+0x13c>)
 8001894:	f002 f9d6 	bl	8003c44 <HAL_TIM_ConfigClockSource>
 8001898:	4603      	mov	r3, r0
 800189a:	2b00      	cmp	r3, #0
 800189c:	d001      	beq.n	80018a2 <MX_TIM8_Init+0x96>
		Error_Handler();
 800189e:	f7ff fad3 	bl	8000e48 <Error_Handler>
	}
	if (HAL_TIM_PWM_Init(&htim8) != HAL_OK) {
 80018a2:	4829      	ldr	r0, [pc, #164]	@ (8001948 <MX_TIM8_Init+0x13c>)
 80018a4:	f001 fd26 	bl	80032f4 <HAL_TIM_PWM_Init>
 80018a8:	4603      	mov	r3, r0
 80018aa:	2b00      	cmp	r3, #0
 80018ac:	d001      	beq.n	80018b2 <MX_TIM8_Init+0xa6>
		Error_Handler();
 80018ae:	f7ff facb 	bl	8000e48 <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 80018b2:	2320      	movs	r3, #32
 80018b4:	643b      	str	r3, [r7, #64]	@ 0x40
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_ENABLE;
 80018b6:	2380      	movs	r3, #128	@ 0x80
 80018b8:	647b      	str	r3, [r7, #68]	@ 0x44
	if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig)
 80018ba:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 80018be:	4619      	mov	r1, r3
 80018c0:	4821      	ldr	r0, [pc, #132]	@ (8001948 <MX_TIM8_Init+0x13c>)
 80018c2:	f002 fe93 	bl	80045ec <HAL_TIMEx_MasterConfigSynchronization>
 80018c6:	4603      	mov	r3, r0
 80018c8:	2b00      	cmp	r3, #0
 80018ca:	d001      	beq.n	80018d0 <MX_TIM8_Init+0xc4>
			!= HAL_OK) {
		Error_Handler();
 80018cc:	f7ff fabc 	bl	8000e48 <Error_Handler>
	}
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80018d0:	2360      	movs	r3, #96	@ 0x60
 80018d2:	627b      	str	r3, [r7, #36]	@ 0x24
	sConfigOC.Pulse = 32768;
 80018d4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80018d8:	62bb      	str	r3, [r7, #40]	@ 0x28
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80018da:	2300      	movs	r3, #0
 80018dc:	62fb      	str	r3, [r7, #44]	@ 0x2c
	sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 80018de:	2300      	movs	r3, #0
 80018e0:	633b      	str	r3, [r7, #48]	@ 0x30
	sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 80018e2:	2304      	movs	r3, #4
 80018e4:	637b      	str	r3, [r7, #52]	@ 0x34
	sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 80018e6:	2300      	movs	r3, #0
 80018e8:	63bb      	str	r3, [r7, #56]	@ 0x38
	sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 80018ea:	2300      	movs	r3, #0
 80018ec:	63fb      	str	r3, [r7, #60]	@ 0x3c
	if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1)
 80018ee:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80018f2:	2200      	movs	r2, #0
 80018f4:	4619      	mov	r1, r3
 80018f6:	4814      	ldr	r0, [pc, #80]	@ (8001948 <MX_TIM8_Init+0x13c>)
 80018f8:	f002 f8e2 	bl	8003ac0 <HAL_TIM_PWM_ConfigChannel>
 80018fc:	4603      	mov	r3, r0
 80018fe:	2b00      	cmp	r3, #0
 8001900:	d001      	beq.n	8001906 <MX_TIM8_Init+0xfa>
			!= HAL_OK) {
		Error_Handler();
 8001902:	f7ff faa1 	bl	8000e48 <Error_Handler>
	}
	sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8001906:	2300      	movs	r3, #0
 8001908:	607b      	str	r3, [r7, #4]
	sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 800190a:	2300      	movs	r3, #0
 800190c:	60bb      	str	r3, [r7, #8]
	sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 800190e:	2300      	movs	r3, #0
 8001910:	60fb      	str	r3, [r7, #12]
	sBreakDeadTimeConfig.DeadTime = 0;
 8001912:	2300      	movs	r3, #0
 8001914:	613b      	str	r3, [r7, #16]
	sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8001916:	2300      	movs	r3, #0
 8001918:	617b      	str	r3, [r7, #20]
	sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 800191a:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800191e:	61bb      	str	r3, [r7, #24]
	sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8001920:	2300      	movs	r3, #0
 8001922:	623b      	str	r3, [r7, #32]
	if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig)
 8001924:	1d3b      	adds	r3, r7, #4
 8001926:	4619      	mov	r1, r3
 8001928:	4807      	ldr	r0, [pc, #28]	@ (8001948 <MX_TIM8_Init+0x13c>)
 800192a:	f002 fedb 	bl	80046e4 <HAL_TIMEx_ConfigBreakDeadTime>
 800192e:	4603      	mov	r3, r0
 8001930:	2b00      	cmp	r3, #0
 8001932:	d001      	beq.n	8001938 <MX_TIM8_Init+0x12c>
			!= HAL_OK) {
		Error_Handler();
 8001934:	f7ff fa88 	bl	8000e48 <Error_Handler>
	}
	/* USER CODE BEGIN TIM8_Init 2 */

	/* USER CODE END TIM8_Init 2 */
	HAL_TIM_MspPostInit(&htim8);
 8001938:	4803      	ldr	r0, [pc, #12]	@ (8001948 <MX_TIM8_Init+0x13c>)
 800193a:	f000 f9a3 	bl	8001c84 <HAL_TIM_MspPostInit>

}
 800193e:	bf00      	nop
 8001940:	3758      	adds	r7, #88	@ 0x58
 8001942:	46bd      	mov	sp, r7
 8001944:	bd80      	pop	{r7, pc}
 8001946:	bf00      	nop
 8001948:	200002cc 	.word	0x200002cc
 800194c:	40010400 	.word	0x40010400

08001950 <MX_TIM10_Init>:
/* TIM10 init function */
void MX_TIM10_Init(void) {
 8001950:	b580      	push	{r7, lr}
 8001952:	b088      	sub	sp, #32
 8001954:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM10_Init 0 */

	/* USER CODE END TIM10_Init 0 */

	TIM_OC_InitTypeDef sConfigOC = { 0 };
 8001956:	1d3b      	adds	r3, r7, #4
 8001958:	2200      	movs	r2, #0
 800195a:	601a      	str	r2, [r3, #0]
 800195c:	605a      	str	r2, [r3, #4]
 800195e:	609a      	str	r2, [r3, #8]
 8001960:	60da      	str	r2, [r3, #12]
 8001962:	611a      	str	r2, [r3, #16]
 8001964:	615a      	str	r2, [r3, #20]
 8001966:	619a      	str	r2, [r3, #24]

	/* USER CODE BEGIN TIM10_Init 1 */

	/* USER CODE END TIM10_Init 1 */
	htim10.Instance = TIM10;
 8001968:	4b1e      	ldr	r3, [pc, #120]	@ (80019e4 <MX_TIM10_Init+0x94>)
 800196a:	4a1f      	ldr	r2, [pc, #124]	@ (80019e8 <MX_TIM10_Init+0x98>)
 800196c:	601a      	str	r2, [r3, #0]
	htim10.Init.Prescaler = 0;
 800196e:	4b1d      	ldr	r3, [pc, #116]	@ (80019e4 <MX_TIM10_Init+0x94>)
 8001970:	2200      	movs	r2, #0
 8001972:	605a      	str	r2, [r3, #4]
	htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001974:	4b1b      	ldr	r3, [pc, #108]	@ (80019e4 <MX_TIM10_Init+0x94>)
 8001976:	2200      	movs	r2, #0
 8001978:	609a      	str	r2, [r3, #8]
	htim10.Init.Period = 65535;
 800197a:	4b1a      	ldr	r3, [pc, #104]	@ (80019e4 <MX_TIM10_Init+0x94>)
 800197c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001980:	60da      	str	r2, [r3, #12]
	htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001982:	4b18      	ldr	r3, [pc, #96]	@ (80019e4 <MX_TIM10_Init+0x94>)
 8001984:	2200      	movs	r2, #0
 8001986:	611a      	str	r2, [r3, #16]
	htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001988:	4b16      	ldr	r3, [pc, #88]	@ (80019e4 <MX_TIM10_Init+0x94>)
 800198a:	2280      	movs	r2, #128	@ 0x80
 800198c:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim10) != HAL_OK) {
 800198e:	4815      	ldr	r0, [pc, #84]	@ (80019e4 <MX_TIM10_Init+0x94>)
 8001990:	f001 fbf8 	bl	8003184 <HAL_TIM_Base_Init>
 8001994:	4603      	mov	r3, r0
 8001996:	2b00      	cmp	r3, #0
 8001998:	d001      	beq.n	800199e <MX_TIM10_Init+0x4e>
		Error_Handler();
 800199a:	f7ff fa55 	bl	8000e48 <Error_Handler>
	}
	if (HAL_TIM_PWM_Init(&htim10) != HAL_OK) {
 800199e:	4811      	ldr	r0, [pc, #68]	@ (80019e4 <MX_TIM10_Init+0x94>)
 80019a0:	f001 fca8 	bl	80032f4 <HAL_TIM_PWM_Init>
 80019a4:	4603      	mov	r3, r0
 80019a6:	2b00      	cmp	r3, #0
 80019a8:	d001      	beq.n	80019ae <MX_TIM10_Init+0x5e>
		Error_Handler();
 80019aa:	f7ff fa4d 	bl	8000e48 <Error_Handler>
	}
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80019ae:	2360      	movs	r3, #96	@ 0x60
 80019b0:	607b      	str	r3, [r7, #4]
	sConfigOC.Pulse = 1;
 80019b2:	2301      	movs	r3, #1
 80019b4:	60bb      	str	r3, [r7, #8]
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80019b6:	2300      	movs	r3, #0
 80019b8:	60fb      	str	r3, [r7, #12]
	sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 80019ba:	2304      	movs	r3, #4
 80019bc:	617b      	str	r3, [r7, #20]
	if (HAL_TIM_PWM_ConfigChannel(&htim10, &sConfigOC, TIM_CHANNEL_1)
 80019be:	1d3b      	adds	r3, r7, #4
 80019c0:	2200      	movs	r2, #0
 80019c2:	4619      	mov	r1, r3
 80019c4:	4807      	ldr	r0, [pc, #28]	@ (80019e4 <MX_TIM10_Init+0x94>)
 80019c6:	f002 f87b 	bl	8003ac0 <HAL_TIM_PWM_ConfigChannel>
 80019ca:	4603      	mov	r3, r0
 80019cc:	2b00      	cmp	r3, #0
 80019ce:	d001      	beq.n	80019d4 <MX_TIM10_Init+0x84>
			!= HAL_OK) {
		Error_Handler();
 80019d0:	f7ff fa3a 	bl	8000e48 <Error_Handler>
	}
	/* USER CODE BEGIN TIM10_Init 2 */

	/* USER CODE END TIM10_Init 2 */
	HAL_TIM_MspPostInit(&htim10);
 80019d4:	4803      	ldr	r0, [pc, #12]	@ (80019e4 <MX_TIM10_Init+0x94>)
 80019d6:	f000 f955 	bl	8001c84 <HAL_TIM_MspPostInit>

}
 80019da:	bf00      	nop
 80019dc:	3720      	adds	r7, #32
 80019de:	46bd      	mov	sp, r7
 80019e0:	bd80      	pop	{r7, pc}
 80019e2:	bf00      	nop
 80019e4:	20000314 	.word	0x20000314
 80019e8:	40014400 	.word	0x40014400

080019ec <MX_TIM11_Init>:
/* TIM11 init function */
void MX_TIM11_Init(void) {
 80019ec:	b580      	push	{r7, lr}
 80019ee:	b088      	sub	sp, #32
 80019f0:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM11_Init 0 */

	/* USER CODE END TIM11_Init 0 */

	TIM_OC_InitTypeDef sConfigOC = { 0 };
 80019f2:	1d3b      	adds	r3, r7, #4
 80019f4:	2200      	movs	r2, #0
 80019f6:	601a      	str	r2, [r3, #0]
 80019f8:	605a      	str	r2, [r3, #4]
 80019fa:	609a      	str	r2, [r3, #8]
 80019fc:	60da      	str	r2, [r3, #12]
 80019fe:	611a      	str	r2, [r3, #16]
 8001a00:	615a      	str	r2, [r3, #20]
 8001a02:	619a      	str	r2, [r3, #24]

	/* USER CODE BEGIN TIM11_Init 1 */

	/* USER CODE END TIM11_Init 1 */
	htim11.Instance = TIM11;
 8001a04:	4b1e      	ldr	r3, [pc, #120]	@ (8001a80 <MX_TIM11_Init+0x94>)
 8001a06:	4a1f      	ldr	r2, [pc, #124]	@ (8001a84 <MX_TIM11_Init+0x98>)
 8001a08:	601a      	str	r2, [r3, #0]
	htim11.Init.Prescaler = 0;
 8001a0a:	4b1d      	ldr	r3, [pc, #116]	@ (8001a80 <MX_TIM11_Init+0x94>)
 8001a0c:	2200      	movs	r2, #0
 8001a0e:	605a      	str	r2, [r3, #4]
	htim11.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001a10:	4b1b      	ldr	r3, [pc, #108]	@ (8001a80 <MX_TIM11_Init+0x94>)
 8001a12:	2200      	movs	r2, #0
 8001a14:	609a      	str	r2, [r3, #8]
	htim11.Init.Period = 65535;
 8001a16:	4b1a      	ldr	r3, [pc, #104]	@ (8001a80 <MX_TIM11_Init+0x94>)
 8001a18:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001a1c:	60da      	str	r2, [r3, #12]
	htim11.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001a1e:	4b18      	ldr	r3, [pc, #96]	@ (8001a80 <MX_TIM11_Init+0x94>)
 8001a20:	2200      	movs	r2, #0
 8001a22:	611a      	str	r2, [r3, #16]
	htim11.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001a24:	4b16      	ldr	r3, [pc, #88]	@ (8001a80 <MX_TIM11_Init+0x94>)
 8001a26:	2280      	movs	r2, #128	@ 0x80
 8001a28:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim11) != HAL_OK) {
 8001a2a:	4815      	ldr	r0, [pc, #84]	@ (8001a80 <MX_TIM11_Init+0x94>)
 8001a2c:	f001 fbaa 	bl	8003184 <HAL_TIM_Base_Init>
 8001a30:	4603      	mov	r3, r0
 8001a32:	2b00      	cmp	r3, #0
 8001a34:	d001      	beq.n	8001a3a <MX_TIM11_Init+0x4e>
		Error_Handler();
 8001a36:	f7ff fa07 	bl	8000e48 <Error_Handler>
	}
	if (HAL_TIM_PWM_Init(&htim11) != HAL_OK) {
 8001a3a:	4811      	ldr	r0, [pc, #68]	@ (8001a80 <MX_TIM11_Init+0x94>)
 8001a3c:	f001 fc5a 	bl	80032f4 <HAL_TIM_PWM_Init>
 8001a40:	4603      	mov	r3, r0
 8001a42:	2b00      	cmp	r3, #0
 8001a44:	d001      	beq.n	8001a4a <MX_TIM11_Init+0x5e>
		Error_Handler();
 8001a46:	f7ff f9ff 	bl	8000e48 <Error_Handler>
	}
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001a4a:	2360      	movs	r3, #96	@ 0x60
 8001a4c:	607b      	str	r3, [r7, #4]
	sConfigOC.Pulse = 1;
 8001a4e:	2301      	movs	r3, #1
 8001a50:	60bb      	str	r3, [r7, #8]
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001a52:	2300      	movs	r3, #0
 8001a54:	60fb      	str	r3, [r7, #12]
	sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 8001a56:	2304      	movs	r3, #4
 8001a58:	617b      	str	r3, [r7, #20]
	if (HAL_TIM_PWM_ConfigChannel(&htim11, &sConfigOC, TIM_CHANNEL_1)
 8001a5a:	1d3b      	adds	r3, r7, #4
 8001a5c:	2200      	movs	r2, #0
 8001a5e:	4619      	mov	r1, r3
 8001a60:	4807      	ldr	r0, [pc, #28]	@ (8001a80 <MX_TIM11_Init+0x94>)
 8001a62:	f002 f82d 	bl	8003ac0 <HAL_TIM_PWM_ConfigChannel>
 8001a66:	4603      	mov	r3, r0
 8001a68:	2b00      	cmp	r3, #0
 8001a6a:	d001      	beq.n	8001a70 <MX_TIM11_Init+0x84>
			!= HAL_OK) {
		Error_Handler();
 8001a6c:	f7ff f9ec 	bl	8000e48 <Error_Handler>
	}
	/* USER CODE BEGIN TIM11_Init 2 */

	/* USER CODE END TIM11_Init 2 */
	HAL_TIM_MspPostInit(&htim11);
 8001a70:	4803      	ldr	r0, [pc, #12]	@ (8001a80 <MX_TIM11_Init+0x94>)
 8001a72:	f000 f907 	bl	8001c84 <HAL_TIM_MspPostInit>

}
 8001a76:	bf00      	nop
 8001a78:	3720      	adds	r7, #32
 8001a7a:	46bd      	mov	sp, r7
 8001a7c:	bd80      	pop	{r7, pc}
 8001a7e:	bf00      	nop
 8001a80:	2000035c 	.word	0x2000035c
 8001a84:	40014800 	.word	0x40014800

08001a88 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef *tim_baseHandle) {
 8001a88:	b580      	push	{r7, lr}
 8001a8a:	b08c      	sub	sp, #48	@ 0x30
 8001a8c:	af00      	add	r7, sp, #0
 8001a8e:	6078      	str	r0, [r7, #4]

	if (tim_baseHandle->Instance == TIM1) {
 8001a90:	687b      	ldr	r3, [r7, #4]
 8001a92:	681b      	ldr	r3, [r3, #0]
 8001a94:	4a72      	ldr	r2, [pc, #456]	@ (8001c60 <HAL_TIM_Base_MspInit+0x1d8>)
 8001a96:	4293      	cmp	r3, r2
 8001a98:	d116      	bne.n	8001ac8 <HAL_TIM_Base_MspInit+0x40>
		/* USER CODE BEGIN TIM1_MspInit 0 */

		/* USER CODE END TIM1_MspInit 0 */
		/* TIM1 clock enable */
		__HAL_RCC_TIM1_CLK_ENABLE();
 8001a9a:	2300      	movs	r3, #0
 8001a9c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001a9e:	4b71      	ldr	r3, [pc, #452]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001aa0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001aa2:	4a70      	ldr	r2, [pc, #448]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001aa4:	f043 0301 	orr.w	r3, r3, #1
 8001aa8:	6453      	str	r3, [r2, #68]	@ 0x44
 8001aaa:	4b6e      	ldr	r3, [pc, #440]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001aac:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001aae:	f003 0301 	and.w	r3, r3, #1
 8001ab2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001ab4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c

		/* TIM1 interrupt Init */
		HAL_NVIC_SetPriority(TIM1_CC_IRQn, 1, 0);
 8001ab6:	2200      	movs	r2, #0
 8001ab8:	2101      	movs	r1, #1
 8001aba:	201b      	movs	r0, #27
 8001abc:	f000 fb77 	bl	80021ae <HAL_NVIC_SetPriority>
		HAL_NVIC_EnableIRQ(TIM1_CC_IRQn);
 8001ac0:	201b      	movs	r0, #27
 8001ac2:	f000 fb90 	bl	80021e6 <HAL_NVIC_EnableIRQ>
		__HAL_RCC_TIM11_CLK_ENABLE();
		/* USER CODE BEGIN TIM11_MspInit 1 */

		/* USER CODE END TIM11_MspInit 1 */
	}
}
 8001ac6:	e0c6      	b.n	8001c56 <HAL_TIM_Base_MspInit+0x1ce>
	} else if (tim_baseHandle->Instance == TIM2) {
 8001ac8:	687b      	ldr	r3, [r7, #4]
 8001aca:	681b      	ldr	r3, [r3, #0]
 8001acc:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001ad0:	d116      	bne.n	8001b00 <HAL_TIM_Base_MspInit+0x78>
		__HAL_RCC_TIM2_CLK_ENABLE();
 8001ad2:	2300      	movs	r3, #0
 8001ad4:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001ad6:	4b63      	ldr	r3, [pc, #396]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001ad8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ada:	4a62      	ldr	r2, [pc, #392]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001adc:	f043 0301 	orr.w	r3, r3, #1
 8001ae0:	6413      	str	r3, [r2, #64]	@ 0x40
 8001ae2:	4b60      	ldr	r3, [pc, #384]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001ae4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ae6:	f003 0301 	and.w	r3, r3, #1
 8001aea:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001aec:	6abb      	ldr	r3, [r7, #40]	@ 0x28
		HAL_NVIC_SetPriority(TIM2_IRQn, 1, 0);
 8001aee:	2200      	movs	r2, #0
 8001af0:	2101      	movs	r1, #1
 8001af2:	201c      	movs	r0, #28
 8001af4:	f000 fb5b 	bl	80021ae <HAL_NVIC_SetPriority>
		HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001af8:	201c      	movs	r0, #28
 8001afa:	f000 fb74 	bl	80021e6 <HAL_NVIC_EnableIRQ>
}
 8001afe:	e0aa      	b.n	8001c56 <HAL_TIM_Base_MspInit+0x1ce>
	} else if (tim_baseHandle->Instance == TIM3) {
 8001b00:	687b      	ldr	r3, [r7, #4]
 8001b02:	681b      	ldr	r3, [r3, #0]
 8001b04:	4a58      	ldr	r2, [pc, #352]	@ (8001c68 <HAL_TIM_Base_MspInit+0x1e0>)
 8001b06:	4293      	cmp	r3, r2
 8001b08:	d10e      	bne.n	8001b28 <HAL_TIM_Base_MspInit+0xa0>
		__HAL_RCC_TIM3_CLK_ENABLE();
 8001b0a:	2300      	movs	r3, #0
 8001b0c:	627b      	str	r3, [r7, #36]	@ 0x24
 8001b0e:	4b55      	ldr	r3, [pc, #340]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001b10:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b12:	4a54      	ldr	r2, [pc, #336]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001b14:	f043 0302 	orr.w	r3, r3, #2
 8001b18:	6413      	str	r3, [r2, #64]	@ 0x40
 8001b1a:	4b52      	ldr	r3, [pc, #328]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001b1c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b1e:	f003 0302 	and.w	r3, r3, #2
 8001b22:	627b      	str	r3, [r7, #36]	@ 0x24
 8001b24:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
}
 8001b26:	e096      	b.n	8001c56 <HAL_TIM_Base_MspInit+0x1ce>
	} else if (tim_baseHandle->Instance == TIM4) {
 8001b28:	687b      	ldr	r3, [r7, #4]
 8001b2a:	681b      	ldr	r3, [r3, #0]
 8001b2c:	4a4f      	ldr	r2, [pc, #316]	@ (8001c6c <HAL_TIM_Base_MspInit+0x1e4>)
 8001b2e:	4293      	cmp	r3, r2
 8001b30:	d10e      	bne.n	8001b50 <HAL_TIM_Base_MspInit+0xc8>
		__HAL_RCC_TIM4_CLK_ENABLE();
 8001b32:	2300      	movs	r3, #0
 8001b34:	623b      	str	r3, [r7, #32]
 8001b36:	4b4b      	ldr	r3, [pc, #300]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001b38:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b3a:	4a4a      	ldr	r2, [pc, #296]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001b3c:	f043 0304 	orr.w	r3, r3, #4
 8001b40:	6413      	str	r3, [r2, #64]	@ 0x40
 8001b42:	4b48      	ldr	r3, [pc, #288]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001b44:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b46:	f003 0304 	and.w	r3, r3, #4
 8001b4a:	623b      	str	r3, [r7, #32]
 8001b4c:	6a3b      	ldr	r3, [r7, #32]
}
 8001b4e:	e082      	b.n	8001c56 <HAL_TIM_Base_MspInit+0x1ce>
	} else if (tim_baseHandle->Instance == TIM5) {
 8001b50:	687b      	ldr	r3, [r7, #4]
 8001b52:	681b      	ldr	r3, [r3, #0]
 8001b54:	4a46      	ldr	r2, [pc, #280]	@ (8001c70 <HAL_TIM_Base_MspInit+0x1e8>)
 8001b56:	4293      	cmp	r3, r2
 8001b58:	d10e      	bne.n	8001b78 <HAL_TIM_Base_MspInit+0xf0>
		__HAL_RCC_TIM5_CLK_ENABLE();
 8001b5a:	2300      	movs	r3, #0
 8001b5c:	61fb      	str	r3, [r7, #28]
 8001b5e:	4b41      	ldr	r3, [pc, #260]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001b60:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b62:	4a40      	ldr	r2, [pc, #256]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001b64:	f043 0308 	orr.w	r3, r3, #8
 8001b68:	6413      	str	r3, [r2, #64]	@ 0x40
 8001b6a:	4b3e      	ldr	r3, [pc, #248]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001b6c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b6e:	f003 0308 	and.w	r3, r3, #8
 8001b72:	61fb      	str	r3, [r7, #28]
 8001b74:	69fb      	ldr	r3, [r7, #28]
}
 8001b76:	e06e      	b.n	8001c56 <HAL_TIM_Base_MspInit+0x1ce>
	} else if (tim_baseHandle->Instance == TIM6) {
 8001b78:	687b      	ldr	r3, [r7, #4]
 8001b7a:	681b      	ldr	r3, [r3, #0]
 8001b7c:	4a3d      	ldr	r2, [pc, #244]	@ (8001c74 <HAL_TIM_Base_MspInit+0x1ec>)
 8001b7e:	4293      	cmp	r3, r2
 8001b80:	d10e      	bne.n	8001ba0 <HAL_TIM_Base_MspInit+0x118>
		__HAL_RCC_TIM6_CLK_ENABLE();
 8001b82:	2300      	movs	r3, #0
 8001b84:	61bb      	str	r3, [r7, #24]
 8001b86:	4b37      	ldr	r3, [pc, #220]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001b88:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b8a:	4a36      	ldr	r2, [pc, #216]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001b8c:	f043 0310 	orr.w	r3, r3, #16
 8001b90:	6413      	str	r3, [r2, #64]	@ 0x40
 8001b92:	4b34      	ldr	r3, [pc, #208]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001b94:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b96:	f003 0310 	and.w	r3, r3, #16
 8001b9a:	61bb      	str	r3, [r7, #24]
 8001b9c:	69bb      	ldr	r3, [r7, #24]
}
 8001b9e:	e05a      	b.n	8001c56 <HAL_TIM_Base_MspInit+0x1ce>
	} else if (tim_baseHandle->Instance == TIM8) {
 8001ba0:	687b      	ldr	r3, [r7, #4]
 8001ba2:	681b      	ldr	r3, [r3, #0]
 8001ba4:	4a34      	ldr	r2, [pc, #208]	@ (8001c78 <HAL_TIM_Base_MspInit+0x1f0>)
 8001ba6:	4293      	cmp	r3, r2
 8001ba8:	d12e      	bne.n	8001c08 <HAL_TIM_Base_MspInit+0x180>
		__HAL_RCC_TIM8_CLK_ENABLE();
 8001baa:	2300      	movs	r3, #0
 8001bac:	617b      	str	r3, [r7, #20]
 8001bae:	4b2d      	ldr	r3, [pc, #180]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001bb0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001bb2:	4a2c      	ldr	r2, [pc, #176]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001bb4:	f043 0302 	orr.w	r3, r3, #2
 8001bb8:	6453      	str	r3, [r2, #68]	@ 0x44
 8001bba:	4b2a      	ldr	r3, [pc, #168]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001bbc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001bbe:	f003 0302 	and.w	r3, r3, #2
 8001bc2:	617b      	str	r3, [r7, #20]
 8001bc4:	697b      	ldr	r3, [r7, #20]
		HAL_NVIC_SetPriority(TIM8_BRK_TIM12_IRQn, 1, 0);
 8001bc6:	2200      	movs	r2, #0
 8001bc8:	2101      	movs	r1, #1
 8001bca:	202b      	movs	r0, #43	@ 0x2b
 8001bcc:	f000 faef 	bl	80021ae <HAL_NVIC_SetPriority>
		HAL_NVIC_EnableIRQ(TIM8_BRK_TIM12_IRQn);
 8001bd0:	202b      	movs	r0, #43	@ 0x2b
 8001bd2:	f000 fb08 	bl	80021e6 <HAL_NVIC_EnableIRQ>
		HAL_NVIC_SetPriority(TIM8_UP_TIM13_IRQn, 1, 0);
 8001bd6:	2200      	movs	r2, #0
 8001bd8:	2101      	movs	r1, #1
 8001bda:	202c      	movs	r0, #44	@ 0x2c
 8001bdc:	f000 fae7 	bl	80021ae <HAL_NVIC_SetPriority>
		HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 8001be0:	202c      	movs	r0, #44	@ 0x2c
 8001be2:	f000 fb00 	bl	80021e6 <HAL_NVIC_EnableIRQ>
		HAL_NVIC_SetPriority(TIM8_TRG_COM_TIM14_IRQn, 1, 0);
 8001be6:	2200      	movs	r2, #0
 8001be8:	2101      	movs	r1, #1
 8001bea:	202d      	movs	r0, #45	@ 0x2d
 8001bec:	f000 fadf 	bl	80021ae <HAL_NVIC_SetPriority>
		HAL_NVIC_EnableIRQ(TIM8_TRG_COM_TIM14_IRQn);
 8001bf0:	202d      	movs	r0, #45	@ 0x2d
 8001bf2:	f000 faf8 	bl	80021e6 <HAL_NVIC_EnableIRQ>
		HAL_NVIC_SetPriority(TIM8_CC_IRQn, 1, 0);
 8001bf6:	2200      	movs	r2, #0
 8001bf8:	2101      	movs	r1, #1
 8001bfa:	202e      	movs	r0, #46	@ 0x2e
 8001bfc:	f000 fad7 	bl	80021ae <HAL_NVIC_SetPriority>
		HAL_NVIC_EnableIRQ(TIM8_CC_IRQn);
 8001c00:	202e      	movs	r0, #46	@ 0x2e
 8001c02:	f000 faf0 	bl	80021e6 <HAL_NVIC_EnableIRQ>
}
 8001c06:	e026      	b.n	8001c56 <HAL_TIM_Base_MspInit+0x1ce>
	} else if (tim_baseHandle->Instance == TIM10) {
 8001c08:	687b      	ldr	r3, [r7, #4]
 8001c0a:	681b      	ldr	r3, [r3, #0]
 8001c0c:	4a1b      	ldr	r2, [pc, #108]	@ (8001c7c <HAL_TIM_Base_MspInit+0x1f4>)
 8001c0e:	4293      	cmp	r3, r2
 8001c10:	d10e      	bne.n	8001c30 <HAL_TIM_Base_MspInit+0x1a8>
		__HAL_RCC_TIM10_CLK_ENABLE();
 8001c12:	2300      	movs	r3, #0
 8001c14:	613b      	str	r3, [r7, #16]
 8001c16:	4b13      	ldr	r3, [pc, #76]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001c18:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001c1a:	4a12      	ldr	r2, [pc, #72]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001c1c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001c20:	6453      	str	r3, [r2, #68]	@ 0x44
 8001c22:	4b10      	ldr	r3, [pc, #64]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001c24:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001c26:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001c2a:	613b      	str	r3, [r7, #16]
 8001c2c:	693b      	ldr	r3, [r7, #16]
}
 8001c2e:	e012      	b.n	8001c56 <HAL_TIM_Base_MspInit+0x1ce>
	} else if (tim_baseHandle->Instance == TIM11) {
 8001c30:	687b      	ldr	r3, [r7, #4]
 8001c32:	681b      	ldr	r3, [r3, #0]
 8001c34:	4a12      	ldr	r2, [pc, #72]	@ (8001c80 <HAL_TIM_Base_MspInit+0x1f8>)
 8001c36:	4293      	cmp	r3, r2
 8001c38:	d10d      	bne.n	8001c56 <HAL_TIM_Base_MspInit+0x1ce>
		__HAL_RCC_TIM11_CLK_ENABLE();
 8001c3a:	2300      	movs	r3, #0
 8001c3c:	60fb      	str	r3, [r7, #12]
 8001c3e:	4b09      	ldr	r3, [pc, #36]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001c40:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001c42:	4a08      	ldr	r2, [pc, #32]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001c44:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001c48:	6453      	str	r3, [r2, #68]	@ 0x44
 8001c4a:	4b06      	ldr	r3, [pc, #24]	@ (8001c64 <HAL_TIM_Base_MspInit+0x1dc>)
 8001c4c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001c4e:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8001c52:	60fb      	str	r3, [r7, #12]
 8001c54:	68fb      	ldr	r3, [r7, #12]
}
 8001c56:	bf00      	nop
 8001c58:	3730      	adds	r7, #48	@ 0x30
 8001c5a:	46bd      	mov	sp, r7
 8001c5c:	bd80      	pop	{r7, pc}
 8001c5e:	bf00      	nop
 8001c60:	40010000 	.word	0x40010000
 8001c64:	40023800 	.word	0x40023800
 8001c68:	40000400 	.word	0x40000400
 8001c6c:	40000800 	.word	0x40000800
 8001c70:	40000c00 	.word	0x40000c00
 8001c74:	40001000 	.word	0x40001000
 8001c78:	40010400 	.word	0x40010400
 8001c7c:	40014400 	.word	0x40014400
 8001c80:	40014800 	.word	0x40014800

08001c84 <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *timHandle) {
 8001c84:	b580      	push	{r7, lr}
 8001c86:	b08c      	sub	sp, #48	@ 0x30
 8001c88:	af00      	add	r7, sp, #0
 8001c8a:	6078      	str	r0, [r7, #4]

	GPIO_InitTypeDef GPIO_InitStruct = { 0 };
 8001c8c:	f107 031c 	add.w	r3, r7, #28
 8001c90:	2200      	movs	r2, #0
 8001c92:	601a      	str	r2, [r3, #0]
 8001c94:	605a      	str	r2, [r3, #4]
 8001c96:	609a      	str	r2, [r3, #8]
 8001c98:	60da      	str	r2, [r3, #12]
 8001c9a:	611a      	str	r2, [r3, #16]
	if (timHandle->Instance == TIM1) {
 8001c9c:	687b      	ldr	r3, [r7, #4]
 8001c9e:	681b      	ldr	r3, [r3, #0]
 8001ca0:	4a5b      	ldr	r2, [pc, #364]	@ (8001e10 <HAL_TIM_MspPostInit+0x18c>)
 8001ca2:	4293      	cmp	r3, r2
 8001ca4:	d11f      	bne.n	8001ce6 <HAL_TIM_MspPostInit+0x62>
		/* USER CODE BEGIN TIM1_MspPostInit 0 */

		/* USER CODE END TIM1_MspPostInit 0 */
		__HAL_RCC_GPIOA_CLK_ENABLE();
 8001ca6:	2300      	movs	r3, #0
 8001ca8:	61bb      	str	r3, [r7, #24]
 8001caa:	4b5a      	ldr	r3, [pc, #360]	@ (8001e14 <HAL_TIM_MspPostInit+0x190>)
 8001cac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001cae:	4a59      	ldr	r2, [pc, #356]	@ (8001e14 <HAL_TIM_MspPostInit+0x190>)
 8001cb0:	f043 0301 	orr.w	r3, r3, #1
 8001cb4:	6313      	str	r3, [r2, #48]	@ 0x30
 8001cb6:	4b57      	ldr	r3, [pc, #348]	@ (8001e14 <HAL_TIM_MspPostInit+0x190>)
 8001cb8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001cba:	f003 0301 	and.w	r3, r3, #1
 8001cbe:	61bb      	str	r3, [r7, #24]
 8001cc0:	69bb      	ldr	r3, [r7, #24]
		/**TIM1 GPIO Configuration
		 PA8     ------> TIM1_CH1
		 */
		GPIO_InitStruct.Pin = PWM1_Pin;
 8001cc2:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001cc6:	61fb      	str	r3, [r7, #28]
		GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cc8:	2302      	movs	r3, #2
 8001cca:	623b      	str	r3, [r7, #32]
		GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ccc:	2300      	movs	r3, #0
 8001cce:	627b      	str	r3, [r7, #36]	@ 0x24
		GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001cd0:	2300      	movs	r3, #0
 8001cd2:	62bb      	str	r3, [r7, #40]	@ 0x28
		GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 8001cd4:	2301      	movs	r3, #1
 8001cd6:	62fb      	str	r3, [r7, #44]	@ 0x2c
		HAL_GPIO_Init(PWM1_GPIO_Port, &GPIO_InitStruct);
 8001cd8:	f107 031c 	add.w	r3, r7, #28
 8001cdc:	4619      	mov	r1, r3
 8001cde:	484e      	ldr	r0, [pc, #312]	@ (8001e18 <HAL_TIM_MspPostInit+0x194>)
 8001ce0:	f000 fa9c 	bl	800221c <HAL_GPIO_Init>
		/* USER CODE BEGIN TIM11_MspPostInit 1 */

		/* USER CODE END TIM11_MspPostInit 1 */
	}

}
 8001ce4:	e090      	b.n	8001e08 <HAL_TIM_MspPostInit+0x184>
	} else if (timHandle->Instance == TIM2) {
 8001ce6:	687b      	ldr	r3, [r7, #4]
 8001ce8:	681b      	ldr	r3, [r3, #0]
 8001cea:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001cee:	d11e      	bne.n	8001d2e <HAL_TIM_MspPostInit+0xaa>
		__HAL_RCC_GPIOA_CLK_ENABLE();
 8001cf0:	2300      	movs	r3, #0
 8001cf2:	617b      	str	r3, [r7, #20]
 8001cf4:	4b47      	ldr	r3, [pc, #284]	@ (8001e14 <HAL_TIM_MspPostInit+0x190>)
 8001cf6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001cf8:	4a46      	ldr	r2, [pc, #280]	@ (8001e14 <HAL_TIM_MspPostInit+0x190>)
 8001cfa:	f043 0301 	orr.w	r3, r3, #1
 8001cfe:	6313      	str	r3, [r2, #48]	@ 0x30
 8001d00:	4b44      	ldr	r3, [pc, #272]	@ (8001e14 <HAL_TIM_MspPostInit+0x190>)
 8001d02:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d04:	f003 0301 	and.w	r3, r3, #1
 8001d08:	617b      	str	r3, [r7, #20]
 8001d0a:	697b      	ldr	r3, [r7, #20]
		GPIO_InitStruct.Pin = PWM2_Pin | PWM3_Pin;
 8001d0c:	2303      	movs	r3, #3
 8001d0e:	61fb      	str	r3, [r7, #28]
		GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d10:	2302      	movs	r3, #2
 8001d12:	623b      	str	r3, [r7, #32]
		GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d14:	2300      	movs	r3, #0
 8001d16:	627b      	str	r3, [r7, #36]	@ 0x24
		GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d18:	2300      	movs	r3, #0
 8001d1a:	62bb      	str	r3, [r7, #40]	@ 0x28
		GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8001d1c:	2301      	movs	r3, #1
 8001d1e:	62fb      	str	r3, [r7, #44]	@ 0x2c
		HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d20:	f107 031c 	add.w	r3, r7, #28
 8001d24:	4619      	mov	r1, r3
 8001d26:	483c      	ldr	r0, [pc, #240]	@ (8001e18 <HAL_TIM_MspPostInit+0x194>)
 8001d28:	f000 fa78 	bl	800221c <HAL_GPIO_Init>
}
 8001d2c:	e06c      	b.n	8001e08 <HAL_TIM_MspPostInit+0x184>
	} else if (timHandle->Instance == TIM8) {
 8001d2e:	687b      	ldr	r3, [r7, #4]
 8001d30:	681b      	ldr	r3, [r3, #0]
 8001d32:	4a3a      	ldr	r2, [pc, #232]	@ (8001e1c <HAL_TIM_MspPostInit+0x198>)
 8001d34:	4293      	cmp	r3, r2
 8001d36:	d11e      	bne.n	8001d76 <HAL_TIM_MspPostInit+0xf2>
		__HAL_RCC_GPIOC_CLK_ENABLE();
 8001d38:	2300      	movs	r3, #0
 8001d3a:	613b      	str	r3, [r7, #16]
 8001d3c:	4b35      	ldr	r3, [pc, #212]	@ (8001e14 <HAL_TIM_MspPostInit+0x190>)
 8001d3e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d40:	4a34      	ldr	r2, [pc, #208]	@ (8001e14 <HAL_TIM_MspPostInit+0x190>)
 8001d42:	f043 0304 	orr.w	r3, r3, #4
 8001d46:	6313      	str	r3, [r2, #48]	@ 0x30
 8001d48:	4b32      	ldr	r3, [pc, #200]	@ (8001e14 <HAL_TIM_MspPostInit+0x190>)
 8001d4a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d4c:	f003 0304 	and.w	r3, r3, #4
 8001d50:	613b      	str	r3, [r7, #16]
 8001d52:	693b      	ldr	r3, [r7, #16]
		GPIO_InitStruct.Pin = PWM4_Pin;
 8001d54:	2340      	movs	r3, #64	@ 0x40
 8001d56:	61fb      	str	r3, [r7, #28]
		GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d58:	2302      	movs	r3, #2
 8001d5a:	623b      	str	r3, [r7, #32]
		GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d5c:	2300      	movs	r3, #0
 8001d5e:	627b      	str	r3, [r7, #36]	@ 0x24
		GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d60:	2300      	movs	r3, #0
 8001d62:	62bb      	str	r3, [r7, #40]	@ 0x28
		GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 8001d64:	2303      	movs	r3, #3
 8001d66:	62fb      	str	r3, [r7, #44]	@ 0x2c
		HAL_GPIO_Init(PWM4_GPIO_Port, &GPIO_InitStruct);
 8001d68:	f107 031c 	add.w	r3, r7, #28
 8001d6c:	4619      	mov	r1, r3
 8001d6e:	482c      	ldr	r0, [pc, #176]	@ (8001e20 <HAL_TIM_MspPostInit+0x19c>)
 8001d70:	f000 fa54 	bl	800221c <HAL_GPIO_Init>
}
 8001d74:	e048      	b.n	8001e08 <HAL_TIM_MspPostInit+0x184>
	} else if (timHandle->Instance == TIM10) {
 8001d76:	687b      	ldr	r3, [r7, #4]
 8001d78:	681b      	ldr	r3, [r3, #0]
 8001d7a:	4a2a      	ldr	r2, [pc, #168]	@ (8001e24 <HAL_TIM_MspPostInit+0x1a0>)
 8001d7c:	4293      	cmp	r3, r2
 8001d7e:	d11f      	bne.n	8001dc0 <HAL_TIM_MspPostInit+0x13c>
		__HAL_RCC_GPIOB_CLK_ENABLE();
 8001d80:	2300      	movs	r3, #0
 8001d82:	60fb      	str	r3, [r7, #12]
 8001d84:	4b23      	ldr	r3, [pc, #140]	@ (8001e14 <HAL_TIM_MspPostInit+0x190>)
 8001d86:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d88:	4a22      	ldr	r2, [pc, #136]	@ (8001e14 <HAL_TIM_MspPostInit+0x190>)
 8001d8a:	f043 0302 	orr.w	r3, r3, #2
 8001d8e:	6313      	str	r3, [r2, #48]	@ 0x30
 8001d90:	4b20      	ldr	r3, [pc, #128]	@ (8001e14 <HAL_TIM_MspPostInit+0x190>)
 8001d92:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d94:	f003 0302 	and.w	r3, r3, #2
 8001d98:	60fb      	str	r3, [r7, #12]
 8001d9a:	68fb      	ldr	r3, [r7, #12]
		GPIO_InitStruct.Pin = SERVO_1_Pin;
 8001d9c:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001da0:	61fb      	str	r3, [r7, #28]
		GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001da2:	2302      	movs	r3, #2
 8001da4:	623b      	str	r3, [r7, #32]
		GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001da6:	2300      	movs	r3, #0
 8001da8:	627b      	str	r3, [r7, #36]	@ 0x24
		GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001daa:	2300      	movs	r3, #0
 8001dac:	62bb      	str	r3, [r7, #40]	@ 0x28
		GPIO_InitStruct.Alternate = GPIO_AF3_TIM10;
 8001dae:	2303      	movs	r3, #3
 8001db0:	62fb      	str	r3, [r7, #44]	@ 0x2c
		HAL_GPIO_Init(SERVO_1_GPIO_Port, &GPIO_InitStruct);
 8001db2:	f107 031c 	add.w	r3, r7, #28
 8001db6:	4619      	mov	r1, r3
 8001db8:	481b      	ldr	r0, [pc, #108]	@ (8001e28 <HAL_TIM_MspPostInit+0x1a4>)
 8001dba:	f000 fa2f 	bl	800221c <HAL_GPIO_Init>
}
 8001dbe:	e023      	b.n	8001e08 <HAL_TIM_MspPostInit+0x184>
	} else if (timHandle->Instance == TIM11) {
 8001dc0:	687b      	ldr	r3, [r7, #4]
 8001dc2:	681b      	ldr	r3, [r3, #0]
 8001dc4:	4a19      	ldr	r2, [pc, #100]	@ (8001e2c <HAL_TIM_MspPostInit+0x1a8>)
 8001dc6:	4293      	cmp	r3, r2
 8001dc8:	d11e      	bne.n	8001e08 <HAL_TIM_MspPostInit+0x184>
		__HAL_RCC_GPIOB_CLK_ENABLE();
 8001dca:	2300      	movs	r3, #0
 8001dcc:	60bb      	str	r3, [r7, #8]
 8001dce:	4b11      	ldr	r3, [pc, #68]	@ (8001e14 <HAL_TIM_MspPostInit+0x190>)
 8001dd0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001dd2:	4a10      	ldr	r2, [pc, #64]	@ (8001e14 <HAL_TIM_MspPostInit+0x190>)
 8001dd4:	f043 0302 	orr.w	r3, r3, #2
 8001dd8:	6313      	str	r3, [r2, #48]	@ 0x30
 8001dda:	4b0e      	ldr	r3, [pc, #56]	@ (8001e14 <HAL_TIM_MspPostInit+0x190>)
 8001ddc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001dde:	f003 0302 	and.w	r3, r3, #2
 8001de2:	60bb      	str	r3, [r7, #8]
 8001de4:	68bb      	ldr	r3, [r7, #8]
		GPIO_InitStruct.Pin = SERVO_2_Pin;
 8001de6:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8001dea:	61fb      	str	r3, [r7, #28]
		GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dec:	2302      	movs	r3, #2
 8001dee:	623b      	str	r3, [r7, #32]
		GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001df0:	2300      	movs	r3, #0
 8001df2:	627b      	str	r3, [r7, #36]	@ 0x24
		GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001df4:	2300      	movs	r3, #0
 8001df6:	62bb      	str	r3, [r7, #40]	@ 0x28
		GPIO_InitStruct.Alternate = GPIO_AF3_TIM11;
 8001df8:	2303      	movs	r3, #3
 8001dfa:	62fb      	str	r3, [r7, #44]	@ 0x2c
		HAL_GPIO_Init(SERVO_2_GPIO_Port, &GPIO_InitStruct);
 8001dfc:	f107 031c 	add.w	r3, r7, #28
 8001e00:	4619      	mov	r1, r3
 8001e02:	4809      	ldr	r0, [pc, #36]	@ (8001e28 <HAL_TIM_MspPostInit+0x1a4>)
 8001e04:	f000 fa0a 	bl	800221c <HAL_GPIO_Init>
}
 8001e08:	bf00      	nop
 8001e0a:	3730      	adds	r7, #48	@ 0x30
 8001e0c:	46bd      	mov	sp, r7
 8001e0e:	bd80      	pop	{r7, pc}
 8001e10:	40010000 	.word	0x40010000
 8001e14:	40023800 	.word	0x40023800
 8001e18:	40020000 	.word	0x40020000
 8001e1c:	40010400 	.word	0x40010400
 8001e20:	40020800 	.word	0x40020800
 8001e24:	40014400 	.word	0x40014400
 8001e28:	40020400 	.word	0x40020400
 8001e2c:	40014800 	.word	0x40014800

08001e30 <HAL_GPIO_EXTI_Callback>:
}

/* USER CODE BEGIN 1 */

//emergency stop button, negative enable logic
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {
 8001e30:	b580      	push	{r7, lr}
 8001e32:	b082      	sub	sp, #8
 8001e34:	af00      	add	r7, sp, #0
 8001e36:	4603      	mov	r3, r0
 8001e38:	80fb      	strh	r3, [r7, #6]
	if (GPIO_Pin == DISABLE_button_Pin) {
 8001e3a:	88fb      	ldrh	r3, [r7, #6]
 8001e3c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8001e40:	d112      	bne.n	8001e68 <HAL_GPIO_EXTI_Callback+0x38>
		HAL_GPIO_WritePin(ENABLE_GPIO_Port, ENABLE_Pin, GPIO_PIN_SET); //disable the servo the stepper motors
 8001e42:	2201      	movs	r2, #1
 8001e44:	2120      	movs	r1, #32
 8001e46:	480a      	ldr	r0, [pc, #40]	@ (8001e70 <HAL_GPIO_EXTI_Callback+0x40>)
 8001e48:	f000 fb7c 	bl	8002544 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(SERVO_en_GPIO_Port, SERVO_en_Pin, GPIO_PIN_SET); //disable the servo
 8001e4c:	2201      	movs	r2, #1
 8001e4e:	2102      	movs	r1, #2
 8001e50:	4808      	ldr	r0, [pc, #32]	@ (8001e74 <HAL_GPIO_EXTI_Callback+0x44>)
 8001e52:	f000 fb77 	bl	8002544 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(ENDEFF_en_GPIO_Port, ENDEFF_en_Pin, GPIO_PIN_SET); //disable the end_eff
 8001e56:	2201      	movs	r2, #1
 8001e58:	2104      	movs	r1, #4
 8001e5a:	4806      	ldr	r0, [pc, #24]	@ (8001e74 <HAL_GPIO_EXTI_Callback+0x44>)
 8001e5c:	f000 fb72 	bl	8002544 <HAL_GPIO_WritePin>
  __ASM volatile ("cpsid i" : : : "memory");
 8001e60:	b672      	cpsid	i
}
 8001e62:	bf00      	nop
		__disable_irq();

		while (1) {
 8001e64:	bf00      	nop
 8001e66:	e7fd      	b.n	8001e64 <HAL_GPIO_EXTI_Callback+0x34>

		}
	}
}
 8001e68:	bf00      	nop
 8001e6a:	3708      	adds	r7, #8
 8001e6c:	46bd      	mov	sp, r7
 8001e6e:	bd80      	pop	{r7, pc}
 8001e70:	40020800 	.word	0x40020800
 8001e74:	40020400 	.word	0x40020400

08001e78 <Reset_Handler>:
 8001e78:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001eb0 <LoopFillZerobss+0xe>
 8001e7c:	f7ff fa2e 	bl	80012dc <SystemInit>
 8001e80:	480c      	ldr	r0, [pc, #48]	@ (8001eb4 <LoopFillZerobss+0x12>)
 8001e82:	490d      	ldr	r1, [pc, #52]	@ (8001eb8 <LoopFillZerobss+0x16>)
 8001e84:	4a0d      	ldr	r2, [pc, #52]	@ (8001ebc <LoopFillZerobss+0x1a>)
 8001e86:	2300      	movs	r3, #0
 8001e88:	e002      	b.n	8001e90 <LoopCopyDataInit>

08001e8a <CopyDataInit>:
 8001e8a:	58d4      	ldr	r4, [r2, r3]
 8001e8c:	50c4      	str	r4, [r0, r3]
 8001e8e:	3304      	adds	r3, #4

08001e90 <LoopCopyDataInit>:
 8001e90:	18c4      	adds	r4, r0, r3
 8001e92:	428c      	cmp	r4, r1
 8001e94:	d3f9      	bcc.n	8001e8a <CopyDataInit>
 8001e96:	4a0a      	ldr	r2, [pc, #40]	@ (8001ec0 <LoopFillZerobss+0x1e>)
 8001e98:	4c0a      	ldr	r4, [pc, #40]	@ (8001ec4 <LoopFillZerobss+0x22>)
 8001e9a:	2300      	movs	r3, #0
 8001e9c:	e001      	b.n	8001ea2 <LoopFillZerobss>

08001e9e <FillZerobss>:
 8001e9e:	6013      	str	r3, [r2, #0]
 8001ea0:	3204      	adds	r2, #4

08001ea2 <LoopFillZerobss>:
 8001ea2:	42a2      	cmp	r2, r4
 8001ea4:	d3fb      	bcc.n	8001e9e <FillZerobss>
 8001ea6:	f002 fc8b 	bl	80047c0 <__libc_init_array>
 8001eaa:	f7fe fe2b 	bl	8000b04 <main>
 8001eae:	4770      	bx	lr
 8001eb0:	20020000 	.word	0x20020000
 8001eb4:	20000000 	.word	0x20000000
 8001eb8:	2000003c 	.word	0x2000003c
 8001ebc:	08004848 	.word	0x08004848
 8001ec0:	2000003c 	.word	0x2000003c
 8001ec4:	200003a8 	.word	0x200003a8

08001ec8 <ADC_IRQHandler>:
 8001ec8:	e7fe      	b.n	8001ec8 <ADC_IRQHandler>
	...

08001ecc <HAL_Init>:
 8001ecc:	b580      	push	{r7, lr}
 8001ece:	af00      	add	r7, sp, #0
 8001ed0:	4b0e      	ldr	r3, [pc, #56]	@ (8001f0c <HAL_Init+0x40>)
 8001ed2:	681b      	ldr	r3, [r3, #0]
 8001ed4:	4a0d      	ldr	r2, [pc, #52]	@ (8001f0c <HAL_Init+0x40>)
 8001ed6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001eda:	6013      	str	r3, [r2, #0]
 8001edc:	4b0b      	ldr	r3, [pc, #44]	@ (8001f0c <HAL_Init+0x40>)
 8001ede:	681b      	ldr	r3, [r3, #0]
 8001ee0:	4a0a      	ldr	r2, [pc, #40]	@ (8001f0c <HAL_Init+0x40>)
 8001ee2:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001ee6:	6013      	str	r3, [r2, #0]
 8001ee8:	4b08      	ldr	r3, [pc, #32]	@ (8001f0c <HAL_Init+0x40>)
 8001eea:	681b      	ldr	r3, [r3, #0]
 8001eec:	4a07      	ldr	r2, [pc, #28]	@ (8001f0c <HAL_Init+0x40>)
 8001eee:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001ef2:	6013      	str	r3, [r2, #0]
 8001ef4:	2003      	movs	r0, #3
 8001ef6:	f000 f94f 	bl	8002198 <HAL_NVIC_SetPriorityGrouping>
 8001efa:	2000      	movs	r0, #0
 8001efc:	f000 f808 	bl	8001f10 <HAL_InitTick>
 8001f00:	f7ff f950 	bl	80011a4 <HAL_MspInit>
 8001f04:	2300      	movs	r3, #0
 8001f06:	4618      	mov	r0, r3
 8001f08:	bd80      	pop	{r7, pc}
 8001f0a:	bf00      	nop
 8001f0c:	40023c00 	.word	0x40023c00

08001f10 <HAL_InitTick>:
 8001f10:	b580      	push	{r7, lr}
 8001f12:	b082      	sub	sp, #8
 8001f14:	af00      	add	r7, sp, #0
 8001f16:	6078      	str	r0, [r7, #4]
 8001f18:	4b12      	ldr	r3, [pc, #72]	@ (8001f64 <HAL_InitTick+0x54>)
 8001f1a:	681a      	ldr	r2, [r3, #0]
 8001f1c:	4b12      	ldr	r3, [pc, #72]	@ (8001f68 <HAL_InitTick+0x58>)
 8001f1e:	781b      	ldrb	r3, [r3, #0]
 8001f20:	4619      	mov	r1, r3
 8001f22:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001f26:	fbb3 f3f1 	udiv	r3, r3, r1
 8001f2a:	fbb2 f3f3 	udiv	r3, r2, r3
 8001f2e:	4618      	mov	r0, r3
 8001f30:	f000 f967 	bl	8002202 <HAL_SYSTICK_Config>
 8001f34:	4603      	mov	r3, r0
 8001f36:	2b00      	cmp	r3, #0
 8001f38:	d001      	beq.n	8001f3e <HAL_InitTick+0x2e>
 8001f3a:	2301      	movs	r3, #1
 8001f3c:	e00e      	b.n	8001f5c <HAL_InitTick+0x4c>
 8001f3e:	687b      	ldr	r3, [r7, #4]
 8001f40:	2b0f      	cmp	r3, #15
 8001f42:	d80a      	bhi.n	8001f5a <HAL_InitTick+0x4a>
 8001f44:	2200      	movs	r2, #0
 8001f46:	6879      	ldr	r1, [r7, #4]
 8001f48:	f04f 30ff 	mov.w	r0, #4294967295
 8001f4c:	f000 f92f 	bl	80021ae <HAL_NVIC_SetPriority>
 8001f50:	4a06      	ldr	r2, [pc, #24]	@ (8001f6c <HAL_InitTick+0x5c>)
 8001f52:	687b      	ldr	r3, [r7, #4]
 8001f54:	6013      	str	r3, [r2, #0]
 8001f56:	2300      	movs	r3, #0
 8001f58:	e000      	b.n	8001f5c <HAL_InitTick+0x4c>
 8001f5a:	2301      	movs	r3, #1
 8001f5c:	4618      	mov	r0, r3
 8001f5e:	3708      	adds	r7, #8
 8001f60:	46bd      	mov	sp, r7
 8001f62:	bd80      	pop	{r7, pc}
 8001f64:	20000030 	.word	0x20000030
 8001f68:	20000038 	.word	0x20000038
 8001f6c:	20000034 	.word	0x20000034

08001f70 <HAL_IncTick>:
 8001f70:	b480      	push	{r7}
 8001f72:	af00      	add	r7, sp, #0
 8001f74:	4b06      	ldr	r3, [pc, #24]	@ (8001f90 <HAL_IncTick+0x20>)
 8001f76:	781b      	ldrb	r3, [r3, #0]
 8001f78:	461a      	mov	r2, r3
 8001f7a:	4b06      	ldr	r3, [pc, #24]	@ (8001f94 <HAL_IncTick+0x24>)
 8001f7c:	681b      	ldr	r3, [r3, #0]
 8001f7e:	4413      	add	r3, r2
 8001f80:	4a04      	ldr	r2, [pc, #16]	@ (8001f94 <HAL_IncTick+0x24>)
 8001f82:	6013      	str	r3, [r2, #0]
 8001f84:	bf00      	nop
 8001f86:	46bd      	mov	sp, r7
 8001f88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f8c:	4770      	bx	lr
 8001f8e:	bf00      	nop
 8001f90:	20000038 	.word	0x20000038
 8001f94:	200003a4 	.word	0x200003a4

08001f98 <HAL_GetTick>:
 8001f98:	b480      	push	{r7}
 8001f9a:	af00      	add	r7, sp, #0
 8001f9c:	4b03      	ldr	r3, [pc, #12]	@ (8001fac <HAL_GetTick+0x14>)
 8001f9e:	681b      	ldr	r3, [r3, #0]
 8001fa0:	4618      	mov	r0, r3
 8001fa2:	46bd      	mov	sp, r7
 8001fa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fa8:	4770      	bx	lr
 8001faa:	bf00      	nop
 8001fac:	200003a4 	.word	0x200003a4

08001fb0 <HAL_Delay>:
 8001fb0:	b580      	push	{r7, lr}
 8001fb2:	b084      	sub	sp, #16
 8001fb4:	af00      	add	r7, sp, #0
 8001fb6:	6078      	str	r0, [r7, #4]
 8001fb8:	f7ff ffee 	bl	8001f98 <HAL_GetTick>
 8001fbc:	60b8      	str	r0, [r7, #8]
 8001fbe:	687b      	ldr	r3, [r7, #4]
 8001fc0:	60fb      	str	r3, [r7, #12]
 8001fc2:	68fb      	ldr	r3, [r7, #12]
 8001fc4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001fc8:	d005      	beq.n	8001fd6 <HAL_Delay+0x26>
 8001fca:	4b0a      	ldr	r3, [pc, #40]	@ (8001ff4 <HAL_Delay+0x44>)
 8001fcc:	781b      	ldrb	r3, [r3, #0]
 8001fce:	461a      	mov	r2, r3
 8001fd0:	68fb      	ldr	r3, [r7, #12]
 8001fd2:	4413      	add	r3, r2
 8001fd4:	60fb      	str	r3, [r7, #12]
 8001fd6:	bf00      	nop
 8001fd8:	f7ff ffde 	bl	8001f98 <HAL_GetTick>
 8001fdc:	4602      	mov	r2, r0
 8001fde:	68bb      	ldr	r3, [r7, #8]
 8001fe0:	1ad3      	subs	r3, r2, r3
 8001fe2:	68fa      	ldr	r2, [r7, #12]
 8001fe4:	429a      	cmp	r2, r3
 8001fe6:	d8f7      	bhi.n	8001fd8 <HAL_Delay+0x28>
 8001fe8:	bf00      	nop
 8001fea:	bf00      	nop
 8001fec:	3710      	adds	r7, #16
 8001fee:	46bd      	mov	sp, r7
 8001ff0:	bd80      	pop	{r7, pc}
 8001ff2:	bf00      	nop
 8001ff4:	20000038 	.word	0x20000038

08001ff8 <__NVIC_SetPriorityGrouping>:
 8001ff8:	b480      	push	{r7}
 8001ffa:	b085      	sub	sp, #20
 8001ffc:	af00      	add	r7, sp, #0
 8001ffe:	6078      	str	r0, [r7, #4]
 8002000:	687b      	ldr	r3, [r7, #4]
 8002002:	f003 0307 	and.w	r3, r3, #7
 8002006:	60fb      	str	r3, [r7, #12]
 8002008:	4b0c      	ldr	r3, [pc, #48]	@ (800203c <__NVIC_SetPriorityGrouping+0x44>)
 800200a:	68db      	ldr	r3, [r3, #12]
 800200c:	60bb      	str	r3, [r7, #8]
 800200e:	68ba      	ldr	r2, [r7, #8]
 8002010:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8002014:	4013      	ands	r3, r2
 8002016:	60bb      	str	r3, [r7, #8]
 8002018:	68fb      	ldr	r3, [r7, #12]
 800201a:	021a      	lsls	r2, r3, #8
 800201c:	68bb      	ldr	r3, [r7, #8]
 800201e:	4313      	orrs	r3, r2
 8002020:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8002024:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002028:	60bb      	str	r3, [r7, #8]
 800202a:	4a04      	ldr	r2, [pc, #16]	@ (800203c <__NVIC_SetPriorityGrouping+0x44>)
 800202c:	68bb      	ldr	r3, [r7, #8]
 800202e:	60d3      	str	r3, [r2, #12]
 8002030:	bf00      	nop
 8002032:	3714      	adds	r7, #20
 8002034:	46bd      	mov	sp, r7
 8002036:	f85d 7b04 	ldr.w	r7, [sp], #4
 800203a:	4770      	bx	lr
 800203c:	e000ed00 	.word	0xe000ed00

08002040 <__NVIC_GetPriorityGrouping>:
 8002040:	b480      	push	{r7}
 8002042:	af00      	add	r7, sp, #0
 8002044:	4b04      	ldr	r3, [pc, #16]	@ (8002058 <__NVIC_GetPriorityGrouping+0x18>)
 8002046:	68db      	ldr	r3, [r3, #12]
 8002048:	0a1b      	lsrs	r3, r3, #8
 800204a:	f003 0307 	and.w	r3, r3, #7
 800204e:	4618      	mov	r0, r3
 8002050:	46bd      	mov	sp, r7
 8002052:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002056:	4770      	bx	lr
 8002058:	e000ed00 	.word	0xe000ed00

0800205c <__NVIC_EnableIRQ>:
 800205c:	b480      	push	{r7}
 800205e:	b083      	sub	sp, #12
 8002060:	af00      	add	r7, sp, #0
 8002062:	4603      	mov	r3, r0
 8002064:	71fb      	strb	r3, [r7, #7]
 8002066:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800206a:	2b00      	cmp	r3, #0
 800206c:	db0b      	blt.n	8002086 <__NVIC_EnableIRQ+0x2a>
 800206e:	79fb      	ldrb	r3, [r7, #7]
 8002070:	f003 021f 	and.w	r2, r3, #31
 8002074:	4907      	ldr	r1, [pc, #28]	@ (8002094 <__NVIC_EnableIRQ+0x38>)
 8002076:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800207a:	095b      	lsrs	r3, r3, #5
 800207c:	2001      	movs	r0, #1
 800207e:	fa00 f202 	lsl.w	r2, r0, r2
 8002082:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002086:	bf00      	nop
 8002088:	370c      	adds	r7, #12
 800208a:	46bd      	mov	sp, r7
 800208c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002090:	4770      	bx	lr
 8002092:	bf00      	nop
 8002094:	e000e100 	.word	0xe000e100

08002098 <__NVIC_SetPriority>:
 8002098:	b480      	push	{r7}
 800209a:	b083      	sub	sp, #12
 800209c:	af00      	add	r7, sp, #0
 800209e:	4603      	mov	r3, r0
 80020a0:	6039      	str	r1, [r7, #0]
 80020a2:	71fb      	strb	r3, [r7, #7]
 80020a4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80020a8:	2b00      	cmp	r3, #0
 80020aa:	db0a      	blt.n	80020c2 <__NVIC_SetPriority+0x2a>
 80020ac:	683b      	ldr	r3, [r7, #0]
 80020ae:	b2da      	uxtb	r2, r3
 80020b0:	490c      	ldr	r1, [pc, #48]	@ (80020e4 <__NVIC_SetPriority+0x4c>)
 80020b2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80020b6:	0112      	lsls	r2, r2, #4
 80020b8:	b2d2      	uxtb	r2, r2
 80020ba:	440b      	add	r3, r1
 80020bc:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80020c0:	e00a      	b.n	80020d8 <__NVIC_SetPriority+0x40>
 80020c2:	683b      	ldr	r3, [r7, #0]
 80020c4:	b2da      	uxtb	r2, r3
 80020c6:	4908      	ldr	r1, [pc, #32]	@ (80020e8 <__NVIC_SetPriority+0x50>)
 80020c8:	79fb      	ldrb	r3, [r7, #7]
 80020ca:	f003 030f 	and.w	r3, r3, #15
 80020ce:	3b04      	subs	r3, #4
 80020d0:	0112      	lsls	r2, r2, #4
 80020d2:	b2d2      	uxtb	r2, r2
 80020d4:	440b      	add	r3, r1
 80020d6:	761a      	strb	r2, [r3, #24]
 80020d8:	bf00      	nop
 80020da:	370c      	adds	r7, #12
 80020dc:	46bd      	mov	sp, r7
 80020de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020e2:	4770      	bx	lr
 80020e4:	e000e100 	.word	0xe000e100
 80020e8:	e000ed00 	.word	0xe000ed00

080020ec <NVIC_EncodePriority>:
 80020ec:	b480      	push	{r7}
 80020ee:	b089      	sub	sp, #36	@ 0x24
 80020f0:	af00      	add	r7, sp, #0
 80020f2:	60f8      	str	r0, [r7, #12]
 80020f4:	60b9      	str	r1, [r7, #8]
 80020f6:	607a      	str	r2, [r7, #4]
 80020f8:	68fb      	ldr	r3, [r7, #12]
 80020fa:	f003 0307 	and.w	r3, r3, #7
 80020fe:	61fb      	str	r3, [r7, #28]
 8002100:	69fb      	ldr	r3, [r7, #28]
 8002102:	f1c3 0307 	rsb	r3, r3, #7
 8002106:	2b04      	cmp	r3, #4
 8002108:	bf28      	it	cs
 800210a:	2304      	movcs	r3, #4
 800210c:	61bb      	str	r3, [r7, #24]
 800210e:	69fb      	ldr	r3, [r7, #28]
 8002110:	3304      	adds	r3, #4
 8002112:	2b06      	cmp	r3, #6
 8002114:	d902      	bls.n	800211c <NVIC_EncodePriority+0x30>
 8002116:	69fb      	ldr	r3, [r7, #28]
 8002118:	3b03      	subs	r3, #3
 800211a:	e000      	b.n	800211e <NVIC_EncodePriority+0x32>
 800211c:	2300      	movs	r3, #0
 800211e:	617b      	str	r3, [r7, #20]
 8002120:	f04f 32ff 	mov.w	r2, #4294967295
 8002124:	69bb      	ldr	r3, [r7, #24]
 8002126:	fa02 f303 	lsl.w	r3, r2, r3
 800212a:	43da      	mvns	r2, r3
 800212c:	68bb      	ldr	r3, [r7, #8]
 800212e:	401a      	ands	r2, r3
 8002130:	697b      	ldr	r3, [r7, #20]
 8002132:	409a      	lsls	r2, r3
 8002134:	f04f 31ff 	mov.w	r1, #4294967295
 8002138:	697b      	ldr	r3, [r7, #20]
 800213a:	fa01 f303 	lsl.w	r3, r1, r3
 800213e:	43d9      	mvns	r1, r3
 8002140:	687b      	ldr	r3, [r7, #4]
 8002142:	400b      	ands	r3, r1
 8002144:	4313      	orrs	r3, r2
 8002146:	4618      	mov	r0, r3
 8002148:	3724      	adds	r7, #36	@ 0x24
 800214a:	46bd      	mov	sp, r7
 800214c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002150:	4770      	bx	lr
	...

08002154 <SysTick_Config>:
 8002154:	b580      	push	{r7, lr}
 8002156:	b082      	sub	sp, #8
 8002158:	af00      	add	r7, sp, #0
 800215a:	6078      	str	r0, [r7, #4]
 800215c:	687b      	ldr	r3, [r7, #4]
 800215e:	3b01      	subs	r3, #1
 8002160:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002164:	d301      	bcc.n	800216a <SysTick_Config+0x16>
 8002166:	2301      	movs	r3, #1
 8002168:	e00f      	b.n	800218a <SysTick_Config+0x36>
 800216a:	4a0a      	ldr	r2, [pc, #40]	@ (8002194 <SysTick_Config+0x40>)
 800216c:	687b      	ldr	r3, [r7, #4]
 800216e:	3b01      	subs	r3, #1
 8002170:	6053      	str	r3, [r2, #4]
 8002172:	210f      	movs	r1, #15
 8002174:	f04f 30ff 	mov.w	r0, #4294967295
 8002178:	f7ff ff8e 	bl	8002098 <__NVIC_SetPriority>
 800217c:	4b05      	ldr	r3, [pc, #20]	@ (8002194 <SysTick_Config+0x40>)
 800217e:	2200      	movs	r2, #0
 8002180:	609a      	str	r2, [r3, #8]
 8002182:	4b04      	ldr	r3, [pc, #16]	@ (8002194 <SysTick_Config+0x40>)
 8002184:	2207      	movs	r2, #7
 8002186:	601a      	str	r2, [r3, #0]
 8002188:	2300      	movs	r3, #0
 800218a:	4618      	mov	r0, r3
 800218c:	3708      	adds	r7, #8
 800218e:	46bd      	mov	sp, r7
 8002190:	bd80      	pop	{r7, pc}
 8002192:	bf00      	nop
 8002194:	e000e010 	.word	0xe000e010

08002198 <HAL_NVIC_SetPriorityGrouping>:
 8002198:	b580      	push	{r7, lr}
 800219a:	b082      	sub	sp, #8
 800219c:	af00      	add	r7, sp, #0
 800219e:	6078      	str	r0, [r7, #4]
 80021a0:	6878      	ldr	r0, [r7, #4]
 80021a2:	f7ff ff29 	bl	8001ff8 <__NVIC_SetPriorityGrouping>
 80021a6:	bf00      	nop
 80021a8:	3708      	adds	r7, #8
 80021aa:	46bd      	mov	sp, r7
 80021ac:	bd80      	pop	{r7, pc}

080021ae <HAL_NVIC_SetPriority>:
 80021ae:	b580      	push	{r7, lr}
 80021b0:	b086      	sub	sp, #24
 80021b2:	af00      	add	r7, sp, #0
 80021b4:	4603      	mov	r3, r0
 80021b6:	60b9      	str	r1, [r7, #8]
 80021b8:	607a      	str	r2, [r7, #4]
 80021ba:	73fb      	strb	r3, [r7, #15]
 80021bc:	2300      	movs	r3, #0
 80021be:	617b      	str	r3, [r7, #20]
 80021c0:	f7ff ff3e 	bl	8002040 <__NVIC_GetPriorityGrouping>
 80021c4:	6178      	str	r0, [r7, #20]
 80021c6:	687a      	ldr	r2, [r7, #4]
 80021c8:	68b9      	ldr	r1, [r7, #8]
 80021ca:	6978      	ldr	r0, [r7, #20]
 80021cc:	f7ff ff8e 	bl	80020ec <NVIC_EncodePriority>
 80021d0:	4602      	mov	r2, r0
 80021d2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80021d6:	4611      	mov	r1, r2
 80021d8:	4618      	mov	r0, r3
 80021da:	f7ff ff5d 	bl	8002098 <__NVIC_SetPriority>
 80021de:	bf00      	nop
 80021e0:	3718      	adds	r7, #24
 80021e2:	46bd      	mov	sp, r7
 80021e4:	bd80      	pop	{r7, pc}

080021e6 <HAL_NVIC_EnableIRQ>:
 80021e6:	b580      	push	{r7, lr}
 80021e8:	b082      	sub	sp, #8
 80021ea:	af00      	add	r7, sp, #0
 80021ec:	4603      	mov	r3, r0
 80021ee:	71fb      	strb	r3, [r7, #7]
 80021f0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80021f4:	4618      	mov	r0, r3
 80021f6:	f7ff ff31 	bl	800205c <__NVIC_EnableIRQ>
 80021fa:	bf00      	nop
 80021fc:	3708      	adds	r7, #8
 80021fe:	46bd      	mov	sp, r7
 8002200:	bd80      	pop	{r7, pc}

08002202 <HAL_SYSTICK_Config>:
 8002202:	b580      	push	{r7, lr}
 8002204:	b082      	sub	sp, #8
 8002206:	af00      	add	r7, sp, #0
 8002208:	6078      	str	r0, [r7, #4]
 800220a:	6878      	ldr	r0, [r7, #4]
 800220c:	f7ff ffa2 	bl	8002154 <SysTick_Config>
 8002210:	4603      	mov	r3, r0
 8002212:	4618      	mov	r0, r3
 8002214:	3708      	adds	r7, #8
 8002216:	46bd      	mov	sp, r7
 8002218:	bd80      	pop	{r7, pc}
	...

0800221c <HAL_GPIO_Init>:
 800221c:	b480      	push	{r7}
 800221e:	b089      	sub	sp, #36	@ 0x24
 8002220:	af00      	add	r7, sp, #0
 8002222:	6078      	str	r0, [r7, #4]
 8002224:	6039      	str	r1, [r7, #0]
 8002226:	2300      	movs	r3, #0
 8002228:	617b      	str	r3, [r7, #20]
 800222a:	2300      	movs	r3, #0
 800222c:	613b      	str	r3, [r7, #16]
 800222e:	2300      	movs	r3, #0
 8002230:	61bb      	str	r3, [r7, #24]
 8002232:	2300      	movs	r3, #0
 8002234:	61fb      	str	r3, [r7, #28]
 8002236:	e165      	b.n	8002504 <HAL_GPIO_Init+0x2e8>
 8002238:	2201      	movs	r2, #1
 800223a:	69fb      	ldr	r3, [r7, #28]
 800223c:	fa02 f303 	lsl.w	r3, r2, r3
 8002240:	617b      	str	r3, [r7, #20]
 8002242:	683b      	ldr	r3, [r7, #0]
 8002244:	681b      	ldr	r3, [r3, #0]
 8002246:	697a      	ldr	r2, [r7, #20]
 8002248:	4013      	ands	r3, r2
 800224a:	613b      	str	r3, [r7, #16]
 800224c:	693a      	ldr	r2, [r7, #16]
 800224e:	697b      	ldr	r3, [r7, #20]
 8002250:	429a      	cmp	r2, r3
 8002252:	f040 8154 	bne.w	80024fe <HAL_GPIO_Init+0x2e2>
 8002256:	683b      	ldr	r3, [r7, #0]
 8002258:	685b      	ldr	r3, [r3, #4]
 800225a:	f003 0303 	and.w	r3, r3, #3
 800225e:	2b01      	cmp	r3, #1
 8002260:	d005      	beq.n	800226e <HAL_GPIO_Init+0x52>
 8002262:	683b      	ldr	r3, [r7, #0]
 8002264:	685b      	ldr	r3, [r3, #4]
 8002266:	f003 0303 	and.w	r3, r3, #3
 800226a:	2b02      	cmp	r3, #2
 800226c:	d130      	bne.n	80022d0 <HAL_GPIO_Init+0xb4>
 800226e:	687b      	ldr	r3, [r7, #4]
 8002270:	689b      	ldr	r3, [r3, #8]
 8002272:	61bb      	str	r3, [r7, #24]
 8002274:	69fb      	ldr	r3, [r7, #28]
 8002276:	005b      	lsls	r3, r3, #1
 8002278:	2203      	movs	r2, #3
 800227a:	fa02 f303 	lsl.w	r3, r2, r3
 800227e:	43db      	mvns	r3, r3
 8002280:	69ba      	ldr	r2, [r7, #24]
 8002282:	4013      	ands	r3, r2
 8002284:	61bb      	str	r3, [r7, #24]
 8002286:	683b      	ldr	r3, [r7, #0]
 8002288:	68da      	ldr	r2, [r3, #12]
 800228a:	69fb      	ldr	r3, [r7, #28]
 800228c:	005b      	lsls	r3, r3, #1
 800228e:	fa02 f303 	lsl.w	r3, r2, r3
 8002292:	69ba      	ldr	r2, [r7, #24]
 8002294:	4313      	orrs	r3, r2
 8002296:	61bb      	str	r3, [r7, #24]
 8002298:	687b      	ldr	r3, [r7, #4]
 800229a:	69ba      	ldr	r2, [r7, #24]
 800229c:	609a      	str	r2, [r3, #8]
 800229e:	687b      	ldr	r3, [r7, #4]
 80022a0:	685b      	ldr	r3, [r3, #4]
 80022a2:	61bb      	str	r3, [r7, #24]
 80022a4:	2201      	movs	r2, #1
 80022a6:	69fb      	ldr	r3, [r7, #28]
 80022a8:	fa02 f303 	lsl.w	r3, r2, r3
 80022ac:	43db      	mvns	r3, r3
 80022ae:	69ba      	ldr	r2, [r7, #24]
 80022b0:	4013      	ands	r3, r2
 80022b2:	61bb      	str	r3, [r7, #24]
 80022b4:	683b      	ldr	r3, [r7, #0]
 80022b6:	685b      	ldr	r3, [r3, #4]
 80022b8:	091b      	lsrs	r3, r3, #4
 80022ba:	f003 0201 	and.w	r2, r3, #1
 80022be:	69fb      	ldr	r3, [r7, #28]
 80022c0:	fa02 f303 	lsl.w	r3, r2, r3
 80022c4:	69ba      	ldr	r2, [r7, #24]
 80022c6:	4313      	orrs	r3, r2
 80022c8:	61bb      	str	r3, [r7, #24]
 80022ca:	687b      	ldr	r3, [r7, #4]
 80022cc:	69ba      	ldr	r2, [r7, #24]
 80022ce:	605a      	str	r2, [r3, #4]
 80022d0:	683b      	ldr	r3, [r7, #0]
 80022d2:	685b      	ldr	r3, [r3, #4]
 80022d4:	f003 0303 	and.w	r3, r3, #3
 80022d8:	2b03      	cmp	r3, #3
 80022da:	d017      	beq.n	800230c <HAL_GPIO_Init+0xf0>
 80022dc:	687b      	ldr	r3, [r7, #4]
 80022de:	68db      	ldr	r3, [r3, #12]
 80022e0:	61bb      	str	r3, [r7, #24]
 80022e2:	69fb      	ldr	r3, [r7, #28]
 80022e4:	005b      	lsls	r3, r3, #1
 80022e6:	2203      	movs	r2, #3
 80022e8:	fa02 f303 	lsl.w	r3, r2, r3
 80022ec:	43db      	mvns	r3, r3
 80022ee:	69ba      	ldr	r2, [r7, #24]
 80022f0:	4013      	ands	r3, r2
 80022f2:	61bb      	str	r3, [r7, #24]
 80022f4:	683b      	ldr	r3, [r7, #0]
 80022f6:	689a      	ldr	r2, [r3, #8]
 80022f8:	69fb      	ldr	r3, [r7, #28]
 80022fa:	005b      	lsls	r3, r3, #1
 80022fc:	fa02 f303 	lsl.w	r3, r2, r3
 8002300:	69ba      	ldr	r2, [r7, #24]
 8002302:	4313      	orrs	r3, r2
 8002304:	61bb      	str	r3, [r7, #24]
 8002306:	687b      	ldr	r3, [r7, #4]
 8002308:	69ba      	ldr	r2, [r7, #24]
 800230a:	60da      	str	r2, [r3, #12]
 800230c:	683b      	ldr	r3, [r7, #0]
 800230e:	685b      	ldr	r3, [r3, #4]
 8002310:	f003 0303 	and.w	r3, r3, #3
 8002314:	2b02      	cmp	r3, #2
 8002316:	d123      	bne.n	8002360 <HAL_GPIO_Init+0x144>
 8002318:	69fb      	ldr	r3, [r7, #28]
 800231a:	08da      	lsrs	r2, r3, #3
 800231c:	687b      	ldr	r3, [r7, #4]
 800231e:	3208      	adds	r2, #8
 8002320:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002324:	61bb      	str	r3, [r7, #24]
 8002326:	69fb      	ldr	r3, [r7, #28]
 8002328:	f003 0307 	and.w	r3, r3, #7
 800232c:	009b      	lsls	r3, r3, #2
 800232e:	220f      	movs	r2, #15
 8002330:	fa02 f303 	lsl.w	r3, r2, r3
 8002334:	43db      	mvns	r3, r3
 8002336:	69ba      	ldr	r2, [r7, #24]
 8002338:	4013      	ands	r3, r2
 800233a:	61bb      	str	r3, [r7, #24]
 800233c:	683b      	ldr	r3, [r7, #0]
 800233e:	691a      	ldr	r2, [r3, #16]
 8002340:	69fb      	ldr	r3, [r7, #28]
 8002342:	f003 0307 	and.w	r3, r3, #7
 8002346:	009b      	lsls	r3, r3, #2
 8002348:	fa02 f303 	lsl.w	r3, r2, r3
 800234c:	69ba      	ldr	r2, [r7, #24]
 800234e:	4313      	orrs	r3, r2
 8002350:	61bb      	str	r3, [r7, #24]
 8002352:	69fb      	ldr	r3, [r7, #28]
 8002354:	08da      	lsrs	r2, r3, #3
 8002356:	687b      	ldr	r3, [r7, #4]
 8002358:	3208      	adds	r2, #8
 800235a:	69b9      	ldr	r1, [r7, #24]
 800235c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002360:	687b      	ldr	r3, [r7, #4]
 8002362:	681b      	ldr	r3, [r3, #0]
 8002364:	61bb      	str	r3, [r7, #24]
 8002366:	69fb      	ldr	r3, [r7, #28]
 8002368:	005b      	lsls	r3, r3, #1
 800236a:	2203      	movs	r2, #3
 800236c:	fa02 f303 	lsl.w	r3, r2, r3
 8002370:	43db      	mvns	r3, r3
 8002372:	69ba      	ldr	r2, [r7, #24]
 8002374:	4013      	ands	r3, r2
 8002376:	61bb      	str	r3, [r7, #24]
 8002378:	683b      	ldr	r3, [r7, #0]
 800237a:	685b      	ldr	r3, [r3, #4]
 800237c:	f003 0203 	and.w	r2, r3, #3
 8002380:	69fb      	ldr	r3, [r7, #28]
 8002382:	005b      	lsls	r3, r3, #1
 8002384:	fa02 f303 	lsl.w	r3, r2, r3
 8002388:	69ba      	ldr	r2, [r7, #24]
 800238a:	4313      	orrs	r3, r2
 800238c:	61bb      	str	r3, [r7, #24]
 800238e:	687b      	ldr	r3, [r7, #4]
 8002390:	69ba      	ldr	r2, [r7, #24]
 8002392:	601a      	str	r2, [r3, #0]
 8002394:	683b      	ldr	r3, [r7, #0]
 8002396:	685b      	ldr	r3, [r3, #4]
 8002398:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 800239c:	2b00      	cmp	r3, #0
 800239e:	f000 80ae 	beq.w	80024fe <HAL_GPIO_Init+0x2e2>
 80023a2:	2300      	movs	r3, #0
 80023a4:	60fb      	str	r3, [r7, #12]
 80023a6:	4b5d      	ldr	r3, [pc, #372]	@ (800251c <HAL_GPIO_Init+0x300>)
 80023a8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80023aa:	4a5c      	ldr	r2, [pc, #368]	@ (800251c <HAL_GPIO_Init+0x300>)
 80023ac:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80023b0:	6453      	str	r3, [r2, #68]	@ 0x44
 80023b2:	4b5a      	ldr	r3, [pc, #360]	@ (800251c <HAL_GPIO_Init+0x300>)
 80023b4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80023b6:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80023ba:	60fb      	str	r3, [r7, #12]
 80023bc:	68fb      	ldr	r3, [r7, #12]
 80023be:	4a58      	ldr	r2, [pc, #352]	@ (8002520 <HAL_GPIO_Init+0x304>)
 80023c0:	69fb      	ldr	r3, [r7, #28]
 80023c2:	089b      	lsrs	r3, r3, #2
 80023c4:	3302      	adds	r3, #2
 80023c6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80023ca:	61bb      	str	r3, [r7, #24]
 80023cc:	69fb      	ldr	r3, [r7, #28]
 80023ce:	f003 0303 	and.w	r3, r3, #3
 80023d2:	009b      	lsls	r3, r3, #2
 80023d4:	220f      	movs	r2, #15
 80023d6:	fa02 f303 	lsl.w	r3, r2, r3
 80023da:	43db      	mvns	r3, r3
 80023dc:	69ba      	ldr	r2, [r7, #24]
 80023de:	4013      	ands	r3, r2
 80023e0:	61bb      	str	r3, [r7, #24]
 80023e2:	687b      	ldr	r3, [r7, #4]
 80023e4:	4a4f      	ldr	r2, [pc, #316]	@ (8002524 <HAL_GPIO_Init+0x308>)
 80023e6:	4293      	cmp	r3, r2
 80023e8:	d025      	beq.n	8002436 <HAL_GPIO_Init+0x21a>
 80023ea:	687b      	ldr	r3, [r7, #4]
 80023ec:	4a4e      	ldr	r2, [pc, #312]	@ (8002528 <HAL_GPIO_Init+0x30c>)
 80023ee:	4293      	cmp	r3, r2
 80023f0:	d01f      	beq.n	8002432 <HAL_GPIO_Init+0x216>
 80023f2:	687b      	ldr	r3, [r7, #4]
 80023f4:	4a4d      	ldr	r2, [pc, #308]	@ (800252c <HAL_GPIO_Init+0x310>)
 80023f6:	4293      	cmp	r3, r2
 80023f8:	d019      	beq.n	800242e <HAL_GPIO_Init+0x212>
 80023fa:	687b      	ldr	r3, [r7, #4]
 80023fc:	4a4c      	ldr	r2, [pc, #304]	@ (8002530 <HAL_GPIO_Init+0x314>)
 80023fe:	4293      	cmp	r3, r2
 8002400:	d013      	beq.n	800242a <HAL_GPIO_Init+0x20e>
 8002402:	687b      	ldr	r3, [r7, #4]
 8002404:	4a4b      	ldr	r2, [pc, #300]	@ (8002534 <HAL_GPIO_Init+0x318>)
 8002406:	4293      	cmp	r3, r2
 8002408:	d00d      	beq.n	8002426 <HAL_GPIO_Init+0x20a>
 800240a:	687b      	ldr	r3, [r7, #4]
 800240c:	4a4a      	ldr	r2, [pc, #296]	@ (8002538 <HAL_GPIO_Init+0x31c>)
 800240e:	4293      	cmp	r3, r2
 8002410:	d007      	beq.n	8002422 <HAL_GPIO_Init+0x206>
 8002412:	687b      	ldr	r3, [r7, #4]
 8002414:	4a49      	ldr	r2, [pc, #292]	@ (800253c <HAL_GPIO_Init+0x320>)
 8002416:	4293      	cmp	r3, r2
 8002418:	d101      	bne.n	800241e <HAL_GPIO_Init+0x202>
 800241a:	2306      	movs	r3, #6
 800241c:	e00c      	b.n	8002438 <HAL_GPIO_Init+0x21c>
 800241e:	2307      	movs	r3, #7
 8002420:	e00a      	b.n	8002438 <HAL_GPIO_Init+0x21c>
 8002422:	2305      	movs	r3, #5
 8002424:	e008      	b.n	8002438 <HAL_GPIO_Init+0x21c>
 8002426:	2304      	movs	r3, #4
 8002428:	e006      	b.n	8002438 <HAL_GPIO_Init+0x21c>
 800242a:	2303      	movs	r3, #3
 800242c:	e004      	b.n	8002438 <HAL_GPIO_Init+0x21c>
 800242e:	2302      	movs	r3, #2
 8002430:	e002      	b.n	8002438 <HAL_GPIO_Init+0x21c>
 8002432:	2301      	movs	r3, #1
 8002434:	e000      	b.n	8002438 <HAL_GPIO_Init+0x21c>
 8002436:	2300      	movs	r3, #0
 8002438:	69fa      	ldr	r2, [r7, #28]
 800243a:	f002 0203 	and.w	r2, r2, #3
 800243e:	0092      	lsls	r2, r2, #2
 8002440:	4093      	lsls	r3, r2
 8002442:	69ba      	ldr	r2, [r7, #24]
 8002444:	4313      	orrs	r3, r2
 8002446:	61bb      	str	r3, [r7, #24]
 8002448:	4935      	ldr	r1, [pc, #212]	@ (8002520 <HAL_GPIO_Init+0x304>)
 800244a:	69fb      	ldr	r3, [r7, #28]
 800244c:	089b      	lsrs	r3, r3, #2
 800244e:	3302      	adds	r3, #2
 8002450:	69ba      	ldr	r2, [r7, #24]
 8002452:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002456:	4b3a      	ldr	r3, [pc, #232]	@ (8002540 <HAL_GPIO_Init+0x324>)
 8002458:	689b      	ldr	r3, [r3, #8]
 800245a:	61bb      	str	r3, [r7, #24]
 800245c:	693b      	ldr	r3, [r7, #16]
 800245e:	43db      	mvns	r3, r3
 8002460:	69ba      	ldr	r2, [r7, #24]
 8002462:	4013      	ands	r3, r2
 8002464:	61bb      	str	r3, [r7, #24]
 8002466:	683b      	ldr	r3, [r7, #0]
 8002468:	685b      	ldr	r3, [r3, #4]
 800246a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800246e:	2b00      	cmp	r3, #0
 8002470:	d003      	beq.n	800247a <HAL_GPIO_Init+0x25e>
 8002472:	69ba      	ldr	r2, [r7, #24]
 8002474:	693b      	ldr	r3, [r7, #16]
 8002476:	4313      	orrs	r3, r2
 8002478:	61bb      	str	r3, [r7, #24]
 800247a:	4a31      	ldr	r2, [pc, #196]	@ (8002540 <HAL_GPIO_Init+0x324>)
 800247c:	69bb      	ldr	r3, [r7, #24]
 800247e:	6093      	str	r3, [r2, #8]
 8002480:	4b2f      	ldr	r3, [pc, #188]	@ (8002540 <HAL_GPIO_Init+0x324>)
 8002482:	68db      	ldr	r3, [r3, #12]
 8002484:	61bb      	str	r3, [r7, #24]
 8002486:	693b      	ldr	r3, [r7, #16]
 8002488:	43db      	mvns	r3, r3
 800248a:	69ba      	ldr	r2, [r7, #24]
 800248c:	4013      	ands	r3, r2
 800248e:	61bb      	str	r3, [r7, #24]
 8002490:	683b      	ldr	r3, [r7, #0]
 8002492:	685b      	ldr	r3, [r3, #4]
 8002494:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002498:	2b00      	cmp	r3, #0
 800249a:	d003      	beq.n	80024a4 <HAL_GPIO_Init+0x288>
 800249c:	69ba      	ldr	r2, [r7, #24]
 800249e:	693b      	ldr	r3, [r7, #16]
 80024a0:	4313      	orrs	r3, r2
 80024a2:	61bb      	str	r3, [r7, #24]
 80024a4:	4a26      	ldr	r2, [pc, #152]	@ (8002540 <HAL_GPIO_Init+0x324>)
 80024a6:	69bb      	ldr	r3, [r7, #24]
 80024a8:	60d3      	str	r3, [r2, #12]
 80024aa:	4b25      	ldr	r3, [pc, #148]	@ (8002540 <HAL_GPIO_Init+0x324>)
 80024ac:	685b      	ldr	r3, [r3, #4]
 80024ae:	61bb      	str	r3, [r7, #24]
 80024b0:	693b      	ldr	r3, [r7, #16]
 80024b2:	43db      	mvns	r3, r3
 80024b4:	69ba      	ldr	r2, [r7, #24]
 80024b6:	4013      	ands	r3, r2
 80024b8:	61bb      	str	r3, [r7, #24]
 80024ba:	683b      	ldr	r3, [r7, #0]
 80024bc:	685b      	ldr	r3, [r3, #4]
 80024be:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80024c2:	2b00      	cmp	r3, #0
 80024c4:	d003      	beq.n	80024ce <HAL_GPIO_Init+0x2b2>
 80024c6:	69ba      	ldr	r2, [r7, #24]
 80024c8:	693b      	ldr	r3, [r7, #16]
 80024ca:	4313      	orrs	r3, r2
 80024cc:	61bb      	str	r3, [r7, #24]
 80024ce:	4a1c      	ldr	r2, [pc, #112]	@ (8002540 <HAL_GPIO_Init+0x324>)
 80024d0:	69bb      	ldr	r3, [r7, #24]
 80024d2:	6053      	str	r3, [r2, #4]
 80024d4:	4b1a      	ldr	r3, [pc, #104]	@ (8002540 <HAL_GPIO_Init+0x324>)
 80024d6:	681b      	ldr	r3, [r3, #0]
 80024d8:	61bb      	str	r3, [r7, #24]
 80024da:	693b      	ldr	r3, [r7, #16]
 80024dc:	43db      	mvns	r3, r3
 80024de:	69ba      	ldr	r2, [r7, #24]
 80024e0:	4013      	ands	r3, r2
 80024e2:	61bb      	str	r3, [r7, #24]
 80024e4:	683b      	ldr	r3, [r7, #0]
 80024e6:	685b      	ldr	r3, [r3, #4]
 80024e8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80024ec:	2b00      	cmp	r3, #0
 80024ee:	d003      	beq.n	80024f8 <HAL_GPIO_Init+0x2dc>
 80024f0:	69ba      	ldr	r2, [r7, #24]
 80024f2:	693b      	ldr	r3, [r7, #16]
 80024f4:	4313      	orrs	r3, r2
 80024f6:	61bb      	str	r3, [r7, #24]
 80024f8:	4a11      	ldr	r2, [pc, #68]	@ (8002540 <HAL_GPIO_Init+0x324>)
 80024fa:	69bb      	ldr	r3, [r7, #24]
 80024fc:	6013      	str	r3, [r2, #0]
 80024fe:	69fb      	ldr	r3, [r7, #28]
 8002500:	3301      	adds	r3, #1
 8002502:	61fb      	str	r3, [r7, #28]
 8002504:	69fb      	ldr	r3, [r7, #28]
 8002506:	2b0f      	cmp	r3, #15
 8002508:	f67f ae96 	bls.w	8002238 <HAL_GPIO_Init+0x1c>
 800250c:	bf00      	nop
 800250e:	bf00      	nop
 8002510:	3724      	adds	r7, #36	@ 0x24
 8002512:	46bd      	mov	sp, r7
 8002514:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002518:	4770      	bx	lr
 800251a:	bf00      	nop
 800251c:	40023800 	.word	0x40023800
 8002520:	40013800 	.word	0x40013800
 8002524:	40020000 	.word	0x40020000
 8002528:	40020400 	.word	0x40020400
 800252c:	40020800 	.word	0x40020800
 8002530:	40020c00 	.word	0x40020c00
 8002534:	40021000 	.word	0x40021000
 8002538:	40021400 	.word	0x40021400
 800253c:	40021800 	.word	0x40021800
 8002540:	40013c00 	.word	0x40013c00

08002544 <HAL_GPIO_WritePin>:
 8002544:	b480      	push	{r7}
 8002546:	b083      	sub	sp, #12
 8002548:	af00      	add	r7, sp, #0
 800254a:	6078      	str	r0, [r7, #4]
 800254c:	460b      	mov	r3, r1
 800254e:	807b      	strh	r3, [r7, #2]
 8002550:	4613      	mov	r3, r2
 8002552:	707b      	strb	r3, [r7, #1]
 8002554:	787b      	ldrb	r3, [r7, #1]
 8002556:	2b00      	cmp	r3, #0
 8002558:	d003      	beq.n	8002562 <HAL_GPIO_WritePin+0x1e>
 800255a:	887a      	ldrh	r2, [r7, #2]
 800255c:	687b      	ldr	r3, [r7, #4]
 800255e:	619a      	str	r2, [r3, #24]
 8002560:	e003      	b.n	800256a <HAL_GPIO_WritePin+0x26>
 8002562:	887b      	ldrh	r3, [r7, #2]
 8002564:	041a      	lsls	r2, r3, #16
 8002566:	687b      	ldr	r3, [r7, #4]
 8002568:	619a      	str	r2, [r3, #24]
 800256a:	bf00      	nop
 800256c:	370c      	adds	r7, #12
 800256e:	46bd      	mov	sp, r7
 8002570:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002574:	4770      	bx	lr

08002576 <HAL_GPIO_TogglePin>:
 8002576:	b480      	push	{r7}
 8002578:	b085      	sub	sp, #20
 800257a:	af00      	add	r7, sp, #0
 800257c:	6078      	str	r0, [r7, #4]
 800257e:	460b      	mov	r3, r1
 8002580:	807b      	strh	r3, [r7, #2]
 8002582:	687b      	ldr	r3, [r7, #4]
 8002584:	695b      	ldr	r3, [r3, #20]
 8002586:	60fb      	str	r3, [r7, #12]
 8002588:	887a      	ldrh	r2, [r7, #2]
 800258a:	68fb      	ldr	r3, [r7, #12]
 800258c:	4013      	ands	r3, r2
 800258e:	041a      	lsls	r2, r3, #16
 8002590:	68fb      	ldr	r3, [r7, #12]
 8002592:	43d9      	mvns	r1, r3
 8002594:	887b      	ldrh	r3, [r7, #2]
 8002596:	400b      	ands	r3, r1
 8002598:	431a      	orrs	r2, r3
 800259a:	687b      	ldr	r3, [r7, #4]
 800259c:	619a      	str	r2, [r3, #24]
 800259e:	bf00      	nop
 80025a0:	3714      	adds	r7, #20
 80025a2:	46bd      	mov	sp, r7
 80025a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025a8:	4770      	bx	lr
	...

080025ac <HAL_GPIO_EXTI_IRQHandler>:
 80025ac:	b580      	push	{r7, lr}
 80025ae:	b082      	sub	sp, #8
 80025b0:	af00      	add	r7, sp, #0
 80025b2:	4603      	mov	r3, r0
 80025b4:	80fb      	strh	r3, [r7, #6]
 80025b6:	4b08      	ldr	r3, [pc, #32]	@ (80025d8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80025b8:	695a      	ldr	r2, [r3, #20]
 80025ba:	88fb      	ldrh	r3, [r7, #6]
 80025bc:	4013      	ands	r3, r2
 80025be:	2b00      	cmp	r3, #0
 80025c0:	d006      	beq.n	80025d0 <HAL_GPIO_EXTI_IRQHandler+0x24>
 80025c2:	4a05      	ldr	r2, [pc, #20]	@ (80025d8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80025c4:	88fb      	ldrh	r3, [r7, #6]
 80025c6:	6153      	str	r3, [r2, #20]
 80025c8:	88fb      	ldrh	r3, [r7, #6]
 80025ca:	4618      	mov	r0, r3
 80025cc:	f7ff fc30 	bl	8001e30 <HAL_GPIO_EXTI_Callback>
 80025d0:	bf00      	nop
 80025d2:	3708      	adds	r7, #8
 80025d4:	46bd      	mov	sp, r7
 80025d6:	bd80      	pop	{r7, pc}
 80025d8:	40013c00 	.word	0x40013c00

080025dc <HAL_RCC_ClockConfig>:
 80025dc:	b580      	push	{r7, lr}
 80025de:	b084      	sub	sp, #16
 80025e0:	af00      	add	r7, sp, #0
 80025e2:	6078      	str	r0, [r7, #4]
 80025e4:	6039      	str	r1, [r7, #0]
 80025e6:	687b      	ldr	r3, [r7, #4]
 80025e8:	2b00      	cmp	r3, #0
 80025ea:	d101      	bne.n	80025f0 <HAL_RCC_ClockConfig+0x14>
 80025ec:	2301      	movs	r3, #1
 80025ee:	e0cc      	b.n	800278a <HAL_RCC_ClockConfig+0x1ae>
 80025f0:	4b68      	ldr	r3, [pc, #416]	@ (8002794 <HAL_RCC_ClockConfig+0x1b8>)
 80025f2:	681b      	ldr	r3, [r3, #0]
 80025f4:	f003 030f 	and.w	r3, r3, #15
 80025f8:	683a      	ldr	r2, [r7, #0]
 80025fa:	429a      	cmp	r2, r3
 80025fc:	d90c      	bls.n	8002618 <HAL_RCC_ClockConfig+0x3c>
 80025fe:	4b65      	ldr	r3, [pc, #404]	@ (8002794 <HAL_RCC_ClockConfig+0x1b8>)
 8002600:	683a      	ldr	r2, [r7, #0]
 8002602:	b2d2      	uxtb	r2, r2
 8002604:	701a      	strb	r2, [r3, #0]
 8002606:	4b63      	ldr	r3, [pc, #396]	@ (8002794 <HAL_RCC_ClockConfig+0x1b8>)
 8002608:	681b      	ldr	r3, [r3, #0]
 800260a:	f003 030f 	and.w	r3, r3, #15
 800260e:	683a      	ldr	r2, [r7, #0]
 8002610:	429a      	cmp	r2, r3
 8002612:	d001      	beq.n	8002618 <HAL_RCC_ClockConfig+0x3c>
 8002614:	2301      	movs	r3, #1
 8002616:	e0b8      	b.n	800278a <HAL_RCC_ClockConfig+0x1ae>
 8002618:	687b      	ldr	r3, [r7, #4]
 800261a:	681b      	ldr	r3, [r3, #0]
 800261c:	f003 0302 	and.w	r3, r3, #2
 8002620:	2b00      	cmp	r3, #0
 8002622:	d020      	beq.n	8002666 <HAL_RCC_ClockConfig+0x8a>
 8002624:	687b      	ldr	r3, [r7, #4]
 8002626:	681b      	ldr	r3, [r3, #0]
 8002628:	f003 0304 	and.w	r3, r3, #4
 800262c:	2b00      	cmp	r3, #0
 800262e:	d005      	beq.n	800263c <HAL_RCC_ClockConfig+0x60>
 8002630:	4b59      	ldr	r3, [pc, #356]	@ (8002798 <HAL_RCC_ClockConfig+0x1bc>)
 8002632:	689b      	ldr	r3, [r3, #8]
 8002634:	4a58      	ldr	r2, [pc, #352]	@ (8002798 <HAL_RCC_ClockConfig+0x1bc>)
 8002636:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 800263a:	6093      	str	r3, [r2, #8]
 800263c:	687b      	ldr	r3, [r7, #4]
 800263e:	681b      	ldr	r3, [r3, #0]
 8002640:	f003 0308 	and.w	r3, r3, #8
 8002644:	2b00      	cmp	r3, #0
 8002646:	d005      	beq.n	8002654 <HAL_RCC_ClockConfig+0x78>
 8002648:	4b53      	ldr	r3, [pc, #332]	@ (8002798 <HAL_RCC_ClockConfig+0x1bc>)
 800264a:	689b      	ldr	r3, [r3, #8]
 800264c:	4a52      	ldr	r2, [pc, #328]	@ (8002798 <HAL_RCC_ClockConfig+0x1bc>)
 800264e:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8002652:	6093      	str	r3, [r2, #8]
 8002654:	4b50      	ldr	r3, [pc, #320]	@ (8002798 <HAL_RCC_ClockConfig+0x1bc>)
 8002656:	689b      	ldr	r3, [r3, #8]
 8002658:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 800265c:	687b      	ldr	r3, [r7, #4]
 800265e:	689b      	ldr	r3, [r3, #8]
 8002660:	494d      	ldr	r1, [pc, #308]	@ (8002798 <HAL_RCC_ClockConfig+0x1bc>)
 8002662:	4313      	orrs	r3, r2
 8002664:	608b      	str	r3, [r1, #8]
 8002666:	687b      	ldr	r3, [r7, #4]
 8002668:	681b      	ldr	r3, [r3, #0]
 800266a:	f003 0301 	and.w	r3, r3, #1
 800266e:	2b00      	cmp	r3, #0
 8002670:	d044      	beq.n	80026fc <HAL_RCC_ClockConfig+0x120>
 8002672:	687b      	ldr	r3, [r7, #4]
 8002674:	685b      	ldr	r3, [r3, #4]
 8002676:	2b01      	cmp	r3, #1
 8002678:	d107      	bne.n	800268a <HAL_RCC_ClockConfig+0xae>
 800267a:	4b47      	ldr	r3, [pc, #284]	@ (8002798 <HAL_RCC_ClockConfig+0x1bc>)
 800267c:	681b      	ldr	r3, [r3, #0]
 800267e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002682:	2b00      	cmp	r3, #0
 8002684:	d119      	bne.n	80026ba <HAL_RCC_ClockConfig+0xde>
 8002686:	2301      	movs	r3, #1
 8002688:	e07f      	b.n	800278a <HAL_RCC_ClockConfig+0x1ae>
 800268a:	687b      	ldr	r3, [r7, #4]
 800268c:	685b      	ldr	r3, [r3, #4]
 800268e:	2b02      	cmp	r3, #2
 8002690:	d003      	beq.n	800269a <HAL_RCC_ClockConfig+0xbe>
 8002692:	687b      	ldr	r3, [r7, #4]
 8002694:	685b      	ldr	r3, [r3, #4]
 8002696:	2b03      	cmp	r3, #3
 8002698:	d107      	bne.n	80026aa <HAL_RCC_ClockConfig+0xce>
 800269a:	4b3f      	ldr	r3, [pc, #252]	@ (8002798 <HAL_RCC_ClockConfig+0x1bc>)
 800269c:	681b      	ldr	r3, [r3, #0]
 800269e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80026a2:	2b00      	cmp	r3, #0
 80026a4:	d109      	bne.n	80026ba <HAL_RCC_ClockConfig+0xde>
 80026a6:	2301      	movs	r3, #1
 80026a8:	e06f      	b.n	800278a <HAL_RCC_ClockConfig+0x1ae>
 80026aa:	4b3b      	ldr	r3, [pc, #236]	@ (8002798 <HAL_RCC_ClockConfig+0x1bc>)
 80026ac:	681b      	ldr	r3, [r3, #0]
 80026ae:	f003 0302 	and.w	r3, r3, #2
 80026b2:	2b00      	cmp	r3, #0
 80026b4:	d101      	bne.n	80026ba <HAL_RCC_ClockConfig+0xde>
 80026b6:	2301      	movs	r3, #1
 80026b8:	e067      	b.n	800278a <HAL_RCC_ClockConfig+0x1ae>
 80026ba:	4b37      	ldr	r3, [pc, #220]	@ (8002798 <HAL_RCC_ClockConfig+0x1bc>)
 80026bc:	689b      	ldr	r3, [r3, #8]
 80026be:	f023 0203 	bic.w	r2, r3, #3
 80026c2:	687b      	ldr	r3, [r7, #4]
 80026c4:	685b      	ldr	r3, [r3, #4]
 80026c6:	4934      	ldr	r1, [pc, #208]	@ (8002798 <HAL_RCC_ClockConfig+0x1bc>)
 80026c8:	4313      	orrs	r3, r2
 80026ca:	608b      	str	r3, [r1, #8]
 80026cc:	f7ff fc64 	bl	8001f98 <HAL_GetTick>
 80026d0:	60f8      	str	r0, [r7, #12]
 80026d2:	e00a      	b.n	80026ea <HAL_RCC_ClockConfig+0x10e>
 80026d4:	f7ff fc60 	bl	8001f98 <HAL_GetTick>
 80026d8:	4602      	mov	r2, r0
 80026da:	68fb      	ldr	r3, [r7, #12]
 80026dc:	1ad3      	subs	r3, r2, r3
 80026de:	f241 3288 	movw	r2, #5000	@ 0x1388
 80026e2:	4293      	cmp	r3, r2
 80026e4:	d901      	bls.n	80026ea <HAL_RCC_ClockConfig+0x10e>
 80026e6:	2303      	movs	r3, #3
 80026e8:	e04f      	b.n	800278a <HAL_RCC_ClockConfig+0x1ae>
 80026ea:	4b2b      	ldr	r3, [pc, #172]	@ (8002798 <HAL_RCC_ClockConfig+0x1bc>)
 80026ec:	689b      	ldr	r3, [r3, #8]
 80026ee:	f003 020c 	and.w	r2, r3, #12
 80026f2:	687b      	ldr	r3, [r7, #4]
 80026f4:	685b      	ldr	r3, [r3, #4]
 80026f6:	009b      	lsls	r3, r3, #2
 80026f8:	429a      	cmp	r2, r3
 80026fa:	d1eb      	bne.n	80026d4 <HAL_RCC_ClockConfig+0xf8>
 80026fc:	4b25      	ldr	r3, [pc, #148]	@ (8002794 <HAL_RCC_ClockConfig+0x1b8>)
 80026fe:	681b      	ldr	r3, [r3, #0]
 8002700:	f003 030f 	and.w	r3, r3, #15
 8002704:	683a      	ldr	r2, [r7, #0]
 8002706:	429a      	cmp	r2, r3
 8002708:	d20c      	bcs.n	8002724 <HAL_RCC_ClockConfig+0x148>
 800270a:	4b22      	ldr	r3, [pc, #136]	@ (8002794 <HAL_RCC_ClockConfig+0x1b8>)
 800270c:	683a      	ldr	r2, [r7, #0]
 800270e:	b2d2      	uxtb	r2, r2
 8002710:	701a      	strb	r2, [r3, #0]
 8002712:	4b20      	ldr	r3, [pc, #128]	@ (8002794 <HAL_RCC_ClockConfig+0x1b8>)
 8002714:	681b      	ldr	r3, [r3, #0]
 8002716:	f003 030f 	and.w	r3, r3, #15
 800271a:	683a      	ldr	r2, [r7, #0]
 800271c:	429a      	cmp	r2, r3
 800271e:	d001      	beq.n	8002724 <HAL_RCC_ClockConfig+0x148>
 8002720:	2301      	movs	r3, #1
 8002722:	e032      	b.n	800278a <HAL_RCC_ClockConfig+0x1ae>
 8002724:	687b      	ldr	r3, [r7, #4]
 8002726:	681b      	ldr	r3, [r3, #0]
 8002728:	f003 0304 	and.w	r3, r3, #4
 800272c:	2b00      	cmp	r3, #0
 800272e:	d008      	beq.n	8002742 <HAL_RCC_ClockConfig+0x166>
 8002730:	4b19      	ldr	r3, [pc, #100]	@ (8002798 <HAL_RCC_ClockConfig+0x1bc>)
 8002732:	689b      	ldr	r3, [r3, #8]
 8002734:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8002738:	687b      	ldr	r3, [r7, #4]
 800273a:	68db      	ldr	r3, [r3, #12]
 800273c:	4916      	ldr	r1, [pc, #88]	@ (8002798 <HAL_RCC_ClockConfig+0x1bc>)
 800273e:	4313      	orrs	r3, r2
 8002740:	608b      	str	r3, [r1, #8]
 8002742:	687b      	ldr	r3, [r7, #4]
 8002744:	681b      	ldr	r3, [r3, #0]
 8002746:	f003 0308 	and.w	r3, r3, #8
 800274a:	2b00      	cmp	r3, #0
 800274c:	d009      	beq.n	8002762 <HAL_RCC_ClockConfig+0x186>
 800274e:	4b12      	ldr	r3, [pc, #72]	@ (8002798 <HAL_RCC_ClockConfig+0x1bc>)
 8002750:	689b      	ldr	r3, [r3, #8]
 8002752:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8002756:	687b      	ldr	r3, [r7, #4]
 8002758:	691b      	ldr	r3, [r3, #16]
 800275a:	00db      	lsls	r3, r3, #3
 800275c:	490e      	ldr	r1, [pc, #56]	@ (8002798 <HAL_RCC_ClockConfig+0x1bc>)
 800275e:	4313      	orrs	r3, r2
 8002760:	608b      	str	r3, [r1, #8]
 8002762:	f000 f841 	bl	80027e8 <HAL_RCC_GetSysClockFreq>
 8002766:	4602      	mov	r2, r0
 8002768:	4b0b      	ldr	r3, [pc, #44]	@ (8002798 <HAL_RCC_ClockConfig+0x1bc>)
 800276a:	689b      	ldr	r3, [r3, #8]
 800276c:	091b      	lsrs	r3, r3, #4
 800276e:	f003 030f 	and.w	r3, r3, #15
 8002772:	490a      	ldr	r1, [pc, #40]	@ (800279c <HAL_RCC_ClockConfig+0x1c0>)
 8002774:	5ccb      	ldrb	r3, [r1, r3]
 8002776:	fa22 f303 	lsr.w	r3, r2, r3
 800277a:	4a09      	ldr	r2, [pc, #36]	@ (80027a0 <HAL_RCC_ClockConfig+0x1c4>)
 800277c:	6013      	str	r3, [r2, #0]
 800277e:	4b09      	ldr	r3, [pc, #36]	@ (80027a4 <HAL_RCC_ClockConfig+0x1c8>)
 8002780:	681b      	ldr	r3, [r3, #0]
 8002782:	4618      	mov	r0, r3
 8002784:	f7ff fbc4 	bl	8001f10 <HAL_InitTick>
 8002788:	2300      	movs	r3, #0
 800278a:	4618      	mov	r0, r3
 800278c:	3710      	adds	r7, #16
 800278e:	46bd      	mov	sp, r7
 8002790:	bd80      	pop	{r7, pc}
 8002792:	bf00      	nop
 8002794:	40023c00 	.word	0x40023c00
 8002798:	40023800 	.word	0x40023800
 800279c:	08004820 	.word	0x08004820
 80027a0:	20000030 	.word	0x20000030
 80027a4:	20000034 	.word	0x20000034

080027a8 <HAL_RCC_GetHCLKFreq>:
 80027a8:	b480      	push	{r7}
 80027aa:	af00      	add	r7, sp, #0
 80027ac:	4b03      	ldr	r3, [pc, #12]	@ (80027bc <HAL_RCC_GetHCLKFreq+0x14>)
 80027ae:	681b      	ldr	r3, [r3, #0]
 80027b0:	4618      	mov	r0, r3
 80027b2:	46bd      	mov	sp, r7
 80027b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027b8:	4770      	bx	lr
 80027ba:	bf00      	nop
 80027bc:	20000030 	.word	0x20000030

080027c0 <HAL_RCC_GetPCLK2Freq>:
 80027c0:	b580      	push	{r7, lr}
 80027c2:	af00      	add	r7, sp, #0
 80027c4:	f7ff fff0 	bl	80027a8 <HAL_RCC_GetHCLKFreq>
 80027c8:	4602      	mov	r2, r0
 80027ca:	4b05      	ldr	r3, [pc, #20]	@ (80027e0 <HAL_RCC_GetPCLK2Freq+0x20>)
 80027cc:	689b      	ldr	r3, [r3, #8]
 80027ce:	0b5b      	lsrs	r3, r3, #13
 80027d0:	f003 0307 	and.w	r3, r3, #7
 80027d4:	4903      	ldr	r1, [pc, #12]	@ (80027e4 <HAL_RCC_GetPCLK2Freq+0x24>)
 80027d6:	5ccb      	ldrb	r3, [r1, r3]
 80027d8:	fa22 f303 	lsr.w	r3, r2, r3
 80027dc:	4618      	mov	r0, r3
 80027de:	bd80      	pop	{r7, pc}
 80027e0:	40023800 	.word	0x40023800
 80027e4:	08004830 	.word	0x08004830

080027e8 <HAL_RCC_GetSysClockFreq>:
 80027e8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80027ec:	b0ae      	sub	sp, #184	@ 0xb8
 80027ee:	af00      	add	r7, sp, #0
 80027f0:	2300      	movs	r3, #0
 80027f2:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80027f6:	2300      	movs	r3, #0
 80027f8:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80027fc:	2300      	movs	r3, #0
 80027fe:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8002802:	2300      	movs	r3, #0
 8002804:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8002808:	2300      	movs	r3, #0
 800280a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800280e:	4bcb      	ldr	r3, [pc, #812]	@ (8002b3c <HAL_RCC_GetSysClockFreq+0x354>)
 8002810:	689b      	ldr	r3, [r3, #8]
 8002812:	f003 030c 	and.w	r3, r3, #12
 8002816:	2b0c      	cmp	r3, #12
 8002818:	f200 8206 	bhi.w	8002c28 <HAL_RCC_GetSysClockFreq+0x440>
 800281c:	a201      	add	r2, pc, #4	@ (adr r2, 8002824 <HAL_RCC_GetSysClockFreq+0x3c>)
 800281e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002822:	bf00      	nop
 8002824:	08002859 	.word	0x08002859
 8002828:	08002c29 	.word	0x08002c29
 800282c:	08002c29 	.word	0x08002c29
 8002830:	08002c29 	.word	0x08002c29
 8002834:	08002861 	.word	0x08002861
 8002838:	08002c29 	.word	0x08002c29
 800283c:	08002c29 	.word	0x08002c29
 8002840:	08002c29 	.word	0x08002c29
 8002844:	08002869 	.word	0x08002869
 8002848:	08002c29 	.word	0x08002c29
 800284c:	08002c29 	.word	0x08002c29
 8002850:	08002c29 	.word	0x08002c29
 8002854:	08002a59 	.word	0x08002a59
 8002858:	4bb9      	ldr	r3, [pc, #740]	@ (8002b40 <HAL_RCC_GetSysClockFreq+0x358>)
 800285a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800285e:	e1e7      	b.n	8002c30 <HAL_RCC_GetSysClockFreq+0x448>
 8002860:	4bb8      	ldr	r3, [pc, #736]	@ (8002b44 <HAL_RCC_GetSysClockFreq+0x35c>)
 8002862:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8002866:	e1e3      	b.n	8002c30 <HAL_RCC_GetSysClockFreq+0x448>
 8002868:	4bb4      	ldr	r3, [pc, #720]	@ (8002b3c <HAL_RCC_GetSysClockFreq+0x354>)
 800286a:	685b      	ldr	r3, [r3, #4]
 800286c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8002870:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8002874:	4bb1      	ldr	r3, [pc, #708]	@ (8002b3c <HAL_RCC_GetSysClockFreq+0x354>)
 8002876:	685b      	ldr	r3, [r3, #4]
 8002878:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800287c:	2b00      	cmp	r3, #0
 800287e:	d071      	beq.n	8002964 <HAL_RCC_GetSysClockFreq+0x17c>
 8002880:	4bae      	ldr	r3, [pc, #696]	@ (8002b3c <HAL_RCC_GetSysClockFreq+0x354>)
 8002882:	685b      	ldr	r3, [r3, #4]
 8002884:	099b      	lsrs	r3, r3, #6
 8002886:	2200      	movs	r2, #0
 8002888:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800288c:	f8c7 209c 	str.w	r2, [r7, #156]	@ 0x9c
 8002890:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8002894:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002898:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800289c:	2300      	movs	r3, #0
 800289e:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80028a2:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 80028a6:	4622      	mov	r2, r4
 80028a8:	462b      	mov	r3, r5
 80028aa:	f04f 0000 	mov.w	r0, #0
 80028ae:	f04f 0100 	mov.w	r1, #0
 80028b2:	0159      	lsls	r1, r3, #5
 80028b4:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80028b8:	0150      	lsls	r0, r2, #5
 80028ba:	4602      	mov	r2, r0
 80028bc:	460b      	mov	r3, r1
 80028be:	4621      	mov	r1, r4
 80028c0:	1a51      	subs	r1, r2, r1
 80028c2:	6439      	str	r1, [r7, #64]	@ 0x40
 80028c4:	4629      	mov	r1, r5
 80028c6:	eb63 0301 	sbc.w	r3, r3, r1
 80028ca:	647b      	str	r3, [r7, #68]	@ 0x44
 80028cc:	f04f 0200 	mov.w	r2, #0
 80028d0:	f04f 0300 	mov.w	r3, #0
 80028d4:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	@ 0x40
 80028d8:	4649      	mov	r1, r9
 80028da:	018b      	lsls	r3, r1, #6
 80028dc:	4641      	mov	r1, r8
 80028de:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80028e2:	4641      	mov	r1, r8
 80028e4:	018a      	lsls	r2, r1, #6
 80028e6:	4641      	mov	r1, r8
 80028e8:	1a51      	subs	r1, r2, r1
 80028ea:	63b9      	str	r1, [r7, #56]	@ 0x38
 80028ec:	4649      	mov	r1, r9
 80028ee:	eb63 0301 	sbc.w	r3, r3, r1
 80028f2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80028f4:	f04f 0200 	mov.w	r2, #0
 80028f8:	f04f 0300 	mov.w	r3, #0
 80028fc:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	@ 0x38
 8002900:	4649      	mov	r1, r9
 8002902:	00cb      	lsls	r3, r1, #3
 8002904:	4641      	mov	r1, r8
 8002906:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800290a:	4641      	mov	r1, r8
 800290c:	00ca      	lsls	r2, r1, #3
 800290e:	4610      	mov	r0, r2
 8002910:	4619      	mov	r1, r3
 8002912:	4603      	mov	r3, r0
 8002914:	4622      	mov	r2, r4
 8002916:	189b      	adds	r3, r3, r2
 8002918:	633b      	str	r3, [r7, #48]	@ 0x30
 800291a:	462b      	mov	r3, r5
 800291c:	460a      	mov	r2, r1
 800291e:	eb42 0303 	adc.w	r3, r2, r3
 8002922:	637b      	str	r3, [r7, #52]	@ 0x34
 8002924:	f04f 0200 	mov.w	r2, #0
 8002928:	f04f 0300 	mov.w	r3, #0
 800292c:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8002930:	4629      	mov	r1, r5
 8002932:	024b      	lsls	r3, r1, #9
 8002934:	4621      	mov	r1, r4
 8002936:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 800293a:	4621      	mov	r1, r4
 800293c:	024a      	lsls	r2, r1, #9
 800293e:	4610      	mov	r0, r2
 8002940:	4619      	mov	r1, r3
 8002942:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8002946:	2200      	movs	r2, #0
 8002948:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800294c:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8002950:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 8002954:	f7fd fc56 	bl	8000204 <__aeabi_uldivmod>
 8002958:	4602      	mov	r2, r0
 800295a:	460b      	mov	r3, r1
 800295c:	4613      	mov	r3, r2
 800295e:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8002962:	e067      	b.n	8002a34 <HAL_RCC_GetSysClockFreq+0x24c>
 8002964:	4b75      	ldr	r3, [pc, #468]	@ (8002b3c <HAL_RCC_GetSysClockFreq+0x354>)
 8002966:	685b      	ldr	r3, [r3, #4]
 8002968:	099b      	lsrs	r3, r3, #6
 800296a:	2200      	movs	r2, #0
 800296c:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8002970:	f8c7 2084 	str.w	r2, [r7, #132]	@ 0x84
 8002974:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8002978:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800297c:	67bb      	str	r3, [r7, #120]	@ 0x78
 800297e:	2300      	movs	r3, #0
 8002980:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8002982:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	@ 0x78
 8002986:	4622      	mov	r2, r4
 8002988:	462b      	mov	r3, r5
 800298a:	f04f 0000 	mov.w	r0, #0
 800298e:	f04f 0100 	mov.w	r1, #0
 8002992:	0159      	lsls	r1, r3, #5
 8002994:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002998:	0150      	lsls	r0, r2, #5
 800299a:	4602      	mov	r2, r0
 800299c:	460b      	mov	r3, r1
 800299e:	4621      	mov	r1, r4
 80029a0:	1a51      	subs	r1, r2, r1
 80029a2:	62b9      	str	r1, [r7, #40]	@ 0x28
 80029a4:	4629      	mov	r1, r5
 80029a6:	eb63 0301 	sbc.w	r3, r3, r1
 80029aa:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80029ac:	f04f 0200 	mov.w	r2, #0
 80029b0:	f04f 0300 	mov.w	r3, #0
 80029b4:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	@ 0x28
 80029b8:	4649      	mov	r1, r9
 80029ba:	018b      	lsls	r3, r1, #6
 80029bc:	4641      	mov	r1, r8
 80029be:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80029c2:	4641      	mov	r1, r8
 80029c4:	018a      	lsls	r2, r1, #6
 80029c6:	4641      	mov	r1, r8
 80029c8:	ebb2 0a01 	subs.w	sl, r2, r1
 80029cc:	4649      	mov	r1, r9
 80029ce:	eb63 0b01 	sbc.w	fp, r3, r1
 80029d2:	f04f 0200 	mov.w	r2, #0
 80029d6:	f04f 0300 	mov.w	r3, #0
 80029da:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80029de:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80029e2:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80029e6:	4692      	mov	sl, r2
 80029e8:	469b      	mov	fp, r3
 80029ea:	4623      	mov	r3, r4
 80029ec:	eb1a 0303 	adds.w	r3, sl, r3
 80029f0:	623b      	str	r3, [r7, #32]
 80029f2:	462b      	mov	r3, r5
 80029f4:	eb4b 0303 	adc.w	r3, fp, r3
 80029f8:	627b      	str	r3, [r7, #36]	@ 0x24
 80029fa:	f04f 0200 	mov.w	r2, #0
 80029fe:	f04f 0300 	mov.w	r3, #0
 8002a02:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 8002a06:	4629      	mov	r1, r5
 8002a08:	028b      	lsls	r3, r1, #10
 8002a0a:	4621      	mov	r1, r4
 8002a0c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8002a10:	4621      	mov	r1, r4
 8002a12:	028a      	lsls	r2, r1, #10
 8002a14:	4610      	mov	r0, r2
 8002a16:	4619      	mov	r1, r3
 8002a18:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8002a1c:	2200      	movs	r2, #0
 8002a1e:	673b      	str	r3, [r7, #112]	@ 0x70
 8002a20:	677a      	str	r2, [r7, #116]	@ 0x74
 8002a22:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 8002a26:	f7fd fbed 	bl	8000204 <__aeabi_uldivmod>
 8002a2a:	4602      	mov	r2, r0
 8002a2c:	460b      	mov	r3, r1
 8002a2e:	4613      	mov	r3, r2
 8002a30:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8002a34:	4b41      	ldr	r3, [pc, #260]	@ (8002b3c <HAL_RCC_GetSysClockFreq+0x354>)
 8002a36:	685b      	ldr	r3, [r3, #4]
 8002a38:	0c1b      	lsrs	r3, r3, #16
 8002a3a:	f003 0303 	and.w	r3, r3, #3
 8002a3e:	3301      	adds	r3, #1
 8002a40:	005b      	lsls	r3, r3, #1
 8002a42:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8002a46:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8002a4a:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8002a4e:	fbb2 f3f3 	udiv	r3, r2, r3
 8002a52:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8002a56:	e0eb      	b.n	8002c30 <HAL_RCC_GetSysClockFreq+0x448>
 8002a58:	4b38      	ldr	r3, [pc, #224]	@ (8002b3c <HAL_RCC_GetSysClockFreq+0x354>)
 8002a5a:	685b      	ldr	r3, [r3, #4]
 8002a5c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8002a60:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8002a64:	4b35      	ldr	r3, [pc, #212]	@ (8002b3c <HAL_RCC_GetSysClockFreq+0x354>)
 8002a66:	685b      	ldr	r3, [r3, #4]
 8002a68:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002a6c:	2b00      	cmp	r3, #0
 8002a6e:	d06b      	beq.n	8002b48 <HAL_RCC_GetSysClockFreq+0x360>
 8002a70:	4b32      	ldr	r3, [pc, #200]	@ (8002b3c <HAL_RCC_GetSysClockFreq+0x354>)
 8002a72:	685b      	ldr	r3, [r3, #4]
 8002a74:	099b      	lsrs	r3, r3, #6
 8002a76:	2200      	movs	r2, #0
 8002a78:	66bb      	str	r3, [r7, #104]	@ 0x68
 8002a7a:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8002a7c:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8002a7e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002a82:	663b      	str	r3, [r7, #96]	@ 0x60
 8002a84:	2300      	movs	r3, #0
 8002a86:	667b      	str	r3, [r7, #100]	@ 0x64
 8002a88:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 8002a8c:	4622      	mov	r2, r4
 8002a8e:	462b      	mov	r3, r5
 8002a90:	f04f 0000 	mov.w	r0, #0
 8002a94:	f04f 0100 	mov.w	r1, #0
 8002a98:	0159      	lsls	r1, r3, #5
 8002a9a:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002a9e:	0150      	lsls	r0, r2, #5
 8002aa0:	4602      	mov	r2, r0
 8002aa2:	460b      	mov	r3, r1
 8002aa4:	4621      	mov	r1, r4
 8002aa6:	1a51      	subs	r1, r2, r1
 8002aa8:	61b9      	str	r1, [r7, #24]
 8002aaa:	4629      	mov	r1, r5
 8002aac:	eb63 0301 	sbc.w	r3, r3, r1
 8002ab0:	61fb      	str	r3, [r7, #28]
 8002ab2:	f04f 0200 	mov.w	r2, #0
 8002ab6:	f04f 0300 	mov.w	r3, #0
 8002aba:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 8002abe:	4659      	mov	r1, fp
 8002ac0:	018b      	lsls	r3, r1, #6
 8002ac2:	4651      	mov	r1, sl
 8002ac4:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8002ac8:	4651      	mov	r1, sl
 8002aca:	018a      	lsls	r2, r1, #6
 8002acc:	4651      	mov	r1, sl
 8002ace:	ebb2 0801 	subs.w	r8, r2, r1
 8002ad2:	4659      	mov	r1, fp
 8002ad4:	eb63 0901 	sbc.w	r9, r3, r1
 8002ad8:	f04f 0200 	mov.w	r2, #0
 8002adc:	f04f 0300 	mov.w	r3, #0
 8002ae0:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8002ae4:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8002ae8:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8002aec:	4690      	mov	r8, r2
 8002aee:	4699      	mov	r9, r3
 8002af0:	4623      	mov	r3, r4
 8002af2:	eb18 0303 	adds.w	r3, r8, r3
 8002af6:	613b      	str	r3, [r7, #16]
 8002af8:	462b      	mov	r3, r5
 8002afa:	eb49 0303 	adc.w	r3, r9, r3
 8002afe:	617b      	str	r3, [r7, #20]
 8002b00:	f04f 0200 	mov.w	r2, #0
 8002b04:	f04f 0300 	mov.w	r3, #0
 8002b08:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 8002b0c:	4629      	mov	r1, r5
 8002b0e:	024b      	lsls	r3, r1, #9
 8002b10:	4621      	mov	r1, r4
 8002b12:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8002b16:	4621      	mov	r1, r4
 8002b18:	024a      	lsls	r2, r1, #9
 8002b1a:	4610      	mov	r0, r2
 8002b1c:	4619      	mov	r1, r3
 8002b1e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8002b22:	2200      	movs	r2, #0
 8002b24:	65bb      	str	r3, [r7, #88]	@ 0x58
 8002b26:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8002b28:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8002b2c:	f7fd fb6a 	bl	8000204 <__aeabi_uldivmod>
 8002b30:	4602      	mov	r2, r0
 8002b32:	460b      	mov	r3, r1
 8002b34:	4613      	mov	r3, r2
 8002b36:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8002b3a:	e065      	b.n	8002c08 <HAL_RCC_GetSysClockFreq+0x420>
 8002b3c:	40023800 	.word	0x40023800
 8002b40:	00f42400 	.word	0x00f42400
 8002b44:	007a1200 	.word	0x007a1200
 8002b48:	4b3d      	ldr	r3, [pc, #244]	@ (8002c40 <HAL_RCC_GetSysClockFreq+0x458>)
 8002b4a:	685b      	ldr	r3, [r3, #4]
 8002b4c:	099b      	lsrs	r3, r3, #6
 8002b4e:	2200      	movs	r2, #0
 8002b50:	4618      	mov	r0, r3
 8002b52:	4611      	mov	r1, r2
 8002b54:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8002b58:	653b      	str	r3, [r7, #80]	@ 0x50
 8002b5a:	2300      	movs	r3, #0
 8002b5c:	657b      	str	r3, [r7, #84]	@ 0x54
 8002b5e:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	@ 0x50
 8002b62:	4642      	mov	r2, r8
 8002b64:	464b      	mov	r3, r9
 8002b66:	f04f 0000 	mov.w	r0, #0
 8002b6a:	f04f 0100 	mov.w	r1, #0
 8002b6e:	0159      	lsls	r1, r3, #5
 8002b70:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002b74:	0150      	lsls	r0, r2, #5
 8002b76:	4602      	mov	r2, r0
 8002b78:	460b      	mov	r3, r1
 8002b7a:	4641      	mov	r1, r8
 8002b7c:	1a51      	subs	r1, r2, r1
 8002b7e:	60b9      	str	r1, [r7, #8]
 8002b80:	4649      	mov	r1, r9
 8002b82:	eb63 0301 	sbc.w	r3, r3, r1
 8002b86:	60fb      	str	r3, [r7, #12]
 8002b88:	f04f 0200 	mov.w	r2, #0
 8002b8c:	f04f 0300 	mov.w	r3, #0
 8002b90:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 8002b94:	4659      	mov	r1, fp
 8002b96:	018b      	lsls	r3, r1, #6
 8002b98:	4651      	mov	r1, sl
 8002b9a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8002b9e:	4651      	mov	r1, sl
 8002ba0:	018a      	lsls	r2, r1, #6
 8002ba2:	4651      	mov	r1, sl
 8002ba4:	1a54      	subs	r4, r2, r1
 8002ba6:	4659      	mov	r1, fp
 8002ba8:	eb63 0501 	sbc.w	r5, r3, r1
 8002bac:	f04f 0200 	mov.w	r2, #0
 8002bb0:	f04f 0300 	mov.w	r3, #0
 8002bb4:	00eb      	lsls	r3, r5, #3
 8002bb6:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002bba:	00e2      	lsls	r2, r4, #3
 8002bbc:	4614      	mov	r4, r2
 8002bbe:	461d      	mov	r5, r3
 8002bc0:	4643      	mov	r3, r8
 8002bc2:	18e3      	adds	r3, r4, r3
 8002bc4:	603b      	str	r3, [r7, #0]
 8002bc6:	464b      	mov	r3, r9
 8002bc8:	eb45 0303 	adc.w	r3, r5, r3
 8002bcc:	607b      	str	r3, [r7, #4]
 8002bce:	f04f 0200 	mov.w	r2, #0
 8002bd2:	f04f 0300 	mov.w	r3, #0
 8002bd6:	e9d7 4500 	ldrd	r4, r5, [r7]
 8002bda:	4629      	mov	r1, r5
 8002bdc:	028b      	lsls	r3, r1, #10
 8002bde:	4621      	mov	r1, r4
 8002be0:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8002be4:	4621      	mov	r1, r4
 8002be6:	028a      	lsls	r2, r1, #10
 8002be8:	4610      	mov	r0, r2
 8002bea:	4619      	mov	r1, r3
 8002bec:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8002bf0:	2200      	movs	r2, #0
 8002bf2:	64bb      	str	r3, [r7, #72]	@ 0x48
 8002bf4:	64fa      	str	r2, [r7, #76]	@ 0x4c
 8002bf6:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8002bfa:	f7fd fb03 	bl	8000204 <__aeabi_uldivmod>
 8002bfe:	4602      	mov	r2, r0
 8002c00:	460b      	mov	r3, r1
 8002c02:	4613      	mov	r3, r2
 8002c04:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8002c08:	4b0d      	ldr	r3, [pc, #52]	@ (8002c40 <HAL_RCC_GetSysClockFreq+0x458>)
 8002c0a:	685b      	ldr	r3, [r3, #4]
 8002c0c:	0f1b      	lsrs	r3, r3, #28
 8002c0e:	f003 0307 	and.w	r3, r3, #7
 8002c12:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8002c16:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8002c1a:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8002c1e:	fbb2 f3f3 	udiv	r3, r2, r3
 8002c22:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8002c26:	e003      	b.n	8002c30 <HAL_RCC_GetSysClockFreq+0x448>
 8002c28:	4b06      	ldr	r3, [pc, #24]	@ (8002c44 <HAL_RCC_GetSysClockFreq+0x45c>)
 8002c2a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8002c2e:	bf00      	nop
 8002c30:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8002c34:	4618      	mov	r0, r3
 8002c36:	37b8      	adds	r7, #184	@ 0xb8
 8002c38:	46bd      	mov	sp, r7
 8002c3a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8002c3e:	bf00      	nop
 8002c40:	40023800 	.word	0x40023800
 8002c44:	00f42400 	.word	0x00f42400

08002c48 <HAL_RCC_OscConfig>:
 8002c48:	b580      	push	{r7, lr}
 8002c4a:	b086      	sub	sp, #24
 8002c4c:	af00      	add	r7, sp, #0
 8002c4e:	6078      	str	r0, [r7, #4]
 8002c50:	687b      	ldr	r3, [r7, #4]
 8002c52:	2b00      	cmp	r3, #0
 8002c54:	d101      	bne.n	8002c5a <HAL_RCC_OscConfig+0x12>
 8002c56:	2301      	movs	r3, #1
 8002c58:	e28d      	b.n	8003176 <HAL_RCC_OscConfig+0x52e>
 8002c5a:	687b      	ldr	r3, [r7, #4]
 8002c5c:	681b      	ldr	r3, [r3, #0]
 8002c5e:	f003 0301 	and.w	r3, r3, #1
 8002c62:	2b00      	cmp	r3, #0
 8002c64:	f000 8083 	beq.w	8002d6e <HAL_RCC_OscConfig+0x126>
 8002c68:	4b94      	ldr	r3, [pc, #592]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002c6a:	689b      	ldr	r3, [r3, #8]
 8002c6c:	f003 030c 	and.w	r3, r3, #12
 8002c70:	2b04      	cmp	r3, #4
 8002c72:	d019      	beq.n	8002ca8 <HAL_RCC_OscConfig+0x60>
 8002c74:	4b91      	ldr	r3, [pc, #580]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002c76:	689b      	ldr	r3, [r3, #8]
 8002c78:	f003 030c 	and.w	r3, r3, #12
 8002c7c:	2b08      	cmp	r3, #8
 8002c7e:	d106      	bne.n	8002c8e <HAL_RCC_OscConfig+0x46>
 8002c80:	4b8e      	ldr	r3, [pc, #568]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002c82:	685b      	ldr	r3, [r3, #4]
 8002c84:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002c88:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8002c8c:	d00c      	beq.n	8002ca8 <HAL_RCC_OscConfig+0x60>
 8002c8e:	4b8b      	ldr	r3, [pc, #556]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002c90:	689b      	ldr	r3, [r3, #8]
 8002c92:	f003 030c 	and.w	r3, r3, #12
 8002c96:	2b0c      	cmp	r3, #12
 8002c98:	d112      	bne.n	8002cc0 <HAL_RCC_OscConfig+0x78>
 8002c9a:	4b88      	ldr	r3, [pc, #544]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002c9c:	685b      	ldr	r3, [r3, #4]
 8002c9e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002ca2:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8002ca6:	d10b      	bne.n	8002cc0 <HAL_RCC_OscConfig+0x78>
 8002ca8:	4b84      	ldr	r3, [pc, #528]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002caa:	681b      	ldr	r3, [r3, #0]
 8002cac:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002cb0:	2b00      	cmp	r3, #0
 8002cb2:	d05b      	beq.n	8002d6c <HAL_RCC_OscConfig+0x124>
 8002cb4:	687b      	ldr	r3, [r7, #4]
 8002cb6:	685b      	ldr	r3, [r3, #4]
 8002cb8:	2b00      	cmp	r3, #0
 8002cba:	d157      	bne.n	8002d6c <HAL_RCC_OscConfig+0x124>
 8002cbc:	2301      	movs	r3, #1
 8002cbe:	e25a      	b.n	8003176 <HAL_RCC_OscConfig+0x52e>
 8002cc0:	687b      	ldr	r3, [r7, #4]
 8002cc2:	685b      	ldr	r3, [r3, #4]
 8002cc4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002cc8:	d106      	bne.n	8002cd8 <HAL_RCC_OscConfig+0x90>
 8002cca:	4b7c      	ldr	r3, [pc, #496]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002ccc:	681b      	ldr	r3, [r3, #0]
 8002cce:	4a7b      	ldr	r2, [pc, #492]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002cd0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002cd4:	6013      	str	r3, [r2, #0]
 8002cd6:	e01d      	b.n	8002d14 <HAL_RCC_OscConfig+0xcc>
 8002cd8:	687b      	ldr	r3, [r7, #4]
 8002cda:	685b      	ldr	r3, [r3, #4]
 8002cdc:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8002ce0:	d10c      	bne.n	8002cfc <HAL_RCC_OscConfig+0xb4>
 8002ce2:	4b76      	ldr	r3, [pc, #472]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002ce4:	681b      	ldr	r3, [r3, #0]
 8002ce6:	4a75      	ldr	r2, [pc, #468]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002ce8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002cec:	6013      	str	r3, [r2, #0]
 8002cee:	4b73      	ldr	r3, [pc, #460]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002cf0:	681b      	ldr	r3, [r3, #0]
 8002cf2:	4a72      	ldr	r2, [pc, #456]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002cf4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002cf8:	6013      	str	r3, [r2, #0]
 8002cfa:	e00b      	b.n	8002d14 <HAL_RCC_OscConfig+0xcc>
 8002cfc:	4b6f      	ldr	r3, [pc, #444]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002cfe:	681b      	ldr	r3, [r3, #0]
 8002d00:	4a6e      	ldr	r2, [pc, #440]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002d02:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002d06:	6013      	str	r3, [r2, #0]
 8002d08:	4b6c      	ldr	r3, [pc, #432]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002d0a:	681b      	ldr	r3, [r3, #0]
 8002d0c:	4a6b      	ldr	r2, [pc, #428]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002d0e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002d12:	6013      	str	r3, [r2, #0]
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	685b      	ldr	r3, [r3, #4]
 8002d18:	2b00      	cmp	r3, #0
 8002d1a:	d013      	beq.n	8002d44 <HAL_RCC_OscConfig+0xfc>
 8002d1c:	f7ff f93c 	bl	8001f98 <HAL_GetTick>
 8002d20:	6138      	str	r0, [r7, #16]
 8002d22:	e008      	b.n	8002d36 <HAL_RCC_OscConfig+0xee>
 8002d24:	f7ff f938 	bl	8001f98 <HAL_GetTick>
 8002d28:	4602      	mov	r2, r0
 8002d2a:	693b      	ldr	r3, [r7, #16]
 8002d2c:	1ad3      	subs	r3, r2, r3
 8002d2e:	2b64      	cmp	r3, #100	@ 0x64
 8002d30:	d901      	bls.n	8002d36 <HAL_RCC_OscConfig+0xee>
 8002d32:	2303      	movs	r3, #3
 8002d34:	e21f      	b.n	8003176 <HAL_RCC_OscConfig+0x52e>
 8002d36:	4b61      	ldr	r3, [pc, #388]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002d38:	681b      	ldr	r3, [r3, #0]
 8002d3a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002d3e:	2b00      	cmp	r3, #0
 8002d40:	d0f0      	beq.n	8002d24 <HAL_RCC_OscConfig+0xdc>
 8002d42:	e014      	b.n	8002d6e <HAL_RCC_OscConfig+0x126>
 8002d44:	f7ff f928 	bl	8001f98 <HAL_GetTick>
 8002d48:	6138      	str	r0, [r7, #16]
 8002d4a:	e008      	b.n	8002d5e <HAL_RCC_OscConfig+0x116>
 8002d4c:	f7ff f924 	bl	8001f98 <HAL_GetTick>
 8002d50:	4602      	mov	r2, r0
 8002d52:	693b      	ldr	r3, [r7, #16]
 8002d54:	1ad3      	subs	r3, r2, r3
 8002d56:	2b64      	cmp	r3, #100	@ 0x64
 8002d58:	d901      	bls.n	8002d5e <HAL_RCC_OscConfig+0x116>
 8002d5a:	2303      	movs	r3, #3
 8002d5c:	e20b      	b.n	8003176 <HAL_RCC_OscConfig+0x52e>
 8002d5e:	4b57      	ldr	r3, [pc, #348]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002d60:	681b      	ldr	r3, [r3, #0]
 8002d62:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002d66:	2b00      	cmp	r3, #0
 8002d68:	d1f0      	bne.n	8002d4c <HAL_RCC_OscConfig+0x104>
 8002d6a:	e000      	b.n	8002d6e <HAL_RCC_OscConfig+0x126>
 8002d6c:	bf00      	nop
 8002d6e:	687b      	ldr	r3, [r7, #4]
 8002d70:	681b      	ldr	r3, [r3, #0]
 8002d72:	f003 0302 	and.w	r3, r3, #2
 8002d76:	2b00      	cmp	r3, #0
 8002d78:	d06f      	beq.n	8002e5a <HAL_RCC_OscConfig+0x212>
 8002d7a:	4b50      	ldr	r3, [pc, #320]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002d7c:	689b      	ldr	r3, [r3, #8]
 8002d7e:	f003 030c 	and.w	r3, r3, #12
 8002d82:	2b00      	cmp	r3, #0
 8002d84:	d017      	beq.n	8002db6 <HAL_RCC_OscConfig+0x16e>
 8002d86:	4b4d      	ldr	r3, [pc, #308]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002d88:	689b      	ldr	r3, [r3, #8]
 8002d8a:	f003 030c 	and.w	r3, r3, #12
 8002d8e:	2b08      	cmp	r3, #8
 8002d90:	d105      	bne.n	8002d9e <HAL_RCC_OscConfig+0x156>
 8002d92:	4b4a      	ldr	r3, [pc, #296]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002d94:	685b      	ldr	r3, [r3, #4]
 8002d96:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002d9a:	2b00      	cmp	r3, #0
 8002d9c:	d00b      	beq.n	8002db6 <HAL_RCC_OscConfig+0x16e>
 8002d9e:	4b47      	ldr	r3, [pc, #284]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002da0:	689b      	ldr	r3, [r3, #8]
 8002da2:	f003 030c 	and.w	r3, r3, #12
 8002da6:	2b0c      	cmp	r3, #12
 8002da8:	d11c      	bne.n	8002de4 <HAL_RCC_OscConfig+0x19c>
 8002daa:	4b44      	ldr	r3, [pc, #272]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002dac:	685b      	ldr	r3, [r3, #4]
 8002dae:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002db2:	2b00      	cmp	r3, #0
 8002db4:	d116      	bne.n	8002de4 <HAL_RCC_OscConfig+0x19c>
 8002db6:	4b41      	ldr	r3, [pc, #260]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002db8:	681b      	ldr	r3, [r3, #0]
 8002dba:	f003 0302 	and.w	r3, r3, #2
 8002dbe:	2b00      	cmp	r3, #0
 8002dc0:	d005      	beq.n	8002dce <HAL_RCC_OscConfig+0x186>
 8002dc2:	687b      	ldr	r3, [r7, #4]
 8002dc4:	68db      	ldr	r3, [r3, #12]
 8002dc6:	2b01      	cmp	r3, #1
 8002dc8:	d001      	beq.n	8002dce <HAL_RCC_OscConfig+0x186>
 8002dca:	2301      	movs	r3, #1
 8002dcc:	e1d3      	b.n	8003176 <HAL_RCC_OscConfig+0x52e>
 8002dce:	4b3b      	ldr	r3, [pc, #236]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002dd0:	681b      	ldr	r3, [r3, #0]
 8002dd2:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002dd6:	687b      	ldr	r3, [r7, #4]
 8002dd8:	691b      	ldr	r3, [r3, #16]
 8002dda:	00db      	lsls	r3, r3, #3
 8002ddc:	4937      	ldr	r1, [pc, #220]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002dde:	4313      	orrs	r3, r2
 8002de0:	600b      	str	r3, [r1, #0]
 8002de2:	e03a      	b.n	8002e5a <HAL_RCC_OscConfig+0x212>
 8002de4:	687b      	ldr	r3, [r7, #4]
 8002de6:	68db      	ldr	r3, [r3, #12]
 8002de8:	2b00      	cmp	r3, #0
 8002dea:	d020      	beq.n	8002e2e <HAL_RCC_OscConfig+0x1e6>
 8002dec:	4b34      	ldr	r3, [pc, #208]	@ (8002ec0 <HAL_RCC_OscConfig+0x278>)
 8002dee:	2201      	movs	r2, #1
 8002df0:	601a      	str	r2, [r3, #0]
 8002df2:	f7ff f8d1 	bl	8001f98 <HAL_GetTick>
 8002df6:	6138      	str	r0, [r7, #16]
 8002df8:	e008      	b.n	8002e0c <HAL_RCC_OscConfig+0x1c4>
 8002dfa:	f7ff f8cd 	bl	8001f98 <HAL_GetTick>
 8002dfe:	4602      	mov	r2, r0
 8002e00:	693b      	ldr	r3, [r7, #16]
 8002e02:	1ad3      	subs	r3, r2, r3
 8002e04:	2b02      	cmp	r3, #2
 8002e06:	d901      	bls.n	8002e0c <HAL_RCC_OscConfig+0x1c4>
 8002e08:	2303      	movs	r3, #3
 8002e0a:	e1b4      	b.n	8003176 <HAL_RCC_OscConfig+0x52e>
 8002e0c:	4b2b      	ldr	r3, [pc, #172]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002e0e:	681b      	ldr	r3, [r3, #0]
 8002e10:	f003 0302 	and.w	r3, r3, #2
 8002e14:	2b00      	cmp	r3, #0
 8002e16:	d0f0      	beq.n	8002dfa <HAL_RCC_OscConfig+0x1b2>
 8002e18:	4b28      	ldr	r3, [pc, #160]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002e1a:	681b      	ldr	r3, [r3, #0]
 8002e1c:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002e20:	687b      	ldr	r3, [r7, #4]
 8002e22:	691b      	ldr	r3, [r3, #16]
 8002e24:	00db      	lsls	r3, r3, #3
 8002e26:	4925      	ldr	r1, [pc, #148]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002e28:	4313      	orrs	r3, r2
 8002e2a:	600b      	str	r3, [r1, #0]
 8002e2c:	e015      	b.n	8002e5a <HAL_RCC_OscConfig+0x212>
 8002e2e:	4b24      	ldr	r3, [pc, #144]	@ (8002ec0 <HAL_RCC_OscConfig+0x278>)
 8002e30:	2200      	movs	r2, #0
 8002e32:	601a      	str	r2, [r3, #0]
 8002e34:	f7ff f8b0 	bl	8001f98 <HAL_GetTick>
 8002e38:	6138      	str	r0, [r7, #16]
 8002e3a:	e008      	b.n	8002e4e <HAL_RCC_OscConfig+0x206>
 8002e3c:	f7ff f8ac 	bl	8001f98 <HAL_GetTick>
 8002e40:	4602      	mov	r2, r0
 8002e42:	693b      	ldr	r3, [r7, #16]
 8002e44:	1ad3      	subs	r3, r2, r3
 8002e46:	2b02      	cmp	r3, #2
 8002e48:	d901      	bls.n	8002e4e <HAL_RCC_OscConfig+0x206>
 8002e4a:	2303      	movs	r3, #3
 8002e4c:	e193      	b.n	8003176 <HAL_RCC_OscConfig+0x52e>
 8002e4e:	4b1b      	ldr	r3, [pc, #108]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002e50:	681b      	ldr	r3, [r3, #0]
 8002e52:	f003 0302 	and.w	r3, r3, #2
 8002e56:	2b00      	cmp	r3, #0
 8002e58:	d1f0      	bne.n	8002e3c <HAL_RCC_OscConfig+0x1f4>
 8002e5a:	687b      	ldr	r3, [r7, #4]
 8002e5c:	681b      	ldr	r3, [r3, #0]
 8002e5e:	f003 0308 	and.w	r3, r3, #8
 8002e62:	2b00      	cmp	r3, #0
 8002e64:	d036      	beq.n	8002ed4 <HAL_RCC_OscConfig+0x28c>
 8002e66:	687b      	ldr	r3, [r7, #4]
 8002e68:	695b      	ldr	r3, [r3, #20]
 8002e6a:	2b00      	cmp	r3, #0
 8002e6c:	d016      	beq.n	8002e9c <HAL_RCC_OscConfig+0x254>
 8002e6e:	4b15      	ldr	r3, [pc, #84]	@ (8002ec4 <HAL_RCC_OscConfig+0x27c>)
 8002e70:	2201      	movs	r2, #1
 8002e72:	601a      	str	r2, [r3, #0]
 8002e74:	f7ff f890 	bl	8001f98 <HAL_GetTick>
 8002e78:	6138      	str	r0, [r7, #16]
 8002e7a:	e008      	b.n	8002e8e <HAL_RCC_OscConfig+0x246>
 8002e7c:	f7ff f88c 	bl	8001f98 <HAL_GetTick>
 8002e80:	4602      	mov	r2, r0
 8002e82:	693b      	ldr	r3, [r7, #16]
 8002e84:	1ad3      	subs	r3, r2, r3
 8002e86:	2b02      	cmp	r3, #2
 8002e88:	d901      	bls.n	8002e8e <HAL_RCC_OscConfig+0x246>
 8002e8a:	2303      	movs	r3, #3
 8002e8c:	e173      	b.n	8003176 <HAL_RCC_OscConfig+0x52e>
 8002e8e:	4b0b      	ldr	r3, [pc, #44]	@ (8002ebc <HAL_RCC_OscConfig+0x274>)
 8002e90:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002e92:	f003 0302 	and.w	r3, r3, #2
 8002e96:	2b00      	cmp	r3, #0
 8002e98:	d0f0      	beq.n	8002e7c <HAL_RCC_OscConfig+0x234>
 8002e9a:	e01b      	b.n	8002ed4 <HAL_RCC_OscConfig+0x28c>
 8002e9c:	4b09      	ldr	r3, [pc, #36]	@ (8002ec4 <HAL_RCC_OscConfig+0x27c>)
 8002e9e:	2200      	movs	r2, #0
 8002ea0:	601a      	str	r2, [r3, #0]
 8002ea2:	f7ff f879 	bl	8001f98 <HAL_GetTick>
 8002ea6:	6138      	str	r0, [r7, #16]
 8002ea8:	e00e      	b.n	8002ec8 <HAL_RCC_OscConfig+0x280>
 8002eaa:	f7ff f875 	bl	8001f98 <HAL_GetTick>
 8002eae:	4602      	mov	r2, r0
 8002eb0:	693b      	ldr	r3, [r7, #16]
 8002eb2:	1ad3      	subs	r3, r2, r3
 8002eb4:	2b02      	cmp	r3, #2
 8002eb6:	d907      	bls.n	8002ec8 <HAL_RCC_OscConfig+0x280>
 8002eb8:	2303      	movs	r3, #3
 8002eba:	e15c      	b.n	8003176 <HAL_RCC_OscConfig+0x52e>
 8002ebc:	40023800 	.word	0x40023800
 8002ec0:	42470000 	.word	0x42470000
 8002ec4:	42470e80 	.word	0x42470e80
 8002ec8:	4b8a      	ldr	r3, [pc, #552]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 8002eca:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002ecc:	f003 0302 	and.w	r3, r3, #2
 8002ed0:	2b00      	cmp	r3, #0
 8002ed2:	d1ea      	bne.n	8002eaa <HAL_RCC_OscConfig+0x262>
 8002ed4:	687b      	ldr	r3, [r7, #4]
 8002ed6:	681b      	ldr	r3, [r3, #0]
 8002ed8:	f003 0304 	and.w	r3, r3, #4
 8002edc:	2b00      	cmp	r3, #0
 8002ede:	f000 8097 	beq.w	8003010 <HAL_RCC_OscConfig+0x3c8>
 8002ee2:	2300      	movs	r3, #0
 8002ee4:	75fb      	strb	r3, [r7, #23]
 8002ee6:	4b83      	ldr	r3, [pc, #524]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 8002ee8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002eea:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002eee:	2b00      	cmp	r3, #0
 8002ef0:	d10f      	bne.n	8002f12 <HAL_RCC_OscConfig+0x2ca>
 8002ef2:	2300      	movs	r3, #0
 8002ef4:	60bb      	str	r3, [r7, #8]
 8002ef6:	4b7f      	ldr	r3, [pc, #508]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 8002ef8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002efa:	4a7e      	ldr	r2, [pc, #504]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 8002efc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002f00:	6413      	str	r3, [r2, #64]	@ 0x40
 8002f02:	4b7c      	ldr	r3, [pc, #496]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 8002f04:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f06:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002f0a:	60bb      	str	r3, [r7, #8]
 8002f0c:	68bb      	ldr	r3, [r7, #8]
 8002f0e:	2301      	movs	r3, #1
 8002f10:	75fb      	strb	r3, [r7, #23]
 8002f12:	4b79      	ldr	r3, [pc, #484]	@ (80030f8 <HAL_RCC_OscConfig+0x4b0>)
 8002f14:	681b      	ldr	r3, [r3, #0]
 8002f16:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002f1a:	2b00      	cmp	r3, #0
 8002f1c:	d118      	bne.n	8002f50 <HAL_RCC_OscConfig+0x308>
 8002f1e:	4b76      	ldr	r3, [pc, #472]	@ (80030f8 <HAL_RCC_OscConfig+0x4b0>)
 8002f20:	681b      	ldr	r3, [r3, #0]
 8002f22:	4a75      	ldr	r2, [pc, #468]	@ (80030f8 <HAL_RCC_OscConfig+0x4b0>)
 8002f24:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002f28:	6013      	str	r3, [r2, #0]
 8002f2a:	f7ff f835 	bl	8001f98 <HAL_GetTick>
 8002f2e:	6138      	str	r0, [r7, #16]
 8002f30:	e008      	b.n	8002f44 <HAL_RCC_OscConfig+0x2fc>
 8002f32:	f7ff f831 	bl	8001f98 <HAL_GetTick>
 8002f36:	4602      	mov	r2, r0
 8002f38:	693b      	ldr	r3, [r7, #16]
 8002f3a:	1ad3      	subs	r3, r2, r3
 8002f3c:	2b02      	cmp	r3, #2
 8002f3e:	d901      	bls.n	8002f44 <HAL_RCC_OscConfig+0x2fc>
 8002f40:	2303      	movs	r3, #3
 8002f42:	e118      	b.n	8003176 <HAL_RCC_OscConfig+0x52e>
 8002f44:	4b6c      	ldr	r3, [pc, #432]	@ (80030f8 <HAL_RCC_OscConfig+0x4b0>)
 8002f46:	681b      	ldr	r3, [r3, #0]
 8002f48:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002f4c:	2b00      	cmp	r3, #0
 8002f4e:	d0f0      	beq.n	8002f32 <HAL_RCC_OscConfig+0x2ea>
 8002f50:	687b      	ldr	r3, [r7, #4]
 8002f52:	689b      	ldr	r3, [r3, #8]
 8002f54:	2b01      	cmp	r3, #1
 8002f56:	d106      	bne.n	8002f66 <HAL_RCC_OscConfig+0x31e>
 8002f58:	4b66      	ldr	r3, [pc, #408]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 8002f5a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002f5c:	4a65      	ldr	r2, [pc, #404]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 8002f5e:	f043 0301 	orr.w	r3, r3, #1
 8002f62:	6713      	str	r3, [r2, #112]	@ 0x70
 8002f64:	e01c      	b.n	8002fa0 <HAL_RCC_OscConfig+0x358>
 8002f66:	687b      	ldr	r3, [r7, #4]
 8002f68:	689b      	ldr	r3, [r3, #8]
 8002f6a:	2b05      	cmp	r3, #5
 8002f6c:	d10c      	bne.n	8002f88 <HAL_RCC_OscConfig+0x340>
 8002f6e:	4b61      	ldr	r3, [pc, #388]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 8002f70:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002f72:	4a60      	ldr	r2, [pc, #384]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 8002f74:	f043 0304 	orr.w	r3, r3, #4
 8002f78:	6713      	str	r3, [r2, #112]	@ 0x70
 8002f7a:	4b5e      	ldr	r3, [pc, #376]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 8002f7c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002f7e:	4a5d      	ldr	r2, [pc, #372]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 8002f80:	f043 0301 	orr.w	r3, r3, #1
 8002f84:	6713      	str	r3, [r2, #112]	@ 0x70
 8002f86:	e00b      	b.n	8002fa0 <HAL_RCC_OscConfig+0x358>
 8002f88:	4b5a      	ldr	r3, [pc, #360]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 8002f8a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002f8c:	4a59      	ldr	r2, [pc, #356]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 8002f8e:	f023 0301 	bic.w	r3, r3, #1
 8002f92:	6713      	str	r3, [r2, #112]	@ 0x70
 8002f94:	4b57      	ldr	r3, [pc, #348]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 8002f96:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002f98:	4a56      	ldr	r2, [pc, #344]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 8002f9a:	f023 0304 	bic.w	r3, r3, #4
 8002f9e:	6713      	str	r3, [r2, #112]	@ 0x70
 8002fa0:	687b      	ldr	r3, [r7, #4]
 8002fa2:	689b      	ldr	r3, [r3, #8]
 8002fa4:	2b00      	cmp	r3, #0
 8002fa6:	d015      	beq.n	8002fd4 <HAL_RCC_OscConfig+0x38c>
 8002fa8:	f7fe fff6 	bl	8001f98 <HAL_GetTick>
 8002fac:	6138      	str	r0, [r7, #16]
 8002fae:	e00a      	b.n	8002fc6 <HAL_RCC_OscConfig+0x37e>
 8002fb0:	f7fe fff2 	bl	8001f98 <HAL_GetTick>
 8002fb4:	4602      	mov	r2, r0
 8002fb6:	693b      	ldr	r3, [r7, #16]
 8002fb8:	1ad3      	subs	r3, r2, r3
 8002fba:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002fbe:	4293      	cmp	r3, r2
 8002fc0:	d901      	bls.n	8002fc6 <HAL_RCC_OscConfig+0x37e>
 8002fc2:	2303      	movs	r3, #3
 8002fc4:	e0d7      	b.n	8003176 <HAL_RCC_OscConfig+0x52e>
 8002fc6:	4b4b      	ldr	r3, [pc, #300]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 8002fc8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002fca:	f003 0302 	and.w	r3, r3, #2
 8002fce:	2b00      	cmp	r3, #0
 8002fd0:	d0ee      	beq.n	8002fb0 <HAL_RCC_OscConfig+0x368>
 8002fd2:	e014      	b.n	8002ffe <HAL_RCC_OscConfig+0x3b6>
 8002fd4:	f7fe ffe0 	bl	8001f98 <HAL_GetTick>
 8002fd8:	6138      	str	r0, [r7, #16]
 8002fda:	e00a      	b.n	8002ff2 <HAL_RCC_OscConfig+0x3aa>
 8002fdc:	f7fe ffdc 	bl	8001f98 <HAL_GetTick>
 8002fe0:	4602      	mov	r2, r0
 8002fe2:	693b      	ldr	r3, [r7, #16]
 8002fe4:	1ad3      	subs	r3, r2, r3
 8002fe6:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002fea:	4293      	cmp	r3, r2
 8002fec:	d901      	bls.n	8002ff2 <HAL_RCC_OscConfig+0x3aa>
 8002fee:	2303      	movs	r3, #3
 8002ff0:	e0c1      	b.n	8003176 <HAL_RCC_OscConfig+0x52e>
 8002ff2:	4b40      	ldr	r3, [pc, #256]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 8002ff4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002ff6:	f003 0302 	and.w	r3, r3, #2
 8002ffa:	2b00      	cmp	r3, #0
 8002ffc:	d1ee      	bne.n	8002fdc <HAL_RCC_OscConfig+0x394>
 8002ffe:	7dfb      	ldrb	r3, [r7, #23]
 8003000:	2b01      	cmp	r3, #1
 8003002:	d105      	bne.n	8003010 <HAL_RCC_OscConfig+0x3c8>
 8003004:	4b3b      	ldr	r3, [pc, #236]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 8003006:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003008:	4a3a      	ldr	r2, [pc, #232]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 800300a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800300e:	6413      	str	r3, [r2, #64]	@ 0x40
 8003010:	687b      	ldr	r3, [r7, #4]
 8003012:	699b      	ldr	r3, [r3, #24]
 8003014:	2b00      	cmp	r3, #0
 8003016:	f000 80ad 	beq.w	8003174 <HAL_RCC_OscConfig+0x52c>
 800301a:	4b36      	ldr	r3, [pc, #216]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 800301c:	689b      	ldr	r3, [r3, #8]
 800301e:	f003 030c 	and.w	r3, r3, #12
 8003022:	2b08      	cmp	r3, #8
 8003024:	d060      	beq.n	80030e8 <HAL_RCC_OscConfig+0x4a0>
 8003026:	687b      	ldr	r3, [r7, #4]
 8003028:	699b      	ldr	r3, [r3, #24]
 800302a:	2b02      	cmp	r3, #2
 800302c:	d145      	bne.n	80030ba <HAL_RCC_OscConfig+0x472>
 800302e:	4b33      	ldr	r3, [pc, #204]	@ (80030fc <HAL_RCC_OscConfig+0x4b4>)
 8003030:	2200      	movs	r2, #0
 8003032:	601a      	str	r2, [r3, #0]
 8003034:	f7fe ffb0 	bl	8001f98 <HAL_GetTick>
 8003038:	6138      	str	r0, [r7, #16]
 800303a:	e008      	b.n	800304e <HAL_RCC_OscConfig+0x406>
 800303c:	f7fe ffac 	bl	8001f98 <HAL_GetTick>
 8003040:	4602      	mov	r2, r0
 8003042:	693b      	ldr	r3, [r7, #16]
 8003044:	1ad3      	subs	r3, r2, r3
 8003046:	2b02      	cmp	r3, #2
 8003048:	d901      	bls.n	800304e <HAL_RCC_OscConfig+0x406>
 800304a:	2303      	movs	r3, #3
 800304c:	e093      	b.n	8003176 <HAL_RCC_OscConfig+0x52e>
 800304e:	4b29      	ldr	r3, [pc, #164]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 8003050:	681b      	ldr	r3, [r3, #0]
 8003052:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003056:	2b00      	cmp	r3, #0
 8003058:	d1f0      	bne.n	800303c <HAL_RCC_OscConfig+0x3f4>
 800305a:	687b      	ldr	r3, [r7, #4]
 800305c:	69da      	ldr	r2, [r3, #28]
 800305e:	687b      	ldr	r3, [r7, #4]
 8003060:	6a1b      	ldr	r3, [r3, #32]
 8003062:	431a      	orrs	r2, r3
 8003064:	687b      	ldr	r3, [r7, #4]
 8003066:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003068:	019b      	lsls	r3, r3, #6
 800306a:	431a      	orrs	r2, r3
 800306c:	687b      	ldr	r3, [r7, #4]
 800306e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003070:	085b      	lsrs	r3, r3, #1
 8003072:	3b01      	subs	r3, #1
 8003074:	041b      	lsls	r3, r3, #16
 8003076:	431a      	orrs	r2, r3
 8003078:	687b      	ldr	r3, [r7, #4]
 800307a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800307c:	061b      	lsls	r3, r3, #24
 800307e:	431a      	orrs	r2, r3
 8003080:	687b      	ldr	r3, [r7, #4]
 8003082:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003084:	071b      	lsls	r3, r3, #28
 8003086:	491b      	ldr	r1, [pc, #108]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 8003088:	4313      	orrs	r3, r2
 800308a:	604b      	str	r3, [r1, #4]
 800308c:	4b1b      	ldr	r3, [pc, #108]	@ (80030fc <HAL_RCC_OscConfig+0x4b4>)
 800308e:	2201      	movs	r2, #1
 8003090:	601a      	str	r2, [r3, #0]
 8003092:	f7fe ff81 	bl	8001f98 <HAL_GetTick>
 8003096:	6138      	str	r0, [r7, #16]
 8003098:	e008      	b.n	80030ac <HAL_RCC_OscConfig+0x464>
 800309a:	f7fe ff7d 	bl	8001f98 <HAL_GetTick>
 800309e:	4602      	mov	r2, r0
 80030a0:	693b      	ldr	r3, [r7, #16]
 80030a2:	1ad3      	subs	r3, r2, r3
 80030a4:	2b02      	cmp	r3, #2
 80030a6:	d901      	bls.n	80030ac <HAL_RCC_OscConfig+0x464>
 80030a8:	2303      	movs	r3, #3
 80030aa:	e064      	b.n	8003176 <HAL_RCC_OscConfig+0x52e>
 80030ac:	4b11      	ldr	r3, [pc, #68]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 80030ae:	681b      	ldr	r3, [r3, #0]
 80030b0:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80030b4:	2b00      	cmp	r3, #0
 80030b6:	d0f0      	beq.n	800309a <HAL_RCC_OscConfig+0x452>
 80030b8:	e05c      	b.n	8003174 <HAL_RCC_OscConfig+0x52c>
 80030ba:	4b10      	ldr	r3, [pc, #64]	@ (80030fc <HAL_RCC_OscConfig+0x4b4>)
 80030bc:	2200      	movs	r2, #0
 80030be:	601a      	str	r2, [r3, #0]
 80030c0:	f7fe ff6a 	bl	8001f98 <HAL_GetTick>
 80030c4:	6138      	str	r0, [r7, #16]
 80030c6:	e008      	b.n	80030da <HAL_RCC_OscConfig+0x492>
 80030c8:	f7fe ff66 	bl	8001f98 <HAL_GetTick>
 80030cc:	4602      	mov	r2, r0
 80030ce:	693b      	ldr	r3, [r7, #16]
 80030d0:	1ad3      	subs	r3, r2, r3
 80030d2:	2b02      	cmp	r3, #2
 80030d4:	d901      	bls.n	80030da <HAL_RCC_OscConfig+0x492>
 80030d6:	2303      	movs	r3, #3
 80030d8:	e04d      	b.n	8003176 <HAL_RCC_OscConfig+0x52e>
 80030da:	4b06      	ldr	r3, [pc, #24]	@ (80030f4 <HAL_RCC_OscConfig+0x4ac>)
 80030dc:	681b      	ldr	r3, [r3, #0]
 80030de:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80030e2:	2b00      	cmp	r3, #0
 80030e4:	d1f0      	bne.n	80030c8 <HAL_RCC_OscConfig+0x480>
 80030e6:	e045      	b.n	8003174 <HAL_RCC_OscConfig+0x52c>
 80030e8:	687b      	ldr	r3, [r7, #4]
 80030ea:	699b      	ldr	r3, [r3, #24]
 80030ec:	2b01      	cmp	r3, #1
 80030ee:	d107      	bne.n	8003100 <HAL_RCC_OscConfig+0x4b8>
 80030f0:	2301      	movs	r3, #1
 80030f2:	e040      	b.n	8003176 <HAL_RCC_OscConfig+0x52e>
 80030f4:	40023800 	.word	0x40023800
 80030f8:	40007000 	.word	0x40007000
 80030fc:	42470060 	.word	0x42470060
 8003100:	4b1f      	ldr	r3, [pc, #124]	@ (8003180 <HAL_RCC_OscConfig+0x538>)
 8003102:	685b      	ldr	r3, [r3, #4]
 8003104:	60fb      	str	r3, [r7, #12]
 8003106:	687b      	ldr	r3, [r7, #4]
 8003108:	699b      	ldr	r3, [r3, #24]
 800310a:	2b01      	cmp	r3, #1
 800310c:	d030      	beq.n	8003170 <HAL_RCC_OscConfig+0x528>
 800310e:	68fb      	ldr	r3, [r7, #12]
 8003110:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8003114:	687b      	ldr	r3, [r7, #4]
 8003116:	69db      	ldr	r3, [r3, #28]
 8003118:	429a      	cmp	r2, r3
 800311a:	d129      	bne.n	8003170 <HAL_RCC_OscConfig+0x528>
 800311c:	68fb      	ldr	r3, [r7, #12]
 800311e:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8003122:	687b      	ldr	r3, [r7, #4]
 8003124:	6a1b      	ldr	r3, [r3, #32]
 8003126:	429a      	cmp	r2, r3
 8003128:	d122      	bne.n	8003170 <HAL_RCC_OscConfig+0x528>
 800312a:	68fa      	ldr	r2, [r7, #12]
 800312c:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8003130:	4013      	ands	r3, r2
 8003132:	687a      	ldr	r2, [r7, #4]
 8003134:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8003136:	0192      	lsls	r2, r2, #6
 8003138:	4293      	cmp	r3, r2
 800313a:	d119      	bne.n	8003170 <HAL_RCC_OscConfig+0x528>
 800313c:	68fb      	ldr	r3, [r7, #12]
 800313e:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8003142:	687b      	ldr	r3, [r7, #4]
 8003144:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003146:	085b      	lsrs	r3, r3, #1
 8003148:	3b01      	subs	r3, #1
 800314a:	041b      	lsls	r3, r3, #16
 800314c:	429a      	cmp	r2, r3
 800314e:	d10f      	bne.n	8003170 <HAL_RCC_OscConfig+0x528>
 8003150:	68fb      	ldr	r3, [r7, #12]
 8003152:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8003156:	687b      	ldr	r3, [r7, #4]
 8003158:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800315a:	061b      	lsls	r3, r3, #24
 800315c:	429a      	cmp	r2, r3
 800315e:	d107      	bne.n	8003170 <HAL_RCC_OscConfig+0x528>
 8003160:	68fb      	ldr	r3, [r7, #12]
 8003162:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 8003166:	687b      	ldr	r3, [r7, #4]
 8003168:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800316a:	071b      	lsls	r3, r3, #28
 800316c:	429a      	cmp	r2, r3
 800316e:	d001      	beq.n	8003174 <HAL_RCC_OscConfig+0x52c>
 8003170:	2301      	movs	r3, #1
 8003172:	e000      	b.n	8003176 <HAL_RCC_OscConfig+0x52e>
 8003174:	2300      	movs	r3, #0
 8003176:	4618      	mov	r0, r3
 8003178:	3718      	adds	r7, #24
 800317a:	46bd      	mov	sp, r7
 800317c:	bd80      	pop	{r7, pc}
 800317e:	bf00      	nop
 8003180:	40023800 	.word	0x40023800

08003184 <HAL_TIM_Base_Init>:
 8003184:	b580      	push	{r7, lr}
 8003186:	b082      	sub	sp, #8
 8003188:	af00      	add	r7, sp, #0
 800318a:	6078      	str	r0, [r7, #4]
 800318c:	687b      	ldr	r3, [r7, #4]
 800318e:	2b00      	cmp	r3, #0
 8003190:	d101      	bne.n	8003196 <HAL_TIM_Base_Init+0x12>
 8003192:	2301      	movs	r3, #1
 8003194:	e041      	b.n	800321a <HAL_TIM_Base_Init+0x96>
 8003196:	687b      	ldr	r3, [r7, #4]
 8003198:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800319c:	b2db      	uxtb	r3, r3
 800319e:	2b00      	cmp	r3, #0
 80031a0:	d106      	bne.n	80031b0 <HAL_TIM_Base_Init+0x2c>
 80031a2:	687b      	ldr	r3, [r7, #4]
 80031a4:	2200      	movs	r2, #0
 80031a6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80031aa:	6878      	ldr	r0, [r7, #4]
 80031ac:	f7fe fc6c 	bl	8001a88 <HAL_TIM_Base_MspInit>
 80031b0:	687b      	ldr	r3, [r7, #4]
 80031b2:	2202      	movs	r2, #2
 80031b4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80031b8:	687b      	ldr	r3, [r7, #4]
 80031ba:	681a      	ldr	r2, [r3, #0]
 80031bc:	687b      	ldr	r3, [r7, #4]
 80031be:	3304      	adds	r3, #4
 80031c0:	4619      	mov	r1, r3
 80031c2:	4610      	mov	r0, r2
 80031c4:	f000 fe66 	bl	8003e94 <TIM_Base_SetConfig>
 80031c8:	687b      	ldr	r3, [r7, #4]
 80031ca:	2201      	movs	r2, #1
 80031cc:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80031d0:	687b      	ldr	r3, [r7, #4]
 80031d2:	2201      	movs	r2, #1
 80031d4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80031d8:	687b      	ldr	r3, [r7, #4]
 80031da:	2201      	movs	r2, #1
 80031dc:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80031e0:	687b      	ldr	r3, [r7, #4]
 80031e2:	2201      	movs	r2, #1
 80031e4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	2201      	movs	r2, #1
 80031ec:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80031f0:	687b      	ldr	r3, [r7, #4]
 80031f2:	2201      	movs	r2, #1
 80031f4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80031f8:	687b      	ldr	r3, [r7, #4]
 80031fa:	2201      	movs	r2, #1
 80031fc:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8003200:	687b      	ldr	r3, [r7, #4]
 8003202:	2201      	movs	r2, #1
 8003204:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8003208:	687b      	ldr	r3, [r7, #4]
 800320a:	2201      	movs	r2, #1
 800320c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	2201      	movs	r2, #1
 8003214:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003218:	2300      	movs	r3, #0
 800321a:	4618      	mov	r0, r3
 800321c:	3708      	adds	r7, #8
 800321e:	46bd      	mov	sp, r7
 8003220:	bd80      	pop	{r7, pc}
	...

08003224 <HAL_TIM_Base_Start>:
 8003224:	b480      	push	{r7}
 8003226:	b085      	sub	sp, #20
 8003228:	af00      	add	r7, sp, #0
 800322a:	6078      	str	r0, [r7, #4]
 800322c:	687b      	ldr	r3, [r7, #4]
 800322e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003232:	b2db      	uxtb	r3, r3
 8003234:	2b01      	cmp	r3, #1
 8003236:	d001      	beq.n	800323c <HAL_TIM_Base_Start+0x18>
 8003238:	2301      	movs	r3, #1
 800323a:	e046      	b.n	80032ca <HAL_TIM_Base_Start+0xa6>
 800323c:	687b      	ldr	r3, [r7, #4]
 800323e:	2202      	movs	r2, #2
 8003240:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003244:	687b      	ldr	r3, [r7, #4]
 8003246:	681b      	ldr	r3, [r3, #0]
 8003248:	4a23      	ldr	r2, [pc, #140]	@ (80032d8 <HAL_TIM_Base_Start+0xb4>)
 800324a:	4293      	cmp	r3, r2
 800324c:	d022      	beq.n	8003294 <HAL_TIM_Base_Start+0x70>
 800324e:	687b      	ldr	r3, [r7, #4]
 8003250:	681b      	ldr	r3, [r3, #0]
 8003252:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003256:	d01d      	beq.n	8003294 <HAL_TIM_Base_Start+0x70>
 8003258:	687b      	ldr	r3, [r7, #4]
 800325a:	681b      	ldr	r3, [r3, #0]
 800325c:	4a1f      	ldr	r2, [pc, #124]	@ (80032dc <HAL_TIM_Base_Start+0xb8>)
 800325e:	4293      	cmp	r3, r2
 8003260:	d018      	beq.n	8003294 <HAL_TIM_Base_Start+0x70>
 8003262:	687b      	ldr	r3, [r7, #4]
 8003264:	681b      	ldr	r3, [r3, #0]
 8003266:	4a1e      	ldr	r2, [pc, #120]	@ (80032e0 <HAL_TIM_Base_Start+0xbc>)
 8003268:	4293      	cmp	r3, r2
 800326a:	d013      	beq.n	8003294 <HAL_TIM_Base_Start+0x70>
 800326c:	687b      	ldr	r3, [r7, #4]
 800326e:	681b      	ldr	r3, [r3, #0]
 8003270:	4a1c      	ldr	r2, [pc, #112]	@ (80032e4 <HAL_TIM_Base_Start+0xc0>)
 8003272:	4293      	cmp	r3, r2
 8003274:	d00e      	beq.n	8003294 <HAL_TIM_Base_Start+0x70>
 8003276:	687b      	ldr	r3, [r7, #4]
 8003278:	681b      	ldr	r3, [r3, #0]
 800327a:	4a1b      	ldr	r2, [pc, #108]	@ (80032e8 <HAL_TIM_Base_Start+0xc4>)
 800327c:	4293      	cmp	r3, r2
 800327e:	d009      	beq.n	8003294 <HAL_TIM_Base_Start+0x70>
 8003280:	687b      	ldr	r3, [r7, #4]
 8003282:	681b      	ldr	r3, [r3, #0]
 8003284:	4a19      	ldr	r2, [pc, #100]	@ (80032ec <HAL_TIM_Base_Start+0xc8>)
 8003286:	4293      	cmp	r3, r2
 8003288:	d004      	beq.n	8003294 <HAL_TIM_Base_Start+0x70>
 800328a:	687b      	ldr	r3, [r7, #4]
 800328c:	681b      	ldr	r3, [r3, #0]
 800328e:	4a18      	ldr	r2, [pc, #96]	@ (80032f0 <HAL_TIM_Base_Start+0xcc>)
 8003290:	4293      	cmp	r3, r2
 8003292:	d111      	bne.n	80032b8 <HAL_TIM_Base_Start+0x94>
 8003294:	687b      	ldr	r3, [r7, #4]
 8003296:	681b      	ldr	r3, [r3, #0]
 8003298:	689b      	ldr	r3, [r3, #8]
 800329a:	f003 0307 	and.w	r3, r3, #7
 800329e:	60fb      	str	r3, [r7, #12]
 80032a0:	68fb      	ldr	r3, [r7, #12]
 80032a2:	2b06      	cmp	r3, #6
 80032a4:	d010      	beq.n	80032c8 <HAL_TIM_Base_Start+0xa4>
 80032a6:	687b      	ldr	r3, [r7, #4]
 80032a8:	681b      	ldr	r3, [r3, #0]
 80032aa:	681a      	ldr	r2, [r3, #0]
 80032ac:	687b      	ldr	r3, [r7, #4]
 80032ae:	681b      	ldr	r3, [r3, #0]
 80032b0:	f042 0201 	orr.w	r2, r2, #1
 80032b4:	601a      	str	r2, [r3, #0]
 80032b6:	e007      	b.n	80032c8 <HAL_TIM_Base_Start+0xa4>
 80032b8:	687b      	ldr	r3, [r7, #4]
 80032ba:	681b      	ldr	r3, [r3, #0]
 80032bc:	681a      	ldr	r2, [r3, #0]
 80032be:	687b      	ldr	r3, [r7, #4]
 80032c0:	681b      	ldr	r3, [r3, #0]
 80032c2:	f042 0201 	orr.w	r2, r2, #1
 80032c6:	601a      	str	r2, [r3, #0]
 80032c8:	2300      	movs	r3, #0
 80032ca:	4618      	mov	r0, r3
 80032cc:	3714      	adds	r7, #20
 80032ce:	46bd      	mov	sp, r7
 80032d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032d4:	4770      	bx	lr
 80032d6:	bf00      	nop
 80032d8:	40010000 	.word	0x40010000
 80032dc:	40000400 	.word	0x40000400
 80032e0:	40000800 	.word	0x40000800
 80032e4:	40000c00 	.word	0x40000c00
 80032e8:	40010400 	.word	0x40010400
 80032ec:	40014000 	.word	0x40014000
 80032f0:	40001800 	.word	0x40001800

080032f4 <HAL_TIM_PWM_Init>:
 80032f4:	b580      	push	{r7, lr}
 80032f6:	b082      	sub	sp, #8
 80032f8:	af00      	add	r7, sp, #0
 80032fa:	6078      	str	r0, [r7, #4]
 80032fc:	687b      	ldr	r3, [r7, #4]
 80032fe:	2b00      	cmp	r3, #0
 8003300:	d101      	bne.n	8003306 <HAL_TIM_PWM_Init+0x12>
 8003302:	2301      	movs	r3, #1
 8003304:	e041      	b.n	800338a <HAL_TIM_PWM_Init+0x96>
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800330c:	b2db      	uxtb	r3, r3
 800330e:	2b00      	cmp	r3, #0
 8003310:	d106      	bne.n	8003320 <HAL_TIM_PWM_Init+0x2c>
 8003312:	687b      	ldr	r3, [r7, #4]
 8003314:	2200      	movs	r2, #0
 8003316:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800331a:	6878      	ldr	r0, [r7, #4]
 800331c:	f000 f839 	bl	8003392 <HAL_TIM_PWM_MspInit>
 8003320:	687b      	ldr	r3, [r7, #4]
 8003322:	2202      	movs	r2, #2
 8003324:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003328:	687b      	ldr	r3, [r7, #4]
 800332a:	681a      	ldr	r2, [r3, #0]
 800332c:	687b      	ldr	r3, [r7, #4]
 800332e:	3304      	adds	r3, #4
 8003330:	4619      	mov	r1, r3
 8003332:	4610      	mov	r0, r2
 8003334:	f000 fdae 	bl	8003e94 <TIM_Base_SetConfig>
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	2201      	movs	r2, #1
 800333c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8003340:	687b      	ldr	r3, [r7, #4]
 8003342:	2201      	movs	r2, #1
 8003344:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003348:	687b      	ldr	r3, [r7, #4]
 800334a:	2201      	movs	r2, #1
 800334c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003350:	687b      	ldr	r3, [r7, #4]
 8003352:	2201      	movs	r2, #1
 8003354:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003358:	687b      	ldr	r3, [r7, #4]
 800335a:	2201      	movs	r2, #1
 800335c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003360:	687b      	ldr	r3, [r7, #4]
 8003362:	2201      	movs	r2, #1
 8003364:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003368:	687b      	ldr	r3, [r7, #4]
 800336a:	2201      	movs	r2, #1
 800336c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8003370:	687b      	ldr	r3, [r7, #4]
 8003372:	2201      	movs	r2, #1
 8003374:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8003378:	687b      	ldr	r3, [r7, #4]
 800337a:	2201      	movs	r2, #1
 800337c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8003380:	687b      	ldr	r3, [r7, #4]
 8003382:	2201      	movs	r2, #1
 8003384:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003388:	2300      	movs	r3, #0
 800338a:	4618      	mov	r0, r3
 800338c:	3708      	adds	r7, #8
 800338e:	46bd      	mov	sp, r7
 8003390:	bd80      	pop	{r7, pc}

08003392 <HAL_TIM_PWM_MspInit>:
 8003392:	b480      	push	{r7}
 8003394:	b083      	sub	sp, #12
 8003396:	af00      	add	r7, sp, #0
 8003398:	6078      	str	r0, [r7, #4]
 800339a:	bf00      	nop
 800339c:	370c      	adds	r7, #12
 800339e:	46bd      	mov	sp, r7
 80033a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033a4:	4770      	bx	lr
	...

080033a8 <HAL_TIM_PWM_Start>:
 80033a8:	b580      	push	{r7, lr}
 80033aa:	b084      	sub	sp, #16
 80033ac:	af00      	add	r7, sp, #0
 80033ae:	6078      	str	r0, [r7, #4]
 80033b0:	6039      	str	r1, [r7, #0]
 80033b2:	683b      	ldr	r3, [r7, #0]
 80033b4:	2b00      	cmp	r3, #0
 80033b6:	d109      	bne.n	80033cc <HAL_TIM_PWM_Start+0x24>
 80033b8:	687b      	ldr	r3, [r7, #4]
 80033ba:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 80033be:	b2db      	uxtb	r3, r3
 80033c0:	2b01      	cmp	r3, #1
 80033c2:	bf14      	ite	ne
 80033c4:	2301      	movne	r3, #1
 80033c6:	2300      	moveq	r3, #0
 80033c8:	b2db      	uxtb	r3, r3
 80033ca:	e022      	b.n	8003412 <HAL_TIM_PWM_Start+0x6a>
 80033cc:	683b      	ldr	r3, [r7, #0]
 80033ce:	2b04      	cmp	r3, #4
 80033d0:	d109      	bne.n	80033e6 <HAL_TIM_PWM_Start+0x3e>
 80033d2:	687b      	ldr	r3, [r7, #4]
 80033d4:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 80033d8:	b2db      	uxtb	r3, r3
 80033da:	2b01      	cmp	r3, #1
 80033dc:	bf14      	ite	ne
 80033de:	2301      	movne	r3, #1
 80033e0:	2300      	moveq	r3, #0
 80033e2:	b2db      	uxtb	r3, r3
 80033e4:	e015      	b.n	8003412 <HAL_TIM_PWM_Start+0x6a>
 80033e6:	683b      	ldr	r3, [r7, #0]
 80033e8:	2b08      	cmp	r3, #8
 80033ea:	d109      	bne.n	8003400 <HAL_TIM_PWM_Start+0x58>
 80033ec:	687b      	ldr	r3, [r7, #4]
 80033ee:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80033f2:	b2db      	uxtb	r3, r3
 80033f4:	2b01      	cmp	r3, #1
 80033f6:	bf14      	ite	ne
 80033f8:	2301      	movne	r3, #1
 80033fa:	2300      	moveq	r3, #0
 80033fc:	b2db      	uxtb	r3, r3
 80033fe:	e008      	b.n	8003412 <HAL_TIM_PWM_Start+0x6a>
 8003400:	687b      	ldr	r3, [r7, #4]
 8003402:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003406:	b2db      	uxtb	r3, r3
 8003408:	2b01      	cmp	r3, #1
 800340a:	bf14      	ite	ne
 800340c:	2301      	movne	r3, #1
 800340e:	2300      	moveq	r3, #0
 8003410:	b2db      	uxtb	r3, r3
 8003412:	2b00      	cmp	r3, #0
 8003414:	d001      	beq.n	800341a <HAL_TIM_PWM_Start+0x72>
 8003416:	2301      	movs	r3, #1
 8003418:	e07c      	b.n	8003514 <HAL_TIM_PWM_Start+0x16c>
 800341a:	683b      	ldr	r3, [r7, #0]
 800341c:	2b00      	cmp	r3, #0
 800341e:	d104      	bne.n	800342a <HAL_TIM_PWM_Start+0x82>
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	2202      	movs	r2, #2
 8003424:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003428:	e013      	b.n	8003452 <HAL_TIM_PWM_Start+0xaa>
 800342a:	683b      	ldr	r3, [r7, #0]
 800342c:	2b04      	cmp	r3, #4
 800342e:	d104      	bne.n	800343a <HAL_TIM_PWM_Start+0x92>
 8003430:	687b      	ldr	r3, [r7, #4]
 8003432:	2202      	movs	r2, #2
 8003434:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003438:	e00b      	b.n	8003452 <HAL_TIM_PWM_Start+0xaa>
 800343a:	683b      	ldr	r3, [r7, #0]
 800343c:	2b08      	cmp	r3, #8
 800343e:	d104      	bne.n	800344a <HAL_TIM_PWM_Start+0xa2>
 8003440:	687b      	ldr	r3, [r7, #4]
 8003442:	2202      	movs	r2, #2
 8003444:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003448:	e003      	b.n	8003452 <HAL_TIM_PWM_Start+0xaa>
 800344a:	687b      	ldr	r3, [r7, #4]
 800344c:	2202      	movs	r2, #2
 800344e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003452:	687b      	ldr	r3, [r7, #4]
 8003454:	681b      	ldr	r3, [r3, #0]
 8003456:	2201      	movs	r2, #1
 8003458:	6839      	ldr	r1, [r7, #0]
 800345a:	4618      	mov	r0, r3
 800345c:	f001 f8a1 	bl	80045a2 <TIM_CCxChannelCmd>
 8003460:	687b      	ldr	r3, [r7, #4]
 8003462:	681b      	ldr	r3, [r3, #0]
 8003464:	4a2d      	ldr	r2, [pc, #180]	@ (800351c <HAL_TIM_PWM_Start+0x174>)
 8003466:	4293      	cmp	r3, r2
 8003468:	d004      	beq.n	8003474 <HAL_TIM_PWM_Start+0xcc>
 800346a:	687b      	ldr	r3, [r7, #4]
 800346c:	681b      	ldr	r3, [r3, #0]
 800346e:	4a2c      	ldr	r2, [pc, #176]	@ (8003520 <HAL_TIM_PWM_Start+0x178>)
 8003470:	4293      	cmp	r3, r2
 8003472:	d101      	bne.n	8003478 <HAL_TIM_PWM_Start+0xd0>
 8003474:	2301      	movs	r3, #1
 8003476:	e000      	b.n	800347a <HAL_TIM_PWM_Start+0xd2>
 8003478:	2300      	movs	r3, #0
 800347a:	2b00      	cmp	r3, #0
 800347c:	d007      	beq.n	800348e <HAL_TIM_PWM_Start+0xe6>
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	681b      	ldr	r3, [r3, #0]
 8003482:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8003484:	687b      	ldr	r3, [r7, #4]
 8003486:	681b      	ldr	r3, [r3, #0]
 8003488:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800348c:	645a      	str	r2, [r3, #68]	@ 0x44
 800348e:	687b      	ldr	r3, [r7, #4]
 8003490:	681b      	ldr	r3, [r3, #0]
 8003492:	4a22      	ldr	r2, [pc, #136]	@ (800351c <HAL_TIM_PWM_Start+0x174>)
 8003494:	4293      	cmp	r3, r2
 8003496:	d022      	beq.n	80034de <HAL_TIM_PWM_Start+0x136>
 8003498:	687b      	ldr	r3, [r7, #4]
 800349a:	681b      	ldr	r3, [r3, #0]
 800349c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80034a0:	d01d      	beq.n	80034de <HAL_TIM_PWM_Start+0x136>
 80034a2:	687b      	ldr	r3, [r7, #4]
 80034a4:	681b      	ldr	r3, [r3, #0]
 80034a6:	4a1f      	ldr	r2, [pc, #124]	@ (8003524 <HAL_TIM_PWM_Start+0x17c>)
 80034a8:	4293      	cmp	r3, r2
 80034aa:	d018      	beq.n	80034de <HAL_TIM_PWM_Start+0x136>
 80034ac:	687b      	ldr	r3, [r7, #4]
 80034ae:	681b      	ldr	r3, [r3, #0]
 80034b0:	4a1d      	ldr	r2, [pc, #116]	@ (8003528 <HAL_TIM_PWM_Start+0x180>)
 80034b2:	4293      	cmp	r3, r2
 80034b4:	d013      	beq.n	80034de <HAL_TIM_PWM_Start+0x136>
 80034b6:	687b      	ldr	r3, [r7, #4]
 80034b8:	681b      	ldr	r3, [r3, #0]
 80034ba:	4a1c      	ldr	r2, [pc, #112]	@ (800352c <HAL_TIM_PWM_Start+0x184>)
 80034bc:	4293      	cmp	r3, r2
 80034be:	d00e      	beq.n	80034de <HAL_TIM_PWM_Start+0x136>
 80034c0:	687b      	ldr	r3, [r7, #4]
 80034c2:	681b      	ldr	r3, [r3, #0]
 80034c4:	4a16      	ldr	r2, [pc, #88]	@ (8003520 <HAL_TIM_PWM_Start+0x178>)
 80034c6:	4293      	cmp	r3, r2
 80034c8:	d009      	beq.n	80034de <HAL_TIM_PWM_Start+0x136>
 80034ca:	687b      	ldr	r3, [r7, #4]
 80034cc:	681b      	ldr	r3, [r3, #0]
 80034ce:	4a18      	ldr	r2, [pc, #96]	@ (8003530 <HAL_TIM_PWM_Start+0x188>)
 80034d0:	4293      	cmp	r3, r2
 80034d2:	d004      	beq.n	80034de <HAL_TIM_PWM_Start+0x136>
 80034d4:	687b      	ldr	r3, [r7, #4]
 80034d6:	681b      	ldr	r3, [r3, #0]
 80034d8:	4a16      	ldr	r2, [pc, #88]	@ (8003534 <HAL_TIM_PWM_Start+0x18c>)
 80034da:	4293      	cmp	r3, r2
 80034dc:	d111      	bne.n	8003502 <HAL_TIM_PWM_Start+0x15a>
 80034de:	687b      	ldr	r3, [r7, #4]
 80034e0:	681b      	ldr	r3, [r3, #0]
 80034e2:	689b      	ldr	r3, [r3, #8]
 80034e4:	f003 0307 	and.w	r3, r3, #7
 80034e8:	60fb      	str	r3, [r7, #12]
 80034ea:	68fb      	ldr	r3, [r7, #12]
 80034ec:	2b06      	cmp	r3, #6
 80034ee:	d010      	beq.n	8003512 <HAL_TIM_PWM_Start+0x16a>
 80034f0:	687b      	ldr	r3, [r7, #4]
 80034f2:	681b      	ldr	r3, [r3, #0]
 80034f4:	681a      	ldr	r2, [r3, #0]
 80034f6:	687b      	ldr	r3, [r7, #4]
 80034f8:	681b      	ldr	r3, [r3, #0]
 80034fa:	f042 0201 	orr.w	r2, r2, #1
 80034fe:	601a      	str	r2, [r3, #0]
 8003500:	e007      	b.n	8003512 <HAL_TIM_PWM_Start+0x16a>
 8003502:	687b      	ldr	r3, [r7, #4]
 8003504:	681b      	ldr	r3, [r3, #0]
 8003506:	681a      	ldr	r2, [r3, #0]
 8003508:	687b      	ldr	r3, [r7, #4]
 800350a:	681b      	ldr	r3, [r3, #0]
 800350c:	f042 0201 	orr.w	r2, r2, #1
 8003510:	601a      	str	r2, [r3, #0]
 8003512:	2300      	movs	r3, #0
 8003514:	4618      	mov	r0, r3
 8003516:	3710      	adds	r7, #16
 8003518:	46bd      	mov	sp, r7
 800351a:	bd80      	pop	{r7, pc}
 800351c:	40010000 	.word	0x40010000
 8003520:	40010400 	.word	0x40010400
 8003524:	40000400 	.word	0x40000400
 8003528:	40000800 	.word	0x40000800
 800352c:	40000c00 	.word	0x40000c00
 8003530:	40014000 	.word	0x40014000
 8003534:	40001800 	.word	0x40001800

08003538 <HAL_TIM_PWM_Start_IT>:
 8003538:	b580      	push	{r7, lr}
 800353a:	b084      	sub	sp, #16
 800353c:	af00      	add	r7, sp, #0
 800353e:	6078      	str	r0, [r7, #4]
 8003540:	6039      	str	r1, [r7, #0]
 8003542:	2300      	movs	r3, #0
 8003544:	73fb      	strb	r3, [r7, #15]
 8003546:	683b      	ldr	r3, [r7, #0]
 8003548:	2b00      	cmp	r3, #0
 800354a:	d109      	bne.n	8003560 <HAL_TIM_PWM_Start_IT+0x28>
 800354c:	687b      	ldr	r3, [r7, #4]
 800354e:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8003552:	b2db      	uxtb	r3, r3
 8003554:	2b01      	cmp	r3, #1
 8003556:	bf14      	ite	ne
 8003558:	2301      	movne	r3, #1
 800355a:	2300      	moveq	r3, #0
 800355c:	b2db      	uxtb	r3, r3
 800355e:	e022      	b.n	80035a6 <HAL_TIM_PWM_Start_IT+0x6e>
 8003560:	683b      	ldr	r3, [r7, #0]
 8003562:	2b04      	cmp	r3, #4
 8003564:	d109      	bne.n	800357a <HAL_TIM_PWM_Start_IT+0x42>
 8003566:	687b      	ldr	r3, [r7, #4]
 8003568:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 800356c:	b2db      	uxtb	r3, r3
 800356e:	2b01      	cmp	r3, #1
 8003570:	bf14      	ite	ne
 8003572:	2301      	movne	r3, #1
 8003574:	2300      	moveq	r3, #0
 8003576:	b2db      	uxtb	r3, r3
 8003578:	e015      	b.n	80035a6 <HAL_TIM_PWM_Start_IT+0x6e>
 800357a:	683b      	ldr	r3, [r7, #0]
 800357c:	2b08      	cmp	r3, #8
 800357e:	d109      	bne.n	8003594 <HAL_TIM_PWM_Start_IT+0x5c>
 8003580:	687b      	ldr	r3, [r7, #4]
 8003582:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8003586:	b2db      	uxtb	r3, r3
 8003588:	2b01      	cmp	r3, #1
 800358a:	bf14      	ite	ne
 800358c:	2301      	movne	r3, #1
 800358e:	2300      	moveq	r3, #0
 8003590:	b2db      	uxtb	r3, r3
 8003592:	e008      	b.n	80035a6 <HAL_TIM_PWM_Start_IT+0x6e>
 8003594:	687b      	ldr	r3, [r7, #4]
 8003596:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800359a:	b2db      	uxtb	r3, r3
 800359c:	2b01      	cmp	r3, #1
 800359e:	bf14      	ite	ne
 80035a0:	2301      	movne	r3, #1
 80035a2:	2300      	moveq	r3, #0
 80035a4:	b2db      	uxtb	r3, r3
 80035a6:	2b00      	cmp	r3, #0
 80035a8:	d001      	beq.n	80035ae <HAL_TIM_PWM_Start_IT+0x76>
 80035aa:	2301      	movs	r3, #1
 80035ac:	e0c7      	b.n	800373e <HAL_TIM_PWM_Start_IT+0x206>
 80035ae:	683b      	ldr	r3, [r7, #0]
 80035b0:	2b00      	cmp	r3, #0
 80035b2:	d104      	bne.n	80035be <HAL_TIM_PWM_Start_IT+0x86>
 80035b4:	687b      	ldr	r3, [r7, #4]
 80035b6:	2202      	movs	r2, #2
 80035b8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80035bc:	e013      	b.n	80035e6 <HAL_TIM_PWM_Start_IT+0xae>
 80035be:	683b      	ldr	r3, [r7, #0]
 80035c0:	2b04      	cmp	r3, #4
 80035c2:	d104      	bne.n	80035ce <HAL_TIM_PWM_Start_IT+0x96>
 80035c4:	687b      	ldr	r3, [r7, #4]
 80035c6:	2202      	movs	r2, #2
 80035c8:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80035cc:	e00b      	b.n	80035e6 <HAL_TIM_PWM_Start_IT+0xae>
 80035ce:	683b      	ldr	r3, [r7, #0]
 80035d0:	2b08      	cmp	r3, #8
 80035d2:	d104      	bne.n	80035de <HAL_TIM_PWM_Start_IT+0xa6>
 80035d4:	687b      	ldr	r3, [r7, #4]
 80035d6:	2202      	movs	r2, #2
 80035d8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80035dc:	e003      	b.n	80035e6 <HAL_TIM_PWM_Start_IT+0xae>
 80035de:	687b      	ldr	r3, [r7, #4]
 80035e0:	2202      	movs	r2, #2
 80035e2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80035e6:	683b      	ldr	r3, [r7, #0]
 80035e8:	2b0c      	cmp	r3, #12
 80035ea:	d841      	bhi.n	8003670 <HAL_TIM_PWM_Start_IT+0x138>
 80035ec:	a201      	add	r2, pc, #4	@ (adr r2, 80035f4 <HAL_TIM_PWM_Start_IT+0xbc>)
 80035ee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80035f2:	bf00      	nop
 80035f4:	08003629 	.word	0x08003629
 80035f8:	08003671 	.word	0x08003671
 80035fc:	08003671 	.word	0x08003671
 8003600:	08003671 	.word	0x08003671
 8003604:	0800363b 	.word	0x0800363b
 8003608:	08003671 	.word	0x08003671
 800360c:	08003671 	.word	0x08003671
 8003610:	08003671 	.word	0x08003671
 8003614:	0800364d 	.word	0x0800364d
 8003618:	08003671 	.word	0x08003671
 800361c:	08003671 	.word	0x08003671
 8003620:	08003671 	.word	0x08003671
 8003624:	0800365f 	.word	0x0800365f
 8003628:	687b      	ldr	r3, [r7, #4]
 800362a:	681b      	ldr	r3, [r3, #0]
 800362c:	68da      	ldr	r2, [r3, #12]
 800362e:	687b      	ldr	r3, [r7, #4]
 8003630:	681b      	ldr	r3, [r3, #0]
 8003632:	f042 0202 	orr.w	r2, r2, #2
 8003636:	60da      	str	r2, [r3, #12]
 8003638:	e01d      	b.n	8003676 <HAL_TIM_PWM_Start_IT+0x13e>
 800363a:	687b      	ldr	r3, [r7, #4]
 800363c:	681b      	ldr	r3, [r3, #0]
 800363e:	68da      	ldr	r2, [r3, #12]
 8003640:	687b      	ldr	r3, [r7, #4]
 8003642:	681b      	ldr	r3, [r3, #0]
 8003644:	f042 0204 	orr.w	r2, r2, #4
 8003648:	60da      	str	r2, [r3, #12]
 800364a:	e014      	b.n	8003676 <HAL_TIM_PWM_Start_IT+0x13e>
 800364c:	687b      	ldr	r3, [r7, #4]
 800364e:	681b      	ldr	r3, [r3, #0]
 8003650:	68da      	ldr	r2, [r3, #12]
 8003652:	687b      	ldr	r3, [r7, #4]
 8003654:	681b      	ldr	r3, [r3, #0]
 8003656:	f042 0208 	orr.w	r2, r2, #8
 800365a:	60da      	str	r2, [r3, #12]
 800365c:	e00b      	b.n	8003676 <HAL_TIM_PWM_Start_IT+0x13e>
 800365e:	687b      	ldr	r3, [r7, #4]
 8003660:	681b      	ldr	r3, [r3, #0]
 8003662:	68da      	ldr	r2, [r3, #12]
 8003664:	687b      	ldr	r3, [r7, #4]
 8003666:	681b      	ldr	r3, [r3, #0]
 8003668:	f042 0210 	orr.w	r2, r2, #16
 800366c:	60da      	str	r2, [r3, #12]
 800366e:	e002      	b.n	8003676 <HAL_TIM_PWM_Start_IT+0x13e>
 8003670:	2301      	movs	r3, #1
 8003672:	73fb      	strb	r3, [r7, #15]
 8003674:	bf00      	nop
 8003676:	7bfb      	ldrb	r3, [r7, #15]
 8003678:	2b00      	cmp	r3, #0
 800367a:	d15f      	bne.n	800373c <HAL_TIM_PWM_Start_IT+0x204>
 800367c:	687b      	ldr	r3, [r7, #4]
 800367e:	681b      	ldr	r3, [r3, #0]
 8003680:	2201      	movs	r2, #1
 8003682:	6839      	ldr	r1, [r7, #0]
 8003684:	4618      	mov	r0, r3
 8003686:	f000 ff8c 	bl	80045a2 <TIM_CCxChannelCmd>
 800368a:	687b      	ldr	r3, [r7, #4]
 800368c:	681b      	ldr	r3, [r3, #0]
 800368e:	4a2e      	ldr	r2, [pc, #184]	@ (8003748 <HAL_TIM_PWM_Start_IT+0x210>)
 8003690:	4293      	cmp	r3, r2
 8003692:	d004      	beq.n	800369e <HAL_TIM_PWM_Start_IT+0x166>
 8003694:	687b      	ldr	r3, [r7, #4]
 8003696:	681b      	ldr	r3, [r3, #0]
 8003698:	4a2c      	ldr	r2, [pc, #176]	@ (800374c <HAL_TIM_PWM_Start_IT+0x214>)
 800369a:	4293      	cmp	r3, r2
 800369c:	d101      	bne.n	80036a2 <HAL_TIM_PWM_Start_IT+0x16a>
 800369e:	2301      	movs	r3, #1
 80036a0:	e000      	b.n	80036a4 <HAL_TIM_PWM_Start_IT+0x16c>
 80036a2:	2300      	movs	r3, #0
 80036a4:	2b00      	cmp	r3, #0
 80036a6:	d007      	beq.n	80036b8 <HAL_TIM_PWM_Start_IT+0x180>
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	681b      	ldr	r3, [r3, #0]
 80036ac:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	681b      	ldr	r3, [r3, #0]
 80036b2:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80036b6:	645a      	str	r2, [r3, #68]	@ 0x44
 80036b8:	687b      	ldr	r3, [r7, #4]
 80036ba:	681b      	ldr	r3, [r3, #0]
 80036bc:	4a22      	ldr	r2, [pc, #136]	@ (8003748 <HAL_TIM_PWM_Start_IT+0x210>)
 80036be:	4293      	cmp	r3, r2
 80036c0:	d022      	beq.n	8003708 <HAL_TIM_PWM_Start_IT+0x1d0>
 80036c2:	687b      	ldr	r3, [r7, #4]
 80036c4:	681b      	ldr	r3, [r3, #0]
 80036c6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80036ca:	d01d      	beq.n	8003708 <HAL_TIM_PWM_Start_IT+0x1d0>
 80036cc:	687b      	ldr	r3, [r7, #4]
 80036ce:	681b      	ldr	r3, [r3, #0]
 80036d0:	4a1f      	ldr	r2, [pc, #124]	@ (8003750 <HAL_TIM_PWM_Start_IT+0x218>)
 80036d2:	4293      	cmp	r3, r2
 80036d4:	d018      	beq.n	8003708 <HAL_TIM_PWM_Start_IT+0x1d0>
 80036d6:	687b      	ldr	r3, [r7, #4]
 80036d8:	681b      	ldr	r3, [r3, #0]
 80036da:	4a1e      	ldr	r2, [pc, #120]	@ (8003754 <HAL_TIM_PWM_Start_IT+0x21c>)
 80036dc:	4293      	cmp	r3, r2
 80036de:	d013      	beq.n	8003708 <HAL_TIM_PWM_Start_IT+0x1d0>
 80036e0:	687b      	ldr	r3, [r7, #4]
 80036e2:	681b      	ldr	r3, [r3, #0]
 80036e4:	4a1c      	ldr	r2, [pc, #112]	@ (8003758 <HAL_TIM_PWM_Start_IT+0x220>)
 80036e6:	4293      	cmp	r3, r2
 80036e8:	d00e      	beq.n	8003708 <HAL_TIM_PWM_Start_IT+0x1d0>
 80036ea:	687b      	ldr	r3, [r7, #4]
 80036ec:	681b      	ldr	r3, [r3, #0]
 80036ee:	4a17      	ldr	r2, [pc, #92]	@ (800374c <HAL_TIM_PWM_Start_IT+0x214>)
 80036f0:	4293      	cmp	r3, r2
 80036f2:	d009      	beq.n	8003708 <HAL_TIM_PWM_Start_IT+0x1d0>
 80036f4:	687b      	ldr	r3, [r7, #4]
 80036f6:	681b      	ldr	r3, [r3, #0]
 80036f8:	4a18      	ldr	r2, [pc, #96]	@ (800375c <HAL_TIM_PWM_Start_IT+0x224>)
 80036fa:	4293      	cmp	r3, r2
 80036fc:	d004      	beq.n	8003708 <HAL_TIM_PWM_Start_IT+0x1d0>
 80036fe:	687b      	ldr	r3, [r7, #4]
 8003700:	681b      	ldr	r3, [r3, #0]
 8003702:	4a17      	ldr	r2, [pc, #92]	@ (8003760 <HAL_TIM_PWM_Start_IT+0x228>)
 8003704:	4293      	cmp	r3, r2
 8003706:	d111      	bne.n	800372c <HAL_TIM_PWM_Start_IT+0x1f4>
 8003708:	687b      	ldr	r3, [r7, #4]
 800370a:	681b      	ldr	r3, [r3, #0]
 800370c:	689b      	ldr	r3, [r3, #8]
 800370e:	f003 0307 	and.w	r3, r3, #7
 8003712:	60bb      	str	r3, [r7, #8]
 8003714:	68bb      	ldr	r3, [r7, #8]
 8003716:	2b06      	cmp	r3, #6
 8003718:	d010      	beq.n	800373c <HAL_TIM_PWM_Start_IT+0x204>
 800371a:	687b      	ldr	r3, [r7, #4]
 800371c:	681b      	ldr	r3, [r3, #0]
 800371e:	681a      	ldr	r2, [r3, #0]
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	681b      	ldr	r3, [r3, #0]
 8003724:	f042 0201 	orr.w	r2, r2, #1
 8003728:	601a      	str	r2, [r3, #0]
 800372a:	e007      	b.n	800373c <HAL_TIM_PWM_Start_IT+0x204>
 800372c:	687b      	ldr	r3, [r7, #4]
 800372e:	681b      	ldr	r3, [r3, #0]
 8003730:	681a      	ldr	r2, [r3, #0]
 8003732:	687b      	ldr	r3, [r7, #4]
 8003734:	681b      	ldr	r3, [r3, #0]
 8003736:	f042 0201 	orr.w	r2, r2, #1
 800373a:	601a      	str	r2, [r3, #0]
 800373c:	7bfb      	ldrb	r3, [r7, #15]
 800373e:	4618      	mov	r0, r3
 8003740:	3710      	adds	r7, #16
 8003742:	46bd      	mov	sp, r7
 8003744:	bd80      	pop	{r7, pc}
 8003746:	bf00      	nop
 8003748:	40010000 	.word	0x40010000
 800374c:	40010400 	.word	0x40010400
 8003750:	40000400 	.word	0x40000400
 8003754:	40000800 	.word	0x40000800
 8003758:	40000c00 	.word	0x40000c00
 800375c:	40014000 	.word	0x40014000
 8003760:	40001800 	.word	0x40001800

08003764 <HAL_TIM_PWM_Stop_IT>:
 8003764:	b580      	push	{r7, lr}
 8003766:	b084      	sub	sp, #16
 8003768:	af00      	add	r7, sp, #0
 800376a:	6078      	str	r0, [r7, #4]
 800376c:	6039      	str	r1, [r7, #0]
 800376e:	2300      	movs	r3, #0
 8003770:	73fb      	strb	r3, [r7, #15]
 8003772:	683b      	ldr	r3, [r7, #0]
 8003774:	2b0c      	cmp	r3, #12
 8003776:	d841      	bhi.n	80037fc <HAL_TIM_PWM_Stop_IT+0x98>
 8003778:	a201      	add	r2, pc, #4	@ (adr r2, 8003780 <HAL_TIM_PWM_Stop_IT+0x1c>)
 800377a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800377e:	bf00      	nop
 8003780:	080037b5 	.word	0x080037b5
 8003784:	080037fd 	.word	0x080037fd
 8003788:	080037fd 	.word	0x080037fd
 800378c:	080037fd 	.word	0x080037fd
 8003790:	080037c7 	.word	0x080037c7
 8003794:	080037fd 	.word	0x080037fd
 8003798:	080037fd 	.word	0x080037fd
 800379c:	080037fd 	.word	0x080037fd
 80037a0:	080037d9 	.word	0x080037d9
 80037a4:	080037fd 	.word	0x080037fd
 80037a8:	080037fd 	.word	0x080037fd
 80037ac:	080037fd 	.word	0x080037fd
 80037b0:	080037eb 	.word	0x080037eb
 80037b4:	687b      	ldr	r3, [r7, #4]
 80037b6:	681b      	ldr	r3, [r3, #0]
 80037b8:	68da      	ldr	r2, [r3, #12]
 80037ba:	687b      	ldr	r3, [r7, #4]
 80037bc:	681b      	ldr	r3, [r3, #0]
 80037be:	f022 0202 	bic.w	r2, r2, #2
 80037c2:	60da      	str	r2, [r3, #12]
 80037c4:	e01d      	b.n	8003802 <HAL_TIM_PWM_Stop_IT+0x9e>
 80037c6:	687b      	ldr	r3, [r7, #4]
 80037c8:	681b      	ldr	r3, [r3, #0]
 80037ca:	68da      	ldr	r2, [r3, #12]
 80037cc:	687b      	ldr	r3, [r7, #4]
 80037ce:	681b      	ldr	r3, [r3, #0]
 80037d0:	f022 0204 	bic.w	r2, r2, #4
 80037d4:	60da      	str	r2, [r3, #12]
 80037d6:	e014      	b.n	8003802 <HAL_TIM_PWM_Stop_IT+0x9e>
 80037d8:	687b      	ldr	r3, [r7, #4]
 80037da:	681b      	ldr	r3, [r3, #0]
 80037dc:	68da      	ldr	r2, [r3, #12]
 80037de:	687b      	ldr	r3, [r7, #4]
 80037e0:	681b      	ldr	r3, [r3, #0]
 80037e2:	f022 0208 	bic.w	r2, r2, #8
 80037e6:	60da      	str	r2, [r3, #12]
 80037e8:	e00b      	b.n	8003802 <HAL_TIM_PWM_Stop_IT+0x9e>
 80037ea:	687b      	ldr	r3, [r7, #4]
 80037ec:	681b      	ldr	r3, [r3, #0]
 80037ee:	68da      	ldr	r2, [r3, #12]
 80037f0:	687b      	ldr	r3, [r7, #4]
 80037f2:	681b      	ldr	r3, [r3, #0]
 80037f4:	f022 0210 	bic.w	r2, r2, #16
 80037f8:	60da      	str	r2, [r3, #12]
 80037fa:	e002      	b.n	8003802 <HAL_TIM_PWM_Stop_IT+0x9e>
 80037fc:	2301      	movs	r3, #1
 80037fe:	73fb      	strb	r3, [r7, #15]
 8003800:	bf00      	nop
 8003802:	7bfb      	ldrb	r3, [r7, #15]
 8003804:	2b00      	cmp	r3, #0
 8003806:	d161      	bne.n	80038cc <HAL_TIM_PWM_Stop_IT+0x168>
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	681b      	ldr	r3, [r3, #0]
 800380c:	2200      	movs	r2, #0
 800380e:	6839      	ldr	r1, [r7, #0]
 8003810:	4618      	mov	r0, r3
 8003812:	f000 fec6 	bl	80045a2 <TIM_CCxChannelCmd>
 8003816:	687b      	ldr	r3, [r7, #4]
 8003818:	681b      	ldr	r3, [r3, #0]
 800381a:	4a2f      	ldr	r2, [pc, #188]	@ (80038d8 <HAL_TIM_PWM_Stop_IT+0x174>)
 800381c:	4293      	cmp	r3, r2
 800381e:	d004      	beq.n	800382a <HAL_TIM_PWM_Stop_IT+0xc6>
 8003820:	687b      	ldr	r3, [r7, #4]
 8003822:	681b      	ldr	r3, [r3, #0]
 8003824:	4a2d      	ldr	r2, [pc, #180]	@ (80038dc <HAL_TIM_PWM_Stop_IT+0x178>)
 8003826:	4293      	cmp	r3, r2
 8003828:	d101      	bne.n	800382e <HAL_TIM_PWM_Stop_IT+0xca>
 800382a:	2301      	movs	r3, #1
 800382c:	e000      	b.n	8003830 <HAL_TIM_PWM_Stop_IT+0xcc>
 800382e:	2300      	movs	r3, #0
 8003830:	2b00      	cmp	r3, #0
 8003832:	d017      	beq.n	8003864 <HAL_TIM_PWM_Stop_IT+0x100>
 8003834:	687b      	ldr	r3, [r7, #4]
 8003836:	681b      	ldr	r3, [r3, #0]
 8003838:	6a1a      	ldr	r2, [r3, #32]
 800383a:	f241 1311 	movw	r3, #4369	@ 0x1111
 800383e:	4013      	ands	r3, r2
 8003840:	2b00      	cmp	r3, #0
 8003842:	d10f      	bne.n	8003864 <HAL_TIM_PWM_Stop_IT+0x100>
 8003844:	687b      	ldr	r3, [r7, #4]
 8003846:	681b      	ldr	r3, [r3, #0]
 8003848:	6a1a      	ldr	r2, [r3, #32]
 800384a:	f240 4344 	movw	r3, #1092	@ 0x444
 800384e:	4013      	ands	r3, r2
 8003850:	2b00      	cmp	r3, #0
 8003852:	d107      	bne.n	8003864 <HAL_TIM_PWM_Stop_IT+0x100>
 8003854:	687b      	ldr	r3, [r7, #4]
 8003856:	681b      	ldr	r3, [r3, #0]
 8003858:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800385a:	687b      	ldr	r3, [r7, #4]
 800385c:	681b      	ldr	r3, [r3, #0]
 800385e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8003862:	645a      	str	r2, [r3, #68]	@ 0x44
 8003864:	687b      	ldr	r3, [r7, #4]
 8003866:	681b      	ldr	r3, [r3, #0]
 8003868:	6a1a      	ldr	r2, [r3, #32]
 800386a:	f241 1311 	movw	r3, #4369	@ 0x1111
 800386e:	4013      	ands	r3, r2
 8003870:	2b00      	cmp	r3, #0
 8003872:	d10f      	bne.n	8003894 <HAL_TIM_PWM_Stop_IT+0x130>
 8003874:	687b      	ldr	r3, [r7, #4]
 8003876:	681b      	ldr	r3, [r3, #0]
 8003878:	6a1a      	ldr	r2, [r3, #32]
 800387a:	f240 4344 	movw	r3, #1092	@ 0x444
 800387e:	4013      	ands	r3, r2
 8003880:	2b00      	cmp	r3, #0
 8003882:	d107      	bne.n	8003894 <HAL_TIM_PWM_Stop_IT+0x130>
 8003884:	687b      	ldr	r3, [r7, #4]
 8003886:	681b      	ldr	r3, [r3, #0]
 8003888:	681a      	ldr	r2, [r3, #0]
 800388a:	687b      	ldr	r3, [r7, #4]
 800388c:	681b      	ldr	r3, [r3, #0]
 800388e:	f022 0201 	bic.w	r2, r2, #1
 8003892:	601a      	str	r2, [r3, #0]
 8003894:	683b      	ldr	r3, [r7, #0]
 8003896:	2b00      	cmp	r3, #0
 8003898:	d104      	bne.n	80038a4 <HAL_TIM_PWM_Stop_IT+0x140>
 800389a:	687b      	ldr	r3, [r7, #4]
 800389c:	2201      	movs	r2, #1
 800389e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80038a2:	e013      	b.n	80038cc <HAL_TIM_PWM_Stop_IT+0x168>
 80038a4:	683b      	ldr	r3, [r7, #0]
 80038a6:	2b04      	cmp	r3, #4
 80038a8:	d104      	bne.n	80038b4 <HAL_TIM_PWM_Stop_IT+0x150>
 80038aa:	687b      	ldr	r3, [r7, #4]
 80038ac:	2201      	movs	r2, #1
 80038ae:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80038b2:	e00b      	b.n	80038cc <HAL_TIM_PWM_Stop_IT+0x168>
 80038b4:	683b      	ldr	r3, [r7, #0]
 80038b6:	2b08      	cmp	r3, #8
 80038b8:	d104      	bne.n	80038c4 <HAL_TIM_PWM_Stop_IT+0x160>
 80038ba:	687b      	ldr	r3, [r7, #4]
 80038bc:	2201      	movs	r2, #1
 80038be:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80038c2:	e003      	b.n	80038cc <HAL_TIM_PWM_Stop_IT+0x168>
 80038c4:	687b      	ldr	r3, [r7, #4]
 80038c6:	2201      	movs	r2, #1
 80038c8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80038cc:	7bfb      	ldrb	r3, [r7, #15]
 80038ce:	4618      	mov	r0, r3
 80038d0:	3710      	adds	r7, #16
 80038d2:	46bd      	mov	sp, r7
 80038d4:	bd80      	pop	{r7, pc}
 80038d6:	bf00      	nop
 80038d8:	40010000 	.word	0x40010000
 80038dc:	40010400 	.word	0x40010400

080038e0 <HAL_TIM_IRQHandler>:
 80038e0:	b580      	push	{r7, lr}
 80038e2:	b084      	sub	sp, #16
 80038e4:	af00      	add	r7, sp, #0
 80038e6:	6078      	str	r0, [r7, #4]
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	681b      	ldr	r3, [r3, #0]
 80038ec:	68db      	ldr	r3, [r3, #12]
 80038ee:	60fb      	str	r3, [r7, #12]
 80038f0:	687b      	ldr	r3, [r7, #4]
 80038f2:	681b      	ldr	r3, [r3, #0]
 80038f4:	691b      	ldr	r3, [r3, #16]
 80038f6:	60bb      	str	r3, [r7, #8]
 80038f8:	68bb      	ldr	r3, [r7, #8]
 80038fa:	f003 0302 	and.w	r3, r3, #2
 80038fe:	2b00      	cmp	r3, #0
 8003900:	d020      	beq.n	8003944 <HAL_TIM_IRQHandler+0x64>
 8003902:	68fb      	ldr	r3, [r7, #12]
 8003904:	f003 0302 	and.w	r3, r3, #2
 8003908:	2b00      	cmp	r3, #0
 800390a:	d01b      	beq.n	8003944 <HAL_TIM_IRQHandler+0x64>
 800390c:	687b      	ldr	r3, [r7, #4]
 800390e:	681b      	ldr	r3, [r3, #0]
 8003910:	f06f 0202 	mvn.w	r2, #2
 8003914:	611a      	str	r2, [r3, #16]
 8003916:	687b      	ldr	r3, [r7, #4]
 8003918:	2201      	movs	r2, #1
 800391a:	771a      	strb	r2, [r3, #28]
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	681b      	ldr	r3, [r3, #0]
 8003920:	699b      	ldr	r3, [r3, #24]
 8003922:	f003 0303 	and.w	r3, r3, #3
 8003926:	2b00      	cmp	r3, #0
 8003928:	d003      	beq.n	8003932 <HAL_TIM_IRQHandler+0x52>
 800392a:	6878      	ldr	r0, [r7, #4]
 800392c:	f000 fa9d 	bl	8003e6a <HAL_TIM_IC_CaptureCallback>
 8003930:	e005      	b.n	800393e <HAL_TIM_IRQHandler+0x5e>
 8003932:	6878      	ldr	r0, [r7, #4]
 8003934:	f000 fa8f 	bl	8003e56 <HAL_TIM_OC_DelayElapsedCallback>
 8003938:	6878      	ldr	r0, [r7, #4]
 800393a:	f7fd f895 	bl	8000a68 <HAL_TIM_PWM_PulseFinishedCallback>
 800393e:	687b      	ldr	r3, [r7, #4]
 8003940:	2200      	movs	r2, #0
 8003942:	771a      	strb	r2, [r3, #28]
 8003944:	68bb      	ldr	r3, [r7, #8]
 8003946:	f003 0304 	and.w	r3, r3, #4
 800394a:	2b00      	cmp	r3, #0
 800394c:	d020      	beq.n	8003990 <HAL_TIM_IRQHandler+0xb0>
 800394e:	68fb      	ldr	r3, [r7, #12]
 8003950:	f003 0304 	and.w	r3, r3, #4
 8003954:	2b00      	cmp	r3, #0
 8003956:	d01b      	beq.n	8003990 <HAL_TIM_IRQHandler+0xb0>
 8003958:	687b      	ldr	r3, [r7, #4]
 800395a:	681b      	ldr	r3, [r3, #0]
 800395c:	f06f 0204 	mvn.w	r2, #4
 8003960:	611a      	str	r2, [r3, #16]
 8003962:	687b      	ldr	r3, [r7, #4]
 8003964:	2202      	movs	r2, #2
 8003966:	771a      	strb	r2, [r3, #28]
 8003968:	687b      	ldr	r3, [r7, #4]
 800396a:	681b      	ldr	r3, [r3, #0]
 800396c:	699b      	ldr	r3, [r3, #24]
 800396e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003972:	2b00      	cmp	r3, #0
 8003974:	d003      	beq.n	800397e <HAL_TIM_IRQHandler+0x9e>
 8003976:	6878      	ldr	r0, [r7, #4]
 8003978:	f000 fa77 	bl	8003e6a <HAL_TIM_IC_CaptureCallback>
 800397c:	e005      	b.n	800398a <HAL_TIM_IRQHandler+0xaa>
 800397e:	6878      	ldr	r0, [r7, #4]
 8003980:	f000 fa69 	bl	8003e56 <HAL_TIM_OC_DelayElapsedCallback>
 8003984:	6878      	ldr	r0, [r7, #4]
 8003986:	f7fd f86f 	bl	8000a68 <HAL_TIM_PWM_PulseFinishedCallback>
 800398a:	687b      	ldr	r3, [r7, #4]
 800398c:	2200      	movs	r2, #0
 800398e:	771a      	strb	r2, [r3, #28]
 8003990:	68bb      	ldr	r3, [r7, #8]
 8003992:	f003 0308 	and.w	r3, r3, #8
 8003996:	2b00      	cmp	r3, #0
 8003998:	d020      	beq.n	80039dc <HAL_TIM_IRQHandler+0xfc>
 800399a:	68fb      	ldr	r3, [r7, #12]
 800399c:	f003 0308 	and.w	r3, r3, #8
 80039a0:	2b00      	cmp	r3, #0
 80039a2:	d01b      	beq.n	80039dc <HAL_TIM_IRQHandler+0xfc>
 80039a4:	687b      	ldr	r3, [r7, #4]
 80039a6:	681b      	ldr	r3, [r3, #0]
 80039a8:	f06f 0208 	mvn.w	r2, #8
 80039ac:	611a      	str	r2, [r3, #16]
 80039ae:	687b      	ldr	r3, [r7, #4]
 80039b0:	2204      	movs	r2, #4
 80039b2:	771a      	strb	r2, [r3, #28]
 80039b4:	687b      	ldr	r3, [r7, #4]
 80039b6:	681b      	ldr	r3, [r3, #0]
 80039b8:	69db      	ldr	r3, [r3, #28]
 80039ba:	f003 0303 	and.w	r3, r3, #3
 80039be:	2b00      	cmp	r3, #0
 80039c0:	d003      	beq.n	80039ca <HAL_TIM_IRQHandler+0xea>
 80039c2:	6878      	ldr	r0, [r7, #4]
 80039c4:	f000 fa51 	bl	8003e6a <HAL_TIM_IC_CaptureCallback>
 80039c8:	e005      	b.n	80039d6 <HAL_TIM_IRQHandler+0xf6>
 80039ca:	6878      	ldr	r0, [r7, #4]
 80039cc:	f000 fa43 	bl	8003e56 <HAL_TIM_OC_DelayElapsedCallback>
 80039d0:	6878      	ldr	r0, [r7, #4]
 80039d2:	f7fd f849 	bl	8000a68 <HAL_TIM_PWM_PulseFinishedCallback>
 80039d6:	687b      	ldr	r3, [r7, #4]
 80039d8:	2200      	movs	r2, #0
 80039da:	771a      	strb	r2, [r3, #28]
 80039dc:	68bb      	ldr	r3, [r7, #8]
 80039de:	f003 0310 	and.w	r3, r3, #16
 80039e2:	2b00      	cmp	r3, #0
 80039e4:	d020      	beq.n	8003a28 <HAL_TIM_IRQHandler+0x148>
 80039e6:	68fb      	ldr	r3, [r7, #12]
 80039e8:	f003 0310 	and.w	r3, r3, #16
 80039ec:	2b00      	cmp	r3, #0
 80039ee:	d01b      	beq.n	8003a28 <HAL_TIM_IRQHandler+0x148>
 80039f0:	687b      	ldr	r3, [r7, #4]
 80039f2:	681b      	ldr	r3, [r3, #0]
 80039f4:	f06f 0210 	mvn.w	r2, #16
 80039f8:	611a      	str	r2, [r3, #16]
 80039fa:	687b      	ldr	r3, [r7, #4]
 80039fc:	2208      	movs	r2, #8
 80039fe:	771a      	strb	r2, [r3, #28]
 8003a00:	687b      	ldr	r3, [r7, #4]
 8003a02:	681b      	ldr	r3, [r3, #0]
 8003a04:	69db      	ldr	r3, [r3, #28]
 8003a06:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003a0a:	2b00      	cmp	r3, #0
 8003a0c:	d003      	beq.n	8003a16 <HAL_TIM_IRQHandler+0x136>
 8003a0e:	6878      	ldr	r0, [r7, #4]
 8003a10:	f000 fa2b 	bl	8003e6a <HAL_TIM_IC_CaptureCallback>
 8003a14:	e005      	b.n	8003a22 <HAL_TIM_IRQHandler+0x142>
 8003a16:	6878      	ldr	r0, [r7, #4]
 8003a18:	f000 fa1d 	bl	8003e56 <HAL_TIM_OC_DelayElapsedCallback>
 8003a1c:	6878      	ldr	r0, [r7, #4]
 8003a1e:	f7fd f823 	bl	8000a68 <HAL_TIM_PWM_PulseFinishedCallback>
 8003a22:	687b      	ldr	r3, [r7, #4]
 8003a24:	2200      	movs	r2, #0
 8003a26:	771a      	strb	r2, [r3, #28]
 8003a28:	68bb      	ldr	r3, [r7, #8]
 8003a2a:	f003 0301 	and.w	r3, r3, #1
 8003a2e:	2b00      	cmp	r3, #0
 8003a30:	d00c      	beq.n	8003a4c <HAL_TIM_IRQHandler+0x16c>
 8003a32:	68fb      	ldr	r3, [r7, #12]
 8003a34:	f003 0301 	and.w	r3, r3, #1
 8003a38:	2b00      	cmp	r3, #0
 8003a3a:	d007      	beq.n	8003a4c <HAL_TIM_IRQHandler+0x16c>
 8003a3c:	687b      	ldr	r3, [r7, #4]
 8003a3e:	681b      	ldr	r3, [r3, #0]
 8003a40:	f06f 0201 	mvn.w	r2, #1
 8003a44:	611a      	str	r2, [r3, #16]
 8003a46:	6878      	ldr	r0, [r7, #4]
 8003a48:	f7fd f804 	bl	8000a54 <HAL_TIM_PeriodElapsedCallback>
 8003a4c:	68bb      	ldr	r3, [r7, #8]
 8003a4e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003a52:	2b00      	cmp	r3, #0
 8003a54:	d00c      	beq.n	8003a70 <HAL_TIM_IRQHandler+0x190>
 8003a56:	68fb      	ldr	r3, [r7, #12]
 8003a58:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003a5c:	2b00      	cmp	r3, #0
 8003a5e:	d007      	beq.n	8003a70 <HAL_TIM_IRQHandler+0x190>
 8003a60:	687b      	ldr	r3, [r7, #4]
 8003a62:	681b      	ldr	r3, [r3, #0]
 8003a64:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8003a68:	611a      	str	r2, [r3, #16]
 8003a6a:	6878      	ldr	r0, [r7, #4]
 8003a6c:	f000 fe96 	bl	800479c <HAL_TIMEx_BreakCallback>
 8003a70:	68bb      	ldr	r3, [r7, #8]
 8003a72:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003a76:	2b00      	cmp	r3, #0
 8003a78:	d00c      	beq.n	8003a94 <HAL_TIM_IRQHandler+0x1b4>
 8003a7a:	68fb      	ldr	r3, [r7, #12]
 8003a7c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003a80:	2b00      	cmp	r3, #0
 8003a82:	d007      	beq.n	8003a94 <HAL_TIM_IRQHandler+0x1b4>
 8003a84:	687b      	ldr	r3, [r7, #4]
 8003a86:	681b      	ldr	r3, [r3, #0]
 8003a88:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8003a8c:	611a      	str	r2, [r3, #16]
 8003a8e:	6878      	ldr	r0, [r7, #4]
 8003a90:	f000 f9f5 	bl	8003e7e <HAL_TIM_TriggerCallback>
 8003a94:	68bb      	ldr	r3, [r7, #8]
 8003a96:	f003 0320 	and.w	r3, r3, #32
 8003a9a:	2b00      	cmp	r3, #0
 8003a9c:	d00c      	beq.n	8003ab8 <HAL_TIM_IRQHandler+0x1d8>
 8003a9e:	68fb      	ldr	r3, [r7, #12]
 8003aa0:	f003 0320 	and.w	r3, r3, #32
 8003aa4:	2b00      	cmp	r3, #0
 8003aa6:	d007      	beq.n	8003ab8 <HAL_TIM_IRQHandler+0x1d8>
 8003aa8:	687b      	ldr	r3, [r7, #4]
 8003aaa:	681b      	ldr	r3, [r3, #0]
 8003aac:	f06f 0220 	mvn.w	r2, #32
 8003ab0:	611a      	str	r2, [r3, #16]
 8003ab2:	6878      	ldr	r0, [r7, #4]
 8003ab4:	f000 fe68 	bl	8004788 <HAL_TIMEx_CommutCallback>
 8003ab8:	bf00      	nop
 8003aba:	3710      	adds	r7, #16
 8003abc:	46bd      	mov	sp, r7
 8003abe:	bd80      	pop	{r7, pc}

08003ac0 <HAL_TIM_PWM_ConfigChannel>:
 8003ac0:	b580      	push	{r7, lr}
 8003ac2:	b086      	sub	sp, #24
 8003ac4:	af00      	add	r7, sp, #0
 8003ac6:	60f8      	str	r0, [r7, #12]
 8003ac8:	60b9      	str	r1, [r7, #8]
 8003aca:	607a      	str	r2, [r7, #4]
 8003acc:	2300      	movs	r3, #0
 8003ace:	75fb      	strb	r3, [r7, #23]
 8003ad0:	68fb      	ldr	r3, [r7, #12]
 8003ad2:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003ad6:	2b01      	cmp	r3, #1
 8003ad8:	d101      	bne.n	8003ade <HAL_TIM_PWM_ConfigChannel+0x1e>
 8003ada:	2302      	movs	r3, #2
 8003adc:	e0ae      	b.n	8003c3c <HAL_TIM_PWM_ConfigChannel+0x17c>
 8003ade:	68fb      	ldr	r3, [r7, #12]
 8003ae0:	2201      	movs	r2, #1
 8003ae2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003ae6:	687b      	ldr	r3, [r7, #4]
 8003ae8:	2b0c      	cmp	r3, #12
 8003aea:	f200 809f 	bhi.w	8003c2c <HAL_TIM_PWM_ConfigChannel+0x16c>
 8003aee:	a201      	add	r2, pc, #4	@ (adr r2, 8003af4 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8003af0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003af4:	08003b29 	.word	0x08003b29
 8003af8:	08003c2d 	.word	0x08003c2d
 8003afc:	08003c2d 	.word	0x08003c2d
 8003b00:	08003c2d 	.word	0x08003c2d
 8003b04:	08003b69 	.word	0x08003b69
 8003b08:	08003c2d 	.word	0x08003c2d
 8003b0c:	08003c2d 	.word	0x08003c2d
 8003b10:	08003c2d 	.word	0x08003c2d
 8003b14:	08003bab 	.word	0x08003bab
 8003b18:	08003c2d 	.word	0x08003c2d
 8003b1c:	08003c2d 	.word	0x08003c2d
 8003b20:	08003c2d 	.word	0x08003c2d
 8003b24:	08003beb 	.word	0x08003beb
 8003b28:	68fb      	ldr	r3, [r7, #12]
 8003b2a:	681b      	ldr	r3, [r3, #0]
 8003b2c:	68b9      	ldr	r1, [r7, #8]
 8003b2e:	4618      	mov	r0, r3
 8003b30:	f000 fa5c 	bl	8003fec <TIM_OC1_SetConfig>
 8003b34:	68fb      	ldr	r3, [r7, #12]
 8003b36:	681b      	ldr	r3, [r3, #0]
 8003b38:	699a      	ldr	r2, [r3, #24]
 8003b3a:	68fb      	ldr	r3, [r7, #12]
 8003b3c:	681b      	ldr	r3, [r3, #0]
 8003b3e:	f042 0208 	orr.w	r2, r2, #8
 8003b42:	619a      	str	r2, [r3, #24]
 8003b44:	68fb      	ldr	r3, [r7, #12]
 8003b46:	681b      	ldr	r3, [r3, #0]
 8003b48:	699a      	ldr	r2, [r3, #24]
 8003b4a:	68fb      	ldr	r3, [r7, #12]
 8003b4c:	681b      	ldr	r3, [r3, #0]
 8003b4e:	f022 0204 	bic.w	r2, r2, #4
 8003b52:	619a      	str	r2, [r3, #24]
 8003b54:	68fb      	ldr	r3, [r7, #12]
 8003b56:	681b      	ldr	r3, [r3, #0]
 8003b58:	6999      	ldr	r1, [r3, #24]
 8003b5a:	68bb      	ldr	r3, [r7, #8]
 8003b5c:	691a      	ldr	r2, [r3, #16]
 8003b5e:	68fb      	ldr	r3, [r7, #12]
 8003b60:	681b      	ldr	r3, [r3, #0]
 8003b62:	430a      	orrs	r2, r1
 8003b64:	619a      	str	r2, [r3, #24]
 8003b66:	e064      	b.n	8003c32 <HAL_TIM_PWM_ConfigChannel+0x172>
 8003b68:	68fb      	ldr	r3, [r7, #12]
 8003b6a:	681b      	ldr	r3, [r3, #0]
 8003b6c:	68b9      	ldr	r1, [r7, #8]
 8003b6e:	4618      	mov	r0, r3
 8003b70:	f000 faac 	bl	80040cc <TIM_OC2_SetConfig>
 8003b74:	68fb      	ldr	r3, [r7, #12]
 8003b76:	681b      	ldr	r3, [r3, #0]
 8003b78:	699a      	ldr	r2, [r3, #24]
 8003b7a:	68fb      	ldr	r3, [r7, #12]
 8003b7c:	681b      	ldr	r3, [r3, #0]
 8003b7e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8003b82:	619a      	str	r2, [r3, #24]
 8003b84:	68fb      	ldr	r3, [r7, #12]
 8003b86:	681b      	ldr	r3, [r3, #0]
 8003b88:	699a      	ldr	r2, [r3, #24]
 8003b8a:	68fb      	ldr	r3, [r7, #12]
 8003b8c:	681b      	ldr	r3, [r3, #0]
 8003b8e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003b92:	619a      	str	r2, [r3, #24]
 8003b94:	68fb      	ldr	r3, [r7, #12]
 8003b96:	681b      	ldr	r3, [r3, #0]
 8003b98:	6999      	ldr	r1, [r3, #24]
 8003b9a:	68bb      	ldr	r3, [r7, #8]
 8003b9c:	691b      	ldr	r3, [r3, #16]
 8003b9e:	021a      	lsls	r2, r3, #8
 8003ba0:	68fb      	ldr	r3, [r7, #12]
 8003ba2:	681b      	ldr	r3, [r3, #0]
 8003ba4:	430a      	orrs	r2, r1
 8003ba6:	619a      	str	r2, [r3, #24]
 8003ba8:	e043      	b.n	8003c32 <HAL_TIM_PWM_ConfigChannel+0x172>
 8003baa:	68fb      	ldr	r3, [r7, #12]
 8003bac:	681b      	ldr	r3, [r3, #0]
 8003bae:	68b9      	ldr	r1, [r7, #8]
 8003bb0:	4618      	mov	r0, r3
 8003bb2:	f000 fb01 	bl	80041b8 <TIM_OC3_SetConfig>
 8003bb6:	68fb      	ldr	r3, [r7, #12]
 8003bb8:	681b      	ldr	r3, [r3, #0]
 8003bba:	69da      	ldr	r2, [r3, #28]
 8003bbc:	68fb      	ldr	r3, [r7, #12]
 8003bbe:	681b      	ldr	r3, [r3, #0]
 8003bc0:	f042 0208 	orr.w	r2, r2, #8
 8003bc4:	61da      	str	r2, [r3, #28]
 8003bc6:	68fb      	ldr	r3, [r7, #12]
 8003bc8:	681b      	ldr	r3, [r3, #0]
 8003bca:	69da      	ldr	r2, [r3, #28]
 8003bcc:	68fb      	ldr	r3, [r7, #12]
 8003bce:	681b      	ldr	r3, [r3, #0]
 8003bd0:	f022 0204 	bic.w	r2, r2, #4
 8003bd4:	61da      	str	r2, [r3, #28]
 8003bd6:	68fb      	ldr	r3, [r7, #12]
 8003bd8:	681b      	ldr	r3, [r3, #0]
 8003bda:	69d9      	ldr	r1, [r3, #28]
 8003bdc:	68bb      	ldr	r3, [r7, #8]
 8003bde:	691a      	ldr	r2, [r3, #16]
 8003be0:	68fb      	ldr	r3, [r7, #12]
 8003be2:	681b      	ldr	r3, [r3, #0]
 8003be4:	430a      	orrs	r2, r1
 8003be6:	61da      	str	r2, [r3, #28]
 8003be8:	e023      	b.n	8003c32 <HAL_TIM_PWM_ConfigChannel+0x172>
 8003bea:	68fb      	ldr	r3, [r7, #12]
 8003bec:	681b      	ldr	r3, [r3, #0]
 8003bee:	68b9      	ldr	r1, [r7, #8]
 8003bf0:	4618      	mov	r0, r3
 8003bf2:	f000 fb55 	bl	80042a0 <TIM_OC4_SetConfig>
 8003bf6:	68fb      	ldr	r3, [r7, #12]
 8003bf8:	681b      	ldr	r3, [r3, #0]
 8003bfa:	69da      	ldr	r2, [r3, #28]
 8003bfc:	68fb      	ldr	r3, [r7, #12]
 8003bfe:	681b      	ldr	r3, [r3, #0]
 8003c00:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8003c04:	61da      	str	r2, [r3, #28]
 8003c06:	68fb      	ldr	r3, [r7, #12]
 8003c08:	681b      	ldr	r3, [r3, #0]
 8003c0a:	69da      	ldr	r2, [r3, #28]
 8003c0c:	68fb      	ldr	r3, [r7, #12]
 8003c0e:	681b      	ldr	r3, [r3, #0]
 8003c10:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003c14:	61da      	str	r2, [r3, #28]
 8003c16:	68fb      	ldr	r3, [r7, #12]
 8003c18:	681b      	ldr	r3, [r3, #0]
 8003c1a:	69d9      	ldr	r1, [r3, #28]
 8003c1c:	68bb      	ldr	r3, [r7, #8]
 8003c1e:	691b      	ldr	r3, [r3, #16]
 8003c20:	021a      	lsls	r2, r3, #8
 8003c22:	68fb      	ldr	r3, [r7, #12]
 8003c24:	681b      	ldr	r3, [r3, #0]
 8003c26:	430a      	orrs	r2, r1
 8003c28:	61da      	str	r2, [r3, #28]
 8003c2a:	e002      	b.n	8003c32 <HAL_TIM_PWM_ConfigChannel+0x172>
 8003c2c:	2301      	movs	r3, #1
 8003c2e:	75fb      	strb	r3, [r7, #23]
 8003c30:	bf00      	nop
 8003c32:	68fb      	ldr	r3, [r7, #12]
 8003c34:	2200      	movs	r2, #0
 8003c36:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003c3a:	7dfb      	ldrb	r3, [r7, #23]
 8003c3c:	4618      	mov	r0, r3
 8003c3e:	3718      	adds	r7, #24
 8003c40:	46bd      	mov	sp, r7
 8003c42:	bd80      	pop	{r7, pc}

08003c44 <HAL_TIM_ConfigClockSource>:
 8003c44:	b580      	push	{r7, lr}
 8003c46:	b084      	sub	sp, #16
 8003c48:	af00      	add	r7, sp, #0
 8003c4a:	6078      	str	r0, [r7, #4]
 8003c4c:	6039      	str	r1, [r7, #0]
 8003c4e:	2300      	movs	r3, #0
 8003c50:	73fb      	strb	r3, [r7, #15]
 8003c52:	687b      	ldr	r3, [r7, #4]
 8003c54:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003c58:	2b01      	cmp	r3, #1
 8003c5a:	d101      	bne.n	8003c60 <HAL_TIM_ConfigClockSource+0x1c>
 8003c5c:	2302      	movs	r3, #2
 8003c5e:	e0b4      	b.n	8003dca <HAL_TIM_ConfigClockSource+0x186>
 8003c60:	687b      	ldr	r3, [r7, #4]
 8003c62:	2201      	movs	r2, #1
 8003c64:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003c68:	687b      	ldr	r3, [r7, #4]
 8003c6a:	2202      	movs	r2, #2
 8003c6c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003c70:	687b      	ldr	r3, [r7, #4]
 8003c72:	681b      	ldr	r3, [r3, #0]
 8003c74:	689b      	ldr	r3, [r3, #8]
 8003c76:	60bb      	str	r3, [r7, #8]
 8003c78:	68bb      	ldr	r3, [r7, #8]
 8003c7a:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8003c7e:	60bb      	str	r3, [r7, #8]
 8003c80:	68bb      	ldr	r3, [r7, #8]
 8003c82:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8003c86:	60bb      	str	r3, [r7, #8]
 8003c88:	687b      	ldr	r3, [r7, #4]
 8003c8a:	681b      	ldr	r3, [r3, #0]
 8003c8c:	68ba      	ldr	r2, [r7, #8]
 8003c8e:	609a      	str	r2, [r3, #8]
 8003c90:	683b      	ldr	r3, [r7, #0]
 8003c92:	681b      	ldr	r3, [r3, #0]
 8003c94:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003c98:	d03e      	beq.n	8003d18 <HAL_TIM_ConfigClockSource+0xd4>
 8003c9a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003c9e:	f200 8087 	bhi.w	8003db0 <HAL_TIM_ConfigClockSource+0x16c>
 8003ca2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003ca6:	f000 8086 	beq.w	8003db6 <HAL_TIM_ConfigClockSource+0x172>
 8003caa:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003cae:	d87f      	bhi.n	8003db0 <HAL_TIM_ConfigClockSource+0x16c>
 8003cb0:	2b70      	cmp	r3, #112	@ 0x70
 8003cb2:	d01a      	beq.n	8003cea <HAL_TIM_ConfigClockSource+0xa6>
 8003cb4:	2b70      	cmp	r3, #112	@ 0x70
 8003cb6:	d87b      	bhi.n	8003db0 <HAL_TIM_ConfigClockSource+0x16c>
 8003cb8:	2b60      	cmp	r3, #96	@ 0x60
 8003cba:	d050      	beq.n	8003d5e <HAL_TIM_ConfigClockSource+0x11a>
 8003cbc:	2b60      	cmp	r3, #96	@ 0x60
 8003cbe:	d877      	bhi.n	8003db0 <HAL_TIM_ConfigClockSource+0x16c>
 8003cc0:	2b50      	cmp	r3, #80	@ 0x50
 8003cc2:	d03c      	beq.n	8003d3e <HAL_TIM_ConfigClockSource+0xfa>
 8003cc4:	2b50      	cmp	r3, #80	@ 0x50
 8003cc6:	d873      	bhi.n	8003db0 <HAL_TIM_ConfigClockSource+0x16c>
 8003cc8:	2b40      	cmp	r3, #64	@ 0x40
 8003cca:	d058      	beq.n	8003d7e <HAL_TIM_ConfigClockSource+0x13a>
 8003ccc:	2b40      	cmp	r3, #64	@ 0x40
 8003cce:	d86f      	bhi.n	8003db0 <HAL_TIM_ConfigClockSource+0x16c>
 8003cd0:	2b30      	cmp	r3, #48	@ 0x30
 8003cd2:	d064      	beq.n	8003d9e <HAL_TIM_ConfigClockSource+0x15a>
 8003cd4:	2b30      	cmp	r3, #48	@ 0x30
 8003cd6:	d86b      	bhi.n	8003db0 <HAL_TIM_ConfigClockSource+0x16c>
 8003cd8:	2b20      	cmp	r3, #32
 8003cda:	d060      	beq.n	8003d9e <HAL_TIM_ConfigClockSource+0x15a>
 8003cdc:	2b20      	cmp	r3, #32
 8003cde:	d867      	bhi.n	8003db0 <HAL_TIM_ConfigClockSource+0x16c>
 8003ce0:	2b00      	cmp	r3, #0
 8003ce2:	d05c      	beq.n	8003d9e <HAL_TIM_ConfigClockSource+0x15a>
 8003ce4:	2b10      	cmp	r3, #16
 8003ce6:	d05a      	beq.n	8003d9e <HAL_TIM_ConfigClockSource+0x15a>
 8003ce8:	e062      	b.n	8003db0 <HAL_TIM_ConfigClockSource+0x16c>
 8003cea:	687b      	ldr	r3, [r7, #4]
 8003cec:	6818      	ldr	r0, [r3, #0]
 8003cee:	683b      	ldr	r3, [r7, #0]
 8003cf0:	6899      	ldr	r1, [r3, #8]
 8003cf2:	683b      	ldr	r3, [r7, #0]
 8003cf4:	685a      	ldr	r2, [r3, #4]
 8003cf6:	683b      	ldr	r3, [r7, #0]
 8003cf8:	68db      	ldr	r3, [r3, #12]
 8003cfa:	f000 fc32 	bl	8004562 <TIM_ETR_SetConfig>
 8003cfe:	687b      	ldr	r3, [r7, #4]
 8003d00:	681b      	ldr	r3, [r3, #0]
 8003d02:	689b      	ldr	r3, [r3, #8]
 8003d04:	60bb      	str	r3, [r7, #8]
 8003d06:	68bb      	ldr	r3, [r7, #8]
 8003d08:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8003d0c:	60bb      	str	r3, [r7, #8]
 8003d0e:	687b      	ldr	r3, [r7, #4]
 8003d10:	681b      	ldr	r3, [r3, #0]
 8003d12:	68ba      	ldr	r2, [r7, #8]
 8003d14:	609a      	str	r2, [r3, #8]
 8003d16:	e04f      	b.n	8003db8 <HAL_TIM_ConfigClockSource+0x174>
 8003d18:	687b      	ldr	r3, [r7, #4]
 8003d1a:	6818      	ldr	r0, [r3, #0]
 8003d1c:	683b      	ldr	r3, [r7, #0]
 8003d1e:	6899      	ldr	r1, [r3, #8]
 8003d20:	683b      	ldr	r3, [r7, #0]
 8003d22:	685a      	ldr	r2, [r3, #4]
 8003d24:	683b      	ldr	r3, [r7, #0]
 8003d26:	68db      	ldr	r3, [r3, #12]
 8003d28:	f000 fc1b 	bl	8004562 <TIM_ETR_SetConfig>
 8003d2c:	687b      	ldr	r3, [r7, #4]
 8003d2e:	681b      	ldr	r3, [r3, #0]
 8003d30:	689a      	ldr	r2, [r3, #8]
 8003d32:	687b      	ldr	r3, [r7, #4]
 8003d34:	681b      	ldr	r3, [r3, #0]
 8003d36:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8003d3a:	609a      	str	r2, [r3, #8]
 8003d3c:	e03c      	b.n	8003db8 <HAL_TIM_ConfigClockSource+0x174>
 8003d3e:	687b      	ldr	r3, [r7, #4]
 8003d40:	6818      	ldr	r0, [r3, #0]
 8003d42:	683b      	ldr	r3, [r7, #0]
 8003d44:	6859      	ldr	r1, [r3, #4]
 8003d46:	683b      	ldr	r3, [r7, #0]
 8003d48:	68db      	ldr	r3, [r3, #12]
 8003d4a:	461a      	mov	r2, r3
 8003d4c:	f000 fb8f 	bl	800446e <TIM_TI1_ConfigInputStage>
 8003d50:	687b      	ldr	r3, [r7, #4]
 8003d52:	681b      	ldr	r3, [r3, #0]
 8003d54:	2150      	movs	r1, #80	@ 0x50
 8003d56:	4618      	mov	r0, r3
 8003d58:	f000 fbe8 	bl	800452c <TIM_ITRx_SetConfig>
 8003d5c:	e02c      	b.n	8003db8 <HAL_TIM_ConfigClockSource+0x174>
 8003d5e:	687b      	ldr	r3, [r7, #4]
 8003d60:	6818      	ldr	r0, [r3, #0]
 8003d62:	683b      	ldr	r3, [r7, #0]
 8003d64:	6859      	ldr	r1, [r3, #4]
 8003d66:	683b      	ldr	r3, [r7, #0]
 8003d68:	68db      	ldr	r3, [r3, #12]
 8003d6a:	461a      	mov	r2, r3
 8003d6c:	f000 fbae 	bl	80044cc <TIM_TI2_ConfigInputStage>
 8003d70:	687b      	ldr	r3, [r7, #4]
 8003d72:	681b      	ldr	r3, [r3, #0]
 8003d74:	2160      	movs	r1, #96	@ 0x60
 8003d76:	4618      	mov	r0, r3
 8003d78:	f000 fbd8 	bl	800452c <TIM_ITRx_SetConfig>
 8003d7c:	e01c      	b.n	8003db8 <HAL_TIM_ConfigClockSource+0x174>
 8003d7e:	687b      	ldr	r3, [r7, #4]
 8003d80:	6818      	ldr	r0, [r3, #0]
 8003d82:	683b      	ldr	r3, [r7, #0]
 8003d84:	6859      	ldr	r1, [r3, #4]
 8003d86:	683b      	ldr	r3, [r7, #0]
 8003d88:	68db      	ldr	r3, [r3, #12]
 8003d8a:	461a      	mov	r2, r3
 8003d8c:	f000 fb6f 	bl	800446e <TIM_TI1_ConfigInputStage>
 8003d90:	687b      	ldr	r3, [r7, #4]
 8003d92:	681b      	ldr	r3, [r3, #0]
 8003d94:	2140      	movs	r1, #64	@ 0x40
 8003d96:	4618      	mov	r0, r3
 8003d98:	f000 fbc8 	bl	800452c <TIM_ITRx_SetConfig>
 8003d9c:	e00c      	b.n	8003db8 <HAL_TIM_ConfigClockSource+0x174>
 8003d9e:	687b      	ldr	r3, [r7, #4]
 8003da0:	681a      	ldr	r2, [r3, #0]
 8003da2:	683b      	ldr	r3, [r7, #0]
 8003da4:	681b      	ldr	r3, [r3, #0]
 8003da6:	4619      	mov	r1, r3
 8003da8:	4610      	mov	r0, r2
 8003daa:	f000 fbbf 	bl	800452c <TIM_ITRx_SetConfig>
 8003dae:	e003      	b.n	8003db8 <HAL_TIM_ConfigClockSource+0x174>
 8003db0:	2301      	movs	r3, #1
 8003db2:	73fb      	strb	r3, [r7, #15]
 8003db4:	e000      	b.n	8003db8 <HAL_TIM_ConfigClockSource+0x174>
 8003db6:	bf00      	nop
 8003db8:	687b      	ldr	r3, [r7, #4]
 8003dba:	2201      	movs	r2, #1
 8003dbc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003dc0:	687b      	ldr	r3, [r7, #4]
 8003dc2:	2200      	movs	r2, #0
 8003dc4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003dc8:	7bfb      	ldrb	r3, [r7, #15]
 8003dca:	4618      	mov	r0, r3
 8003dcc:	3710      	adds	r7, #16
 8003dce:	46bd      	mov	sp, r7
 8003dd0:	bd80      	pop	{r7, pc}

08003dd2 <HAL_TIM_SlaveConfigSynchro>:
 8003dd2:	b580      	push	{r7, lr}
 8003dd4:	b082      	sub	sp, #8
 8003dd6:	af00      	add	r7, sp, #0
 8003dd8:	6078      	str	r0, [r7, #4]
 8003dda:	6039      	str	r1, [r7, #0]
 8003ddc:	687b      	ldr	r3, [r7, #4]
 8003dde:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003de2:	2b01      	cmp	r3, #1
 8003de4:	d101      	bne.n	8003dea <HAL_TIM_SlaveConfigSynchro+0x18>
 8003de6:	2302      	movs	r3, #2
 8003de8:	e031      	b.n	8003e4e <HAL_TIM_SlaveConfigSynchro+0x7c>
 8003dea:	687b      	ldr	r3, [r7, #4]
 8003dec:	2201      	movs	r2, #1
 8003dee:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003df2:	687b      	ldr	r3, [r7, #4]
 8003df4:	2202      	movs	r2, #2
 8003df6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003dfa:	6839      	ldr	r1, [r7, #0]
 8003dfc:	6878      	ldr	r0, [r7, #4]
 8003dfe:	f000 faa5 	bl	800434c <TIM_SlaveTimer_SetConfig>
 8003e02:	4603      	mov	r3, r0
 8003e04:	2b00      	cmp	r3, #0
 8003e06:	d009      	beq.n	8003e1c <HAL_TIM_SlaveConfigSynchro+0x4a>
 8003e08:	687b      	ldr	r3, [r7, #4]
 8003e0a:	2201      	movs	r2, #1
 8003e0c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003e10:	687b      	ldr	r3, [r7, #4]
 8003e12:	2200      	movs	r2, #0
 8003e14:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003e18:	2301      	movs	r3, #1
 8003e1a:	e018      	b.n	8003e4e <HAL_TIM_SlaveConfigSynchro+0x7c>
 8003e1c:	687b      	ldr	r3, [r7, #4]
 8003e1e:	681b      	ldr	r3, [r3, #0]
 8003e20:	68da      	ldr	r2, [r3, #12]
 8003e22:	687b      	ldr	r3, [r7, #4]
 8003e24:	681b      	ldr	r3, [r3, #0]
 8003e26:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8003e2a:	60da      	str	r2, [r3, #12]
 8003e2c:	687b      	ldr	r3, [r7, #4]
 8003e2e:	681b      	ldr	r3, [r3, #0]
 8003e30:	68da      	ldr	r2, [r3, #12]
 8003e32:	687b      	ldr	r3, [r7, #4]
 8003e34:	681b      	ldr	r3, [r3, #0]
 8003e36:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8003e3a:	60da      	str	r2, [r3, #12]
 8003e3c:	687b      	ldr	r3, [r7, #4]
 8003e3e:	2201      	movs	r2, #1
 8003e40:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003e44:	687b      	ldr	r3, [r7, #4]
 8003e46:	2200      	movs	r2, #0
 8003e48:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003e4c:	2300      	movs	r3, #0
 8003e4e:	4618      	mov	r0, r3
 8003e50:	3708      	adds	r7, #8
 8003e52:	46bd      	mov	sp, r7
 8003e54:	bd80      	pop	{r7, pc}

08003e56 <HAL_TIM_OC_DelayElapsedCallback>:
 8003e56:	b480      	push	{r7}
 8003e58:	b083      	sub	sp, #12
 8003e5a:	af00      	add	r7, sp, #0
 8003e5c:	6078      	str	r0, [r7, #4]
 8003e5e:	bf00      	nop
 8003e60:	370c      	adds	r7, #12
 8003e62:	46bd      	mov	sp, r7
 8003e64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e68:	4770      	bx	lr

08003e6a <HAL_TIM_IC_CaptureCallback>:
 8003e6a:	b480      	push	{r7}
 8003e6c:	b083      	sub	sp, #12
 8003e6e:	af00      	add	r7, sp, #0
 8003e70:	6078      	str	r0, [r7, #4]
 8003e72:	bf00      	nop
 8003e74:	370c      	adds	r7, #12
 8003e76:	46bd      	mov	sp, r7
 8003e78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e7c:	4770      	bx	lr

08003e7e <HAL_TIM_TriggerCallback>:
 8003e7e:	b480      	push	{r7}
 8003e80:	b083      	sub	sp, #12
 8003e82:	af00      	add	r7, sp, #0
 8003e84:	6078      	str	r0, [r7, #4]
 8003e86:	bf00      	nop
 8003e88:	370c      	adds	r7, #12
 8003e8a:	46bd      	mov	sp, r7
 8003e8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e90:	4770      	bx	lr
	...

08003e94 <TIM_Base_SetConfig>:
 8003e94:	b480      	push	{r7}
 8003e96:	b085      	sub	sp, #20
 8003e98:	af00      	add	r7, sp, #0
 8003e9a:	6078      	str	r0, [r7, #4]
 8003e9c:	6039      	str	r1, [r7, #0]
 8003e9e:	687b      	ldr	r3, [r7, #4]
 8003ea0:	681b      	ldr	r3, [r3, #0]
 8003ea2:	60fb      	str	r3, [r7, #12]
 8003ea4:	687b      	ldr	r3, [r7, #4]
 8003ea6:	4a46      	ldr	r2, [pc, #280]	@ (8003fc0 <TIM_Base_SetConfig+0x12c>)
 8003ea8:	4293      	cmp	r3, r2
 8003eaa:	d013      	beq.n	8003ed4 <TIM_Base_SetConfig+0x40>
 8003eac:	687b      	ldr	r3, [r7, #4]
 8003eae:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003eb2:	d00f      	beq.n	8003ed4 <TIM_Base_SetConfig+0x40>
 8003eb4:	687b      	ldr	r3, [r7, #4]
 8003eb6:	4a43      	ldr	r2, [pc, #268]	@ (8003fc4 <TIM_Base_SetConfig+0x130>)
 8003eb8:	4293      	cmp	r3, r2
 8003eba:	d00b      	beq.n	8003ed4 <TIM_Base_SetConfig+0x40>
 8003ebc:	687b      	ldr	r3, [r7, #4]
 8003ebe:	4a42      	ldr	r2, [pc, #264]	@ (8003fc8 <TIM_Base_SetConfig+0x134>)
 8003ec0:	4293      	cmp	r3, r2
 8003ec2:	d007      	beq.n	8003ed4 <TIM_Base_SetConfig+0x40>
 8003ec4:	687b      	ldr	r3, [r7, #4]
 8003ec6:	4a41      	ldr	r2, [pc, #260]	@ (8003fcc <TIM_Base_SetConfig+0x138>)
 8003ec8:	4293      	cmp	r3, r2
 8003eca:	d003      	beq.n	8003ed4 <TIM_Base_SetConfig+0x40>
 8003ecc:	687b      	ldr	r3, [r7, #4]
 8003ece:	4a40      	ldr	r2, [pc, #256]	@ (8003fd0 <TIM_Base_SetConfig+0x13c>)
 8003ed0:	4293      	cmp	r3, r2
 8003ed2:	d108      	bne.n	8003ee6 <TIM_Base_SetConfig+0x52>
 8003ed4:	68fb      	ldr	r3, [r7, #12]
 8003ed6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8003eda:	60fb      	str	r3, [r7, #12]
 8003edc:	683b      	ldr	r3, [r7, #0]
 8003ede:	685b      	ldr	r3, [r3, #4]
 8003ee0:	68fa      	ldr	r2, [r7, #12]
 8003ee2:	4313      	orrs	r3, r2
 8003ee4:	60fb      	str	r3, [r7, #12]
 8003ee6:	687b      	ldr	r3, [r7, #4]
 8003ee8:	4a35      	ldr	r2, [pc, #212]	@ (8003fc0 <TIM_Base_SetConfig+0x12c>)
 8003eea:	4293      	cmp	r3, r2
 8003eec:	d02b      	beq.n	8003f46 <TIM_Base_SetConfig+0xb2>
 8003eee:	687b      	ldr	r3, [r7, #4]
 8003ef0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003ef4:	d027      	beq.n	8003f46 <TIM_Base_SetConfig+0xb2>
 8003ef6:	687b      	ldr	r3, [r7, #4]
 8003ef8:	4a32      	ldr	r2, [pc, #200]	@ (8003fc4 <TIM_Base_SetConfig+0x130>)
 8003efa:	4293      	cmp	r3, r2
 8003efc:	d023      	beq.n	8003f46 <TIM_Base_SetConfig+0xb2>
 8003efe:	687b      	ldr	r3, [r7, #4]
 8003f00:	4a31      	ldr	r2, [pc, #196]	@ (8003fc8 <TIM_Base_SetConfig+0x134>)
 8003f02:	4293      	cmp	r3, r2
 8003f04:	d01f      	beq.n	8003f46 <TIM_Base_SetConfig+0xb2>
 8003f06:	687b      	ldr	r3, [r7, #4]
 8003f08:	4a30      	ldr	r2, [pc, #192]	@ (8003fcc <TIM_Base_SetConfig+0x138>)
 8003f0a:	4293      	cmp	r3, r2
 8003f0c:	d01b      	beq.n	8003f46 <TIM_Base_SetConfig+0xb2>
 8003f0e:	687b      	ldr	r3, [r7, #4]
 8003f10:	4a2f      	ldr	r2, [pc, #188]	@ (8003fd0 <TIM_Base_SetConfig+0x13c>)
 8003f12:	4293      	cmp	r3, r2
 8003f14:	d017      	beq.n	8003f46 <TIM_Base_SetConfig+0xb2>
 8003f16:	687b      	ldr	r3, [r7, #4]
 8003f18:	4a2e      	ldr	r2, [pc, #184]	@ (8003fd4 <TIM_Base_SetConfig+0x140>)
 8003f1a:	4293      	cmp	r3, r2
 8003f1c:	d013      	beq.n	8003f46 <TIM_Base_SetConfig+0xb2>
 8003f1e:	687b      	ldr	r3, [r7, #4]
 8003f20:	4a2d      	ldr	r2, [pc, #180]	@ (8003fd8 <TIM_Base_SetConfig+0x144>)
 8003f22:	4293      	cmp	r3, r2
 8003f24:	d00f      	beq.n	8003f46 <TIM_Base_SetConfig+0xb2>
 8003f26:	687b      	ldr	r3, [r7, #4]
 8003f28:	4a2c      	ldr	r2, [pc, #176]	@ (8003fdc <TIM_Base_SetConfig+0x148>)
 8003f2a:	4293      	cmp	r3, r2
 8003f2c:	d00b      	beq.n	8003f46 <TIM_Base_SetConfig+0xb2>
 8003f2e:	687b      	ldr	r3, [r7, #4]
 8003f30:	4a2b      	ldr	r2, [pc, #172]	@ (8003fe0 <TIM_Base_SetConfig+0x14c>)
 8003f32:	4293      	cmp	r3, r2
 8003f34:	d007      	beq.n	8003f46 <TIM_Base_SetConfig+0xb2>
 8003f36:	687b      	ldr	r3, [r7, #4]
 8003f38:	4a2a      	ldr	r2, [pc, #168]	@ (8003fe4 <TIM_Base_SetConfig+0x150>)
 8003f3a:	4293      	cmp	r3, r2
 8003f3c:	d003      	beq.n	8003f46 <TIM_Base_SetConfig+0xb2>
 8003f3e:	687b      	ldr	r3, [r7, #4]
 8003f40:	4a29      	ldr	r2, [pc, #164]	@ (8003fe8 <TIM_Base_SetConfig+0x154>)
 8003f42:	4293      	cmp	r3, r2
 8003f44:	d108      	bne.n	8003f58 <TIM_Base_SetConfig+0xc4>
 8003f46:	68fb      	ldr	r3, [r7, #12]
 8003f48:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003f4c:	60fb      	str	r3, [r7, #12]
 8003f4e:	683b      	ldr	r3, [r7, #0]
 8003f50:	68db      	ldr	r3, [r3, #12]
 8003f52:	68fa      	ldr	r2, [r7, #12]
 8003f54:	4313      	orrs	r3, r2
 8003f56:	60fb      	str	r3, [r7, #12]
 8003f58:	68fb      	ldr	r3, [r7, #12]
 8003f5a:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8003f5e:	683b      	ldr	r3, [r7, #0]
 8003f60:	695b      	ldr	r3, [r3, #20]
 8003f62:	4313      	orrs	r3, r2
 8003f64:	60fb      	str	r3, [r7, #12]
 8003f66:	687b      	ldr	r3, [r7, #4]
 8003f68:	68fa      	ldr	r2, [r7, #12]
 8003f6a:	601a      	str	r2, [r3, #0]
 8003f6c:	683b      	ldr	r3, [r7, #0]
 8003f6e:	689a      	ldr	r2, [r3, #8]
 8003f70:	687b      	ldr	r3, [r7, #4]
 8003f72:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003f74:	683b      	ldr	r3, [r7, #0]
 8003f76:	681a      	ldr	r2, [r3, #0]
 8003f78:	687b      	ldr	r3, [r7, #4]
 8003f7a:	629a      	str	r2, [r3, #40]	@ 0x28
 8003f7c:	687b      	ldr	r3, [r7, #4]
 8003f7e:	4a10      	ldr	r2, [pc, #64]	@ (8003fc0 <TIM_Base_SetConfig+0x12c>)
 8003f80:	4293      	cmp	r3, r2
 8003f82:	d003      	beq.n	8003f8c <TIM_Base_SetConfig+0xf8>
 8003f84:	687b      	ldr	r3, [r7, #4]
 8003f86:	4a12      	ldr	r2, [pc, #72]	@ (8003fd0 <TIM_Base_SetConfig+0x13c>)
 8003f88:	4293      	cmp	r3, r2
 8003f8a:	d103      	bne.n	8003f94 <TIM_Base_SetConfig+0x100>
 8003f8c:	683b      	ldr	r3, [r7, #0]
 8003f8e:	691a      	ldr	r2, [r3, #16]
 8003f90:	687b      	ldr	r3, [r7, #4]
 8003f92:	631a      	str	r2, [r3, #48]	@ 0x30
 8003f94:	687b      	ldr	r3, [r7, #4]
 8003f96:	2201      	movs	r2, #1
 8003f98:	615a      	str	r2, [r3, #20]
 8003f9a:	687b      	ldr	r3, [r7, #4]
 8003f9c:	691b      	ldr	r3, [r3, #16]
 8003f9e:	f003 0301 	and.w	r3, r3, #1
 8003fa2:	2b01      	cmp	r3, #1
 8003fa4:	d105      	bne.n	8003fb2 <TIM_Base_SetConfig+0x11e>
 8003fa6:	687b      	ldr	r3, [r7, #4]
 8003fa8:	691b      	ldr	r3, [r3, #16]
 8003faa:	f023 0201 	bic.w	r2, r3, #1
 8003fae:	687b      	ldr	r3, [r7, #4]
 8003fb0:	611a      	str	r2, [r3, #16]
 8003fb2:	bf00      	nop
 8003fb4:	3714      	adds	r7, #20
 8003fb6:	46bd      	mov	sp, r7
 8003fb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fbc:	4770      	bx	lr
 8003fbe:	bf00      	nop
 8003fc0:	40010000 	.word	0x40010000
 8003fc4:	40000400 	.word	0x40000400
 8003fc8:	40000800 	.word	0x40000800
 8003fcc:	40000c00 	.word	0x40000c00
 8003fd0:	40010400 	.word	0x40010400
 8003fd4:	40014000 	.word	0x40014000
 8003fd8:	40014400 	.word	0x40014400
 8003fdc:	40014800 	.word	0x40014800
 8003fe0:	40001800 	.word	0x40001800
 8003fe4:	40001c00 	.word	0x40001c00
 8003fe8:	40002000 	.word	0x40002000

08003fec <TIM_OC1_SetConfig>:
 8003fec:	b480      	push	{r7}
 8003fee:	b087      	sub	sp, #28
 8003ff0:	af00      	add	r7, sp, #0
 8003ff2:	6078      	str	r0, [r7, #4]
 8003ff4:	6039      	str	r1, [r7, #0]
 8003ff6:	687b      	ldr	r3, [r7, #4]
 8003ff8:	6a1b      	ldr	r3, [r3, #32]
 8003ffa:	617b      	str	r3, [r7, #20]
 8003ffc:	687b      	ldr	r3, [r7, #4]
 8003ffe:	6a1b      	ldr	r3, [r3, #32]
 8004000:	f023 0201 	bic.w	r2, r3, #1
 8004004:	687b      	ldr	r3, [r7, #4]
 8004006:	621a      	str	r2, [r3, #32]
 8004008:	687b      	ldr	r3, [r7, #4]
 800400a:	685b      	ldr	r3, [r3, #4]
 800400c:	613b      	str	r3, [r7, #16]
 800400e:	687b      	ldr	r3, [r7, #4]
 8004010:	699b      	ldr	r3, [r3, #24]
 8004012:	60fb      	str	r3, [r7, #12]
 8004014:	68fb      	ldr	r3, [r7, #12]
 8004016:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800401a:	60fb      	str	r3, [r7, #12]
 800401c:	68fb      	ldr	r3, [r7, #12]
 800401e:	f023 0303 	bic.w	r3, r3, #3
 8004022:	60fb      	str	r3, [r7, #12]
 8004024:	683b      	ldr	r3, [r7, #0]
 8004026:	681b      	ldr	r3, [r3, #0]
 8004028:	68fa      	ldr	r2, [r7, #12]
 800402a:	4313      	orrs	r3, r2
 800402c:	60fb      	str	r3, [r7, #12]
 800402e:	697b      	ldr	r3, [r7, #20]
 8004030:	f023 0302 	bic.w	r3, r3, #2
 8004034:	617b      	str	r3, [r7, #20]
 8004036:	683b      	ldr	r3, [r7, #0]
 8004038:	689b      	ldr	r3, [r3, #8]
 800403a:	697a      	ldr	r2, [r7, #20]
 800403c:	4313      	orrs	r3, r2
 800403e:	617b      	str	r3, [r7, #20]
 8004040:	687b      	ldr	r3, [r7, #4]
 8004042:	4a20      	ldr	r2, [pc, #128]	@ (80040c4 <TIM_OC1_SetConfig+0xd8>)
 8004044:	4293      	cmp	r3, r2
 8004046:	d003      	beq.n	8004050 <TIM_OC1_SetConfig+0x64>
 8004048:	687b      	ldr	r3, [r7, #4]
 800404a:	4a1f      	ldr	r2, [pc, #124]	@ (80040c8 <TIM_OC1_SetConfig+0xdc>)
 800404c:	4293      	cmp	r3, r2
 800404e:	d10c      	bne.n	800406a <TIM_OC1_SetConfig+0x7e>
 8004050:	697b      	ldr	r3, [r7, #20]
 8004052:	f023 0308 	bic.w	r3, r3, #8
 8004056:	617b      	str	r3, [r7, #20]
 8004058:	683b      	ldr	r3, [r7, #0]
 800405a:	68db      	ldr	r3, [r3, #12]
 800405c:	697a      	ldr	r2, [r7, #20]
 800405e:	4313      	orrs	r3, r2
 8004060:	617b      	str	r3, [r7, #20]
 8004062:	697b      	ldr	r3, [r7, #20]
 8004064:	f023 0304 	bic.w	r3, r3, #4
 8004068:	617b      	str	r3, [r7, #20]
 800406a:	687b      	ldr	r3, [r7, #4]
 800406c:	4a15      	ldr	r2, [pc, #84]	@ (80040c4 <TIM_OC1_SetConfig+0xd8>)
 800406e:	4293      	cmp	r3, r2
 8004070:	d003      	beq.n	800407a <TIM_OC1_SetConfig+0x8e>
 8004072:	687b      	ldr	r3, [r7, #4]
 8004074:	4a14      	ldr	r2, [pc, #80]	@ (80040c8 <TIM_OC1_SetConfig+0xdc>)
 8004076:	4293      	cmp	r3, r2
 8004078:	d111      	bne.n	800409e <TIM_OC1_SetConfig+0xb2>
 800407a:	693b      	ldr	r3, [r7, #16]
 800407c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004080:	613b      	str	r3, [r7, #16]
 8004082:	693b      	ldr	r3, [r7, #16]
 8004084:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8004088:	613b      	str	r3, [r7, #16]
 800408a:	683b      	ldr	r3, [r7, #0]
 800408c:	695b      	ldr	r3, [r3, #20]
 800408e:	693a      	ldr	r2, [r7, #16]
 8004090:	4313      	orrs	r3, r2
 8004092:	613b      	str	r3, [r7, #16]
 8004094:	683b      	ldr	r3, [r7, #0]
 8004096:	699b      	ldr	r3, [r3, #24]
 8004098:	693a      	ldr	r2, [r7, #16]
 800409a:	4313      	orrs	r3, r2
 800409c:	613b      	str	r3, [r7, #16]
 800409e:	687b      	ldr	r3, [r7, #4]
 80040a0:	693a      	ldr	r2, [r7, #16]
 80040a2:	605a      	str	r2, [r3, #4]
 80040a4:	687b      	ldr	r3, [r7, #4]
 80040a6:	68fa      	ldr	r2, [r7, #12]
 80040a8:	619a      	str	r2, [r3, #24]
 80040aa:	683b      	ldr	r3, [r7, #0]
 80040ac:	685a      	ldr	r2, [r3, #4]
 80040ae:	687b      	ldr	r3, [r7, #4]
 80040b0:	635a      	str	r2, [r3, #52]	@ 0x34
 80040b2:	687b      	ldr	r3, [r7, #4]
 80040b4:	697a      	ldr	r2, [r7, #20]
 80040b6:	621a      	str	r2, [r3, #32]
 80040b8:	bf00      	nop
 80040ba:	371c      	adds	r7, #28
 80040bc:	46bd      	mov	sp, r7
 80040be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040c2:	4770      	bx	lr
 80040c4:	40010000 	.word	0x40010000
 80040c8:	40010400 	.word	0x40010400

080040cc <TIM_OC2_SetConfig>:
 80040cc:	b480      	push	{r7}
 80040ce:	b087      	sub	sp, #28
 80040d0:	af00      	add	r7, sp, #0
 80040d2:	6078      	str	r0, [r7, #4]
 80040d4:	6039      	str	r1, [r7, #0]
 80040d6:	687b      	ldr	r3, [r7, #4]
 80040d8:	6a1b      	ldr	r3, [r3, #32]
 80040da:	617b      	str	r3, [r7, #20]
 80040dc:	687b      	ldr	r3, [r7, #4]
 80040de:	6a1b      	ldr	r3, [r3, #32]
 80040e0:	f023 0210 	bic.w	r2, r3, #16
 80040e4:	687b      	ldr	r3, [r7, #4]
 80040e6:	621a      	str	r2, [r3, #32]
 80040e8:	687b      	ldr	r3, [r7, #4]
 80040ea:	685b      	ldr	r3, [r3, #4]
 80040ec:	613b      	str	r3, [r7, #16]
 80040ee:	687b      	ldr	r3, [r7, #4]
 80040f0:	699b      	ldr	r3, [r3, #24]
 80040f2:	60fb      	str	r3, [r7, #12]
 80040f4:	68fb      	ldr	r3, [r7, #12]
 80040f6:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80040fa:	60fb      	str	r3, [r7, #12]
 80040fc:	68fb      	ldr	r3, [r7, #12]
 80040fe:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004102:	60fb      	str	r3, [r7, #12]
 8004104:	683b      	ldr	r3, [r7, #0]
 8004106:	681b      	ldr	r3, [r3, #0]
 8004108:	021b      	lsls	r3, r3, #8
 800410a:	68fa      	ldr	r2, [r7, #12]
 800410c:	4313      	orrs	r3, r2
 800410e:	60fb      	str	r3, [r7, #12]
 8004110:	697b      	ldr	r3, [r7, #20]
 8004112:	f023 0320 	bic.w	r3, r3, #32
 8004116:	617b      	str	r3, [r7, #20]
 8004118:	683b      	ldr	r3, [r7, #0]
 800411a:	689b      	ldr	r3, [r3, #8]
 800411c:	011b      	lsls	r3, r3, #4
 800411e:	697a      	ldr	r2, [r7, #20]
 8004120:	4313      	orrs	r3, r2
 8004122:	617b      	str	r3, [r7, #20]
 8004124:	687b      	ldr	r3, [r7, #4]
 8004126:	4a22      	ldr	r2, [pc, #136]	@ (80041b0 <TIM_OC2_SetConfig+0xe4>)
 8004128:	4293      	cmp	r3, r2
 800412a:	d003      	beq.n	8004134 <TIM_OC2_SetConfig+0x68>
 800412c:	687b      	ldr	r3, [r7, #4]
 800412e:	4a21      	ldr	r2, [pc, #132]	@ (80041b4 <TIM_OC2_SetConfig+0xe8>)
 8004130:	4293      	cmp	r3, r2
 8004132:	d10d      	bne.n	8004150 <TIM_OC2_SetConfig+0x84>
 8004134:	697b      	ldr	r3, [r7, #20]
 8004136:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800413a:	617b      	str	r3, [r7, #20]
 800413c:	683b      	ldr	r3, [r7, #0]
 800413e:	68db      	ldr	r3, [r3, #12]
 8004140:	011b      	lsls	r3, r3, #4
 8004142:	697a      	ldr	r2, [r7, #20]
 8004144:	4313      	orrs	r3, r2
 8004146:	617b      	str	r3, [r7, #20]
 8004148:	697b      	ldr	r3, [r7, #20]
 800414a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800414e:	617b      	str	r3, [r7, #20]
 8004150:	687b      	ldr	r3, [r7, #4]
 8004152:	4a17      	ldr	r2, [pc, #92]	@ (80041b0 <TIM_OC2_SetConfig+0xe4>)
 8004154:	4293      	cmp	r3, r2
 8004156:	d003      	beq.n	8004160 <TIM_OC2_SetConfig+0x94>
 8004158:	687b      	ldr	r3, [r7, #4]
 800415a:	4a16      	ldr	r2, [pc, #88]	@ (80041b4 <TIM_OC2_SetConfig+0xe8>)
 800415c:	4293      	cmp	r3, r2
 800415e:	d113      	bne.n	8004188 <TIM_OC2_SetConfig+0xbc>
 8004160:	693b      	ldr	r3, [r7, #16]
 8004162:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8004166:	613b      	str	r3, [r7, #16]
 8004168:	693b      	ldr	r3, [r7, #16]
 800416a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800416e:	613b      	str	r3, [r7, #16]
 8004170:	683b      	ldr	r3, [r7, #0]
 8004172:	695b      	ldr	r3, [r3, #20]
 8004174:	009b      	lsls	r3, r3, #2
 8004176:	693a      	ldr	r2, [r7, #16]
 8004178:	4313      	orrs	r3, r2
 800417a:	613b      	str	r3, [r7, #16]
 800417c:	683b      	ldr	r3, [r7, #0]
 800417e:	699b      	ldr	r3, [r3, #24]
 8004180:	009b      	lsls	r3, r3, #2
 8004182:	693a      	ldr	r2, [r7, #16]
 8004184:	4313      	orrs	r3, r2
 8004186:	613b      	str	r3, [r7, #16]
 8004188:	687b      	ldr	r3, [r7, #4]
 800418a:	693a      	ldr	r2, [r7, #16]
 800418c:	605a      	str	r2, [r3, #4]
 800418e:	687b      	ldr	r3, [r7, #4]
 8004190:	68fa      	ldr	r2, [r7, #12]
 8004192:	619a      	str	r2, [r3, #24]
 8004194:	683b      	ldr	r3, [r7, #0]
 8004196:	685a      	ldr	r2, [r3, #4]
 8004198:	687b      	ldr	r3, [r7, #4]
 800419a:	639a      	str	r2, [r3, #56]	@ 0x38
 800419c:	687b      	ldr	r3, [r7, #4]
 800419e:	697a      	ldr	r2, [r7, #20]
 80041a0:	621a      	str	r2, [r3, #32]
 80041a2:	bf00      	nop
 80041a4:	371c      	adds	r7, #28
 80041a6:	46bd      	mov	sp, r7
 80041a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041ac:	4770      	bx	lr
 80041ae:	bf00      	nop
 80041b0:	40010000 	.word	0x40010000
 80041b4:	40010400 	.word	0x40010400

080041b8 <TIM_OC3_SetConfig>:
 80041b8:	b480      	push	{r7}
 80041ba:	b087      	sub	sp, #28
 80041bc:	af00      	add	r7, sp, #0
 80041be:	6078      	str	r0, [r7, #4]
 80041c0:	6039      	str	r1, [r7, #0]
 80041c2:	687b      	ldr	r3, [r7, #4]
 80041c4:	6a1b      	ldr	r3, [r3, #32]
 80041c6:	617b      	str	r3, [r7, #20]
 80041c8:	687b      	ldr	r3, [r7, #4]
 80041ca:	6a1b      	ldr	r3, [r3, #32]
 80041cc:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80041d0:	687b      	ldr	r3, [r7, #4]
 80041d2:	621a      	str	r2, [r3, #32]
 80041d4:	687b      	ldr	r3, [r7, #4]
 80041d6:	685b      	ldr	r3, [r3, #4]
 80041d8:	613b      	str	r3, [r7, #16]
 80041da:	687b      	ldr	r3, [r7, #4]
 80041dc:	69db      	ldr	r3, [r3, #28]
 80041de:	60fb      	str	r3, [r7, #12]
 80041e0:	68fb      	ldr	r3, [r7, #12]
 80041e2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80041e6:	60fb      	str	r3, [r7, #12]
 80041e8:	68fb      	ldr	r3, [r7, #12]
 80041ea:	f023 0303 	bic.w	r3, r3, #3
 80041ee:	60fb      	str	r3, [r7, #12]
 80041f0:	683b      	ldr	r3, [r7, #0]
 80041f2:	681b      	ldr	r3, [r3, #0]
 80041f4:	68fa      	ldr	r2, [r7, #12]
 80041f6:	4313      	orrs	r3, r2
 80041f8:	60fb      	str	r3, [r7, #12]
 80041fa:	697b      	ldr	r3, [r7, #20]
 80041fc:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8004200:	617b      	str	r3, [r7, #20]
 8004202:	683b      	ldr	r3, [r7, #0]
 8004204:	689b      	ldr	r3, [r3, #8]
 8004206:	021b      	lsls	r3, r3, #8
 8004208:	697a      	ldr	r2, [r7, #20]
 800420a:	4313      	orrs	r3, r2
 800420c:	617b      	str	r3, [r7, #20]
 800420e:	687b      	ldr	r3, [r7, #4]
 8004210:	4a21      	ldr	r2, [pc, #132]	@ (8004298 <TIM_OC3_SetConfig+0xe0>)
 8004212:	4293      	cmp	r3, r2
 8004214:	d003      	beq.n	800421e <TIM_OC3_SetConfig+0x66>
 8004216:	687b      	ldr	r3, [r7, #4]
 8004218:	4a20      	ldr	r2, [pc, #128]	@ (800429c <TIM_OC3_SetConfig+0xe4>)
 800421a:	4293      	cmp	r3, r2
 800421c:	d10d      	bne.n	800423a <TIM_OC3_SetConfig+0x82>
 800421e:	697b      	ldr	r3, [r7, #20]
 8004220:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004224:	617b      	str	r3, [r7, #20]
 8004226:	683b      	ldr	r3, [r7, #0]
 8004228:	68db      	ldr	r3, [r3, #12]
 800422a:	021b      	lsls	r3, r3, #8
 800422c:	697a      	ldr	r2, [r7, #20]
 800422e:	4313      	orrs	r3, r2
 8004230:	617b      	str	r3, [r7, #20]
 8004232:	697b      	ldr	r3, [r7, #20]
 8004234:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8004238:	617b      	str	r3, [r7, #20]
 800423a:	687b      	ldr	r3, [r7, #4]
 800423c:	4a16      	ldr	r2, [pc, #88]	@ (8004298 <TIM_OC3_SetConfig+0xe0>)
 800423e:	4293      	cmp	r3, r2
 8004240:	d003      	beq.n	800424a <TIM_OC3_SetConfig+0x92>
 8004242:	687b      	ldr	r3, [r7, #4]
 8004244:	4a15      	ldr	r2, [pc, #84]	@ (800429c <TIM_OC3_SetConfig+0xe4>)
 8004246:	4293      	cmp	r3, r2
 8004248:	d113      	bne.n	8004272 <TIM_OC3_SetConfig+0xba>
 800424a:	693b      	ldr	r3, [r7, #16]
 800424c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8004250:	613b      	str	r3, [r7, #16]
 8004252:	693b      	ldr	r3, [r7, #16]
 8004254:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8004258:	613b      	str	r3, [r7, #16]
 800425a:	683b      	ldr	r3, [r7, #0]
 800425c:	695b      	ldr	r3, [r3, #20]
 800425e:	011b      	lsls	r3, r3, #4
 8004260:	693a      	ldr	r2, [r7, #16]
 8004262:	4313      	orrs	r3, r2
 8004264:	613b      	str	r3, [r7, #16]
 8004266:	683b      	ldr	r3, [r7, #0]
 8004268:	699b      	ldr	r3, [r3, #24]
 800426a:	011b      	lsls	r3, r3, #4
 800426c:	693a      	ldr	r2, [r7, #16]
 800426e:	4313      	orrs	r3, r2
 8004270:	613b      	str	r3, [r7, #16]
 8004272:	687b      	ldr	r3, [r7, #4]
 8004274:	693a      	ldr	r2, [r7, #16]
 8004276:	605a      	str	r2, [r3, #4]
 8004278:	687b      	ldr	r3, [r7, #4]
 800427a:	68fa      	ldr	r2, [r7, #12]
 800427c:	61da      	str	r2, [r3, #28]
 800427e:	683b      	ldr	r3, [r7, #0]
 8004280:	685a      	ldr	r2, [r3, #4]
 8004282:	687b      	ldr	r3, [r7, #4]
 8004284:	63da      	str	r2, [r3, #60]	@ 0x3c
 8004286:	687b      	ldr	r3, [r7, #4]
 8004288:	697a      	ldr	r2, [r7, #20]
 800428a:	621a      	str	r2, [r3, #32]
 800428c:	bf00      	nop
 800428e:	371c      	adds	r7, #28
 8004290:	46bd      	mov	sp, r7
 8004292:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004296:	4770      	bx	lr
 8004298:	40010000 	.word	0x40010000
 800429c:	40010400 	.word	0x40010400

080042a0 <TIM_OC4_SetConfig>:
 80042a0:	b480      	push	{r7}
 80042a2:	b087      	sub	sp, #28
 80042a4:	af00      	add	r7, sp, #0
 80042a6:	6078      	str	r0, [r7, #4]
 80042a8:	6039      	str	r1, [r7, #0]
 80042aa:	687b      	ldr	r3, [r7, #4]
 80042ac:	6a1b      	ldr	r3, [r3, #32]
 80042ae:	613b      	str	r3, [r7, #16]
 80042b0:	687b      	ldr	r3, [r7, #4]
 80042b2:	6a1b      	ldr	r3, [r3, #32]
 80042b4:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 80042b8:	687b      	ldr	r3, [r7, #4]
 80042ba:	621a      	str	r2, [r3, #32]
 80042bc:	687b      	ldr	r3, [r7, #4]
 80042be:	685b      	ldr	r3, [r3, #4]
 80042c0:	617b      	str	r3, [r7, #20]
 80042c2:	687b      	ldr	r3, [r7, #4]
 80042c4:	69db      	ldr	r3, [r3, #28]
 80042c6:	60fb      	str	r3, [r7, #12]
 80042c8:	68fb      	ldr	r3, [r7, #12]
 80042ca:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80042ce:	60fb      	str	r3, [r7, #12]
 80042d0:	68fb      	ldr	r3, [r7, #12]
 80042d2:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80042d6:	60fb      	str	r3, [r7, #12]
 80042d8:	683b      	ldr	r3, [r7, #0]
 80042da:	681b      	ldr	r3, [r3, #0]
 80042dc:	021b      	lsls	r3, r3, #8
 80042de:	68fa      	ldr	r2, [r7, #12]
 80042e0:	4313      	orrs	r3, r2
 80042e2:	60fb      	str	r3, [r7, #12]
 80042e4:	693b      	ldr	r3, [r7, #16]
 80042e6:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80042ea:	613b      	str	r3, [r7, #16]
 80042ec:	683b      	ldr	r3, [r7, #0]
 80042ee:	689b      	ldr	r3, [r3, #8]
 80042f0:	031b      	lsls	r3, r3, #12
 80042f2:	693a      	ldr	r2, [r7, #16]
 80042f4:	4313      	orrs	r3, r2
 80042f6:	613b      	str	r3, [r7, #16]
 80042f8:	687b      	ldr	r3, [r7, #4]
 80042fa:	4a12      	ldr	r2, [pc, #72]	@ (8004344 <TIM_OC4_SetConfig+0xa4>)
 80042fc:	4293      	cmp	r3, r2
 80042fe:	d003      	beq.n	8004308 <TIM_OC4_SetConfig+0x68>
 8004300:	687b      	ldr	r3, [r7, #4]
 8004302:	4a11      	ldr	r2, [pc, #68]	@ (8004348 <TIM_OC4_SetConfig+0xa8>)
 8004304:	4293      	cmp	r3, r2
 8004306:	d109      	bne.n	800431c <TIM_OC4_SetConfig+0x7c>
 8004308:	697b      	ldr	r3, [r7, #20]
 800430a:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800430e:	617b      	str	r3, [r7, #20]
 8004310:	683b      	ldr	r3, [r7, #0]
 8004312:	695b      	ldr	r3, [r3, #20]
 8004314:	019b      	lsls	r3, r3, #6
 8004316:	697a      	ldr	r2, [r7, #20]
 8004318:	4313      	orrs	r3, r2
 800431a:	617b      	str	r3, [r7, #20]
 800431c:	687b      	ldr	r3, [r7, #4]
 800431e:	697a      	ldr	r2, [r7, #20]
 8004320:	605a      	str	r2, [r3, #4]
 8004322:	687b      	ldr	r3, [r7, #4]
 8004324:	68fa      	ldr	r2, [r7, #12]
 8004326:	61da      	str	r2, [r3, #28]
 8004328:	683b      	ldr	r3, [r7, #0]
 800432a:	685a      	ldr	r2, [r3, #4]
 800432c:	687b      	ldr	r3, [r7, #4]
 800432e:	641a      	str	r2, [r3, #64]	@ 0x40
 8004330:	687b      	ldr	r3, [r7, #4]
 8004332:	693a      	ldr	r2, [r7, #16]
 8004334:	621a      	str	r2, [r3, #32]
 8004336:	bf00      	nop
 8004338:	371c      	adds	r7, #28
 800433a:	46bd      	mov	sp, r7
 800433c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004340:	4770      	bx	lr
 8004342:	bf00      	nop
 8004344:	40010000 	.word	0x40010000
 8004348:	40010400 	.word	0x40010400

0800434c <TIM_SlaveTimer_SetConfig>:
 800434c:	b580      	push	{r7, lr}
 800434e:	b086      	sub	sp, #24
 8004350:	af00      	add	r7, sp, #0
 8004352:	6078      	str	r0, [r7, #4]
 8004354:	6039      	str	r1, [r7, #0]
 8004356:	2300      	movs	r3, #0
 8004358:	75fb      	strb	r3, [r7, #23]
 800435a:	687b      	ldr	r3, [r7, #4]
 800435c:	681b      	ldr	r3, [r3, #0]
 800435e:	689b      	ldr	r3, [r3, #8]
 8004360:	613b      	str	r3, [r7, #16]
 8004362:	693b      	ldr	r3, [r7, #16]
 8004364:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004368:	613b      	str	r3, [r7, #16]
 800436a:	683b      	ldr	r3, [r7, #0]
 800436c:	685b      	ldr	r3, [r3, #4]
 800436e:	693a      	ldr	r2, [r7, #16]
 8004370:	4313      	orrs	r3, r2
 8004372:	613b      	str	r3, [r7, #16]
 8004374:	693b      	ldr	r3, [r7, #16]
 8004376:	f023 0307 	bic.w	r3, r3, #7
 800437a:	613b      	str	r3, [r7, #16]
 800437c:	683b      	ldr	r3, [r7, #0]
 800437e:	681b      	ldr	r3, [r3, #0]
 8004380:	693a      	ldr	r2, [r7, #16]
 8004382:	4313      	orrs	r3, r2
 8004384:	613b      	str	r3, [r7, #16]
 8004386:	687b      	ldr	r3, [r7, #4]
 8004388:	681b      	ldr	r3, [r3, #0]
 800438a:	693a      	ldr	r2, [r7, #16]
 800438c:	609a      	str	r2, [r3, #8]
 800438e:	683b      	ldr	r3, [r7, #0]
 8004390:	685b      	ldr	r3, [r3, #4]
 8004392:	2b70      	cmp	r3, #112	@ 0x70
 8004394:	d01a      	beq.n	80043cc <TIM_SlaveTimer_SetConfig+0x80>
 8004396:	2b70      	cmp	r3, #112	@ 0x70
 8004398:	d860      	bhi.n	800445c <TIM_SlaveTimer_SetConfig+0x110>
 800439a:	2b60      	cmp	r3, #96	@ 0x60
 800439c:	d054      	beq.n	8004448 <TIM_SlaveTimer_SetConfig+0xfc>
 800439e:	2b60      	cmp	r3, #96	@ 0x60
 80043a0:	d85c      	bhi.n	800445c <TIM_SlaveTimer_SetConfig+0x110>
 80043a2:	2b50      	cmp	r3, #80	@ 0x50
 80043a4:	d046      	beq.n	8004434 <TIM_SlaveTimer_SetConfig+0xe8>
 80043a6:	2b50      	cmp	r3, #80	@ 0x50
 80043a8:	d858      	bhi.n	800445c <TIM_SlaveTimer_SetConfig+0x110>
 80043aa:	2b40      	cmp	r3, #64	@ 0x40
 80043ac:	d019      	beq.n	80043e2 <TIM_SlaveTimer_SetConfig+0x96>
 80043ae:	2b40      	cmp	r3, #64	@ 0x40
 80043b0:	d854      	bhi.n	800445c <TIM_SlaveTimer_SetConfig+0x110>
 80043b2:	2b30      	cmp	r3, #48	@ 0x30
 80043b4:	d055      	beq.n	8004462 <TIM_SlaveTimer_SetConfig+0x116>
 80043b6:	2b30      	cmp	r3, #48	@ 0x30
 80043b8:	d850      	bhi.n	800445c <TIM_SlaveTimer_SetConfig+0x110>
 80043ba:	2b20      	cmp	r3, #32
 80043bc:	d051      	beq.n	8004462 <TIM_SlaveTimer_SetConfig+0x116>
 80043be:	2b20      	cmp	r3, #32
 80043c0:	d84c      	bhi.n	800445c <TIM_SlaveTimer_SetConfig+0x110>
 80043c2:	2b00      	cmp	r3, #0
 80043c4:	d04d      	beq.n	8004462 <TIM_SlaveTimer_SetConfig+0x116>
 80043c6:	2b10      	cmp	r3, #16
 80043c8:	d04b      	beq.n	8004462 <TIM_SlaveTimer_SetConfig+0x116>
 80043ca:	e047      	b.n	800445c <TIM_SlaveTimer_SetConfig+0x110>
 80043cc:	687b      	ldr	r3, [r7, #4]
 80043ce:	6818      	ldr	r0, [r3, #0]
 80043d0:	683b      	ldr	r3, [r7, #0]
 80043d2:	68d9      	ldr	r1, [r3, #12]
 80043d4:	683b      	ldr	r3, [r7, #0]
 80043d6:	689a      	ldr	r2, [r3, #8]
 80043d8:	683b      	ldr	r3, [r7, #0]
 80043da:	691b      	ldr	r3, [r3, #16]
 80043dc:	f000 f8c1 	bl	8004562 <TIM_ETR_SetConfig>
 80043e0:	e040      	b.n	8004464 <TIM_SlaveTimer_SetConfig+0x118>
 80043e2:	683b      	ldr	r3, [r7, #0]
 80043e4:	681b      	ldr	r3, [r3, #0]
 80043e6:	2b05      	cmp	r3, #5
 80043e8:	d101      	bne.n	80043ee <TIM_SlaveTimer_SetConfig+0xa2>
 80043ea:	2301      	movs	r3, #1
 80043ec:	e03b      	b.n	8004466 <TIM_SlaveTimer_SetConfig+0x11a>
 80043ee:	687b      	ldr	r3, [r7, #4]
 80043f0:	681b      	ldr	r3, [r3, #0]
 80043f2:	6a1b      	ldr	r3, [r3, #32]
 80043f4:	60fb      	str	r3, [r7, #12]
 80043f6:	687b      	ldr	r3, [r7, #4]
 80043f8:	681b      	ldr	r3, [r3, #0]
 80043fa:	6a1a      	ldr	r2, [r3, #32]
 80043fc:	687b      	ldr	r3, [r7, #4]
 80043fe:	681b      	ldr	r3, [r3, #0]
 8004400:	f022 0201 	bic.w	r2, r2, #1
 8004404:	621a      	str	r2, [r3, #32]
 8004406:	687b      	ldr	r3, [r7, #4]
 8004408:	681b      	ldr	r3, [r3, #0]
 800440a:	699b      	ldr	r3, [r3, #24]
 800440c:	60bb      	str	r3, [r7, #8]
 800440e:	68bb      	ldr	r3, [r7, #8]
 8004410:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8004414:	60bb      	str	r3, [r7, #8]
 8004416:	683b      	ldr	r3, [r7, #0]
 8004418:	691b      	ldr	r3, [r3, #16]
 800441a:	011b      	lsls	r3, r3, #4
 800441c:	68ba      	ldr	r2, [r7, #8]
 800441e:	4313      	orrs	r3, r2
 8004420:	60bb      	str	r3, [r7, #8]
 8004422:	687b      	ldr	r3, [r7, #4]
 8004424:	681b      	ldr	r3, [r3, #0]
 8004426:	68ba      	ldr	r2, [r7, #8]
 8004428:	619a      	str	r2, [r3, #24]
 800442a:	687b      	ldr	r3, [r7, #4]
 800442c:	681b      	ldr	r3, [r3, #0]
 800442e:	68fa      	ldr	r2, [r7, #12]
 8004430:	621a      	str	r2, [r3, #32]
 8004432:	e017      	b.n	8004464 <TIM_SlaveTimer_SetConfig+0x118>
 8004434:	687b      	ldr	r3, [r7, #4]
 8004436:	6818      	ldr	r0, [r3, #0]
 8004438:	683b      	ldr	r3, [r7, #0]
 800443a:	6899      	ldr	r1, [r3, #8]
 800443c:	683b      	ldr	r3, [r7, #0]
 800443e:	691b      	ldr	r3, [r3, #16]
 8004440:	461a      	mov	r2, r3
 8004442:	f000 f814 	bl	800446e <TIM_TI1_ConfigInputStage>
 8004446:	e00d      	b.n	8004464 <TIM_SlaveTimer_SetConfig+0x118>
 8004448:	687b      	ldr	r3, [r7, #4]
 800444a:	6818      	ldr	r0, [r3, #0]
 800444c:	683b      	ldr	r3, [r7, #0]
 800444e:	6899      	ldr	r1, [r3, #8]
 8004450:	683b      	ldr	r3, [r7, #0]
 8004452:	691b      	ldr	r3, [r3, #16]
 8004454:	461a      	mov	r2, r3
 8004456:	f000 f839 	bl	80044cc <TIM_TI2_ConfigInputStage>
 800445a:	e003      	b.n	8004464 <TIM_SlaveTimer_SetConfig+0x118>
 800445c:	2301      	movs	r3, #1
 800445e:	75fb      	strb	r3, [r7, #23]
 8004460:	e000      	b.n	8004464 <TIM_SlaveTimer_SetConfig+0x118>
 8004462:	bf00      	nop
 8004464:	7dfb      	ldrb	r3, [r7, #23]
 8004466:	4618      	mov	r0, r3
 8004468:	3718      	adds	r7, #24
 800446a:	46bd      	mov	sp, r7
 800446c:	bd80      	pop	{r7, pc}

0800446e <TIM_TI1_ConfigInputStage>:
 800446e:	b480      	push	{r7}
 8004470:	b087      	sub	sp, #28
 8004472:	af00      	add	r7, sp, #0
 8004474:	60f8      	str	r0, [r7, #12]
 8004476:	60b9      	str	r1, [r7, #8]
 8004478:	607a      	str	r2, [r7, #4]
 800447a:	68fb      	ldr	r3, [r7, #12]
 800447c:	6a1b      	ldr	r3, [r3, #32]
 800447e:	617b      	str	r3, [r7, #20]
 8004480:	68fb      	ldr	r3, [r7, #12]
 8004482:	6a1b      	ldr	r3, [r3, #32]
 8004484:	f023 0201 	bic.w	r2, r3, #1
 8004488:	68fb      	ldr	r3, [r7, #12]
 800448a:	621a      	str	r2, [r3, #32]
 800448c:	68fb      	ldr	r3, [r7, #12]
 800448e:	699b      	ldr	r3, [r3, #24]
 8004490:	613b      	str	r3, [r7, #16]
 8004492:	693b      	ldr	r3, [r7, #16]
 8004494:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8004498:	613b      	str	r3, [r7, #16]
 800449a:	687b      	ldr	r3, [r7, #4]
 800449c:	011b      	lsls	r3, r3, #4
 800449e:	693a      	ldr	r2, [r7, #16]
 80044a0:	4313      	orrs	r3, r2
 80044a2:	613b      	str	r3, [r7, #16]
 80044a4:	697b      	ldr	r3, [r7, #20]
 80044a6:	f023 030a 	bic.w	r3, r3, #10
 80044aa:	617b      	str	r3, [r7, #20]
 80044ac:	697a      	ldr	r2, [r7, #20]
 80044ae:	68bb      	ldr	r3, [r7, #8]
 80044b0:	4313      	orrs	r3, r2
 80044b2:	617b      	str	r3, [r7, #20]
 80044b4:	68fb      	ldr	r3, [r7, #12]
 80044b6:	693a      	ldr	r2, [r7, #16]
 80044b8:	619a      	str	r2, [r3, #24]
 80044ba:	68fb      	ldr	r3, [r7, #12]
 80044bc:	697a      	ldr	r2, [r7, #20]
 80044be:	621a      	str	r2, [r3, #32]
 80044c0:	bf00      	nop
 80044c2:	371c      	adds	r7, #28
 80044c4:	46bd      	mov	sp, r7
 80044c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044ca:	4770      	bx	lr

080044cc <TIM_TI2_ConfigInputStage>:
 80044cc:	b480      	push	{r7}
 80044ce:	b087      	sub	sp, #28
 80044d0:	af00      	add	r7, sp, #0
 80044d2:	60f8      	str	r0, [r7, #12]
 80044d4:	60b9      	str	r1, [r7, #8]
 80044d6:	607a      	str	r2, [r7, #4]
 80044d8:	68fb      	ldr	r3, [r7, #12]
 80044da:	6a1b      	ldr	r3, [r3, #32]
 80044dc:	617b      	str	r3, [r7, #20]
 80044de:	68fb      	ldr	r3, [r7, #12]
 80044e0:	6a1b      	ldr	r3, [r3, #32]
 80044e2:	f023 0210 	bic.w	r2, r3, #16
 80044e6:	68fb      	ldr	r3, [r7, #12]
 80044e8:	621a      	str	r2, [r3, #32]
 80044ea:	68fb      	ldr	r3, [r7, #12]
 80044ec:	699b      	ldr	r3, [r3, #24]
 80044ee:	613b      	str	r3, [r7, #16]
 80044f0:	693b      	ldr	r3, [r7, #16]
 80044f2:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 80044f6:	613b      	str	r3, [r7, #16]
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	031b      	lsls	r3, r3, #12
 80044fc:	693a      	ldr	r2, [r7, #16]
 80044fe:	4313      	orrs	r3, r2
 8004500:	613b      	str	r3, [r7, #16]
 8004502:	697b      	ldr	r3, [r7, #20]
 8004504:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8004508:	617b      	str	r3, [r7, #20]
 800450a:	68bb      	ldr	r3, [r7, #8]
 800450c:	011b      	lsls	r3, r3, #4
 800450e:	697a      	ldr	r2, [r7, #20]
 8004510:	4313      	orrs	r3, r2
 8004512:	617b      	str	r3, [r7, #20]
 8004514:	68fb      	ldr	r3, [r7, #12]
 8004516:	693a      	ldr	r2, [r7, #16]
 8004518:	619a      	str	r2, [r3, #24]
 800451a:	68fb      	ldr	r3, [r7, #12]
 800451c:	697a      	ldr	r2, [r7, #20]
 800451e:	621a      	str	r2, [r3, #32]
 8004520:	bf00      	nop
 8004522:	371c      	adds	r7, #28
 8004524:	46bd      	mov	sp, r7
 8004526:	f85d 7b04 	ldr.w	r7, [sp], #4
 800452a:	4770      	bx	lr

0800452c <TIM_ITRx_SetConfig>:
 800452c:	b480      	push	{r7}
 800452e:	b085      	sub	sp, #20
 8004530:	af00      	add	r7, sp, #0
 8004532:	6078      	str	r0, [r7, #4]
 8004534:	6039      	str	r1, [r7, #0]
 8004536:	687b      	ldr	r3, [r7, #4]
 8004538:	689b      	ldr	r3, [r3, #8]
 800453a:	60fb      	str	r3, [r7, #12]
 800453c:	68fb      	ldr	r3, [r7, #12]
 800453e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004542:	60fb      	str	r3, [r7, #12]
 8004544:	683a      	ldr	r2, [r7, #0]
 8004546:	68fb      	ldr	r3, [r7, #12]
 8004548:	4313      	orrs	r3, r2
 800454a:	f043 0307 	orr.w	r3, r3, #7
 800454e:	60fb      	str	r3, [r7, #12]
 8004550:	687b      	ldr	r3, [r7, #4]
 8004552:	68fa      	ldr	r2, [r7, #12]
 8004554:	609a      	str	r2, [r3, #8]
 8004556:	bf00      	nop
 8004558:	3714      	adds	r7, #20
 800455a:	46bd      	mov	sp, r7
 800455c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004560:	4770      	bx	lr

08004562 <TIM_ETR_SetConfig>:
 8004562:	b480      	push	{r7}
 8004564:	b087      	sub	sp, #28
 8004566:	af00      	add	r7, sp, #0
 8004568:	60f8      	str	r0, [r7, #12]
 800456a:	60b9      	str	r1, [r7, #8]
 800456c:	607a      	str	r2, [r7, #4]
 800456e:	603b      	str	r3, [r7, #0]
 8004570:	68fb      	ldr	r3, [r7, #12]
 8004572:	689b      	ldr	r3, [r3, #8]
 8004574:	617b      	str	r3, [r7, #20]
 8004576:	697b      	ldr	r3, [r7, #20]
 8004578:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800457c:	617b      	str	r3, [r7, #20]
 800457e:	683b      	ldr	r3, [r7, #0]
 8004580:	021a      	lsls	r2, r3, #8
 8004582:	687b      	ldr	r3, [r7, #4]
 8004584:	431a      	orrs	r2, r3
 8004586:	68bb      	ldr	r3, [r7, #8]
 8004588:	4313      	orrs	r3, r2
 800458a:	697a      	ldr	r2, [r7, #20]
 800458c:	4313      	orrs	r3, r2
 800458e:	617b      	str	r3, [r7, #20]
 8004590:	68fb      	ldr	r3, [r7, #12]
 8004592:	697a      	ldr	r2, [r7, #20]
 8004594:	609a      	str	r2, [r3, #8]
 8004596:	bf00      	nop
 8004598:	371c      	adds	r7, #28
 800459a:	46bd      	mov	sp, r7
 800459c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045a0:	4770      	bx	lr

080045a2 <TIM_CCxChannelCmd>:
 80045a2:	b480      	push	{r7}
 80045a4:	b087      	sub	sp, #28
 80045a6:	af00      	add	r7, sp, #0
 80045a8:	60f8      	str	r0, [r7, #12]
 80045aa:	60b9      	str	r1, [r7, #8]
 80045ac:	607a      	str	r2, [r7, #4]
 80045ae:	68bb      	ldr	r3, [r7, #8]
 80045b0:	f003 031f 	and.w	r3, r3, #31
 80045b4:	2201      	movs	r2, #1
 80045b6:	fa02 f303 	lsl.w	r3, r2, r3
 80045ba:	617b      	str	r3, [r7, #20]
 80045bc:	68fb      	ldr	r3, [r7, #12]
 80045be:	6a1a      	ldr	r2, [r3, #32]
 80045c0:	697b      	ldr	r3, [r7, #20]
 80045c2:	43db      	mvns	r3, r3
 80045c4:	401a      	ands	r2, r3
 80045c6:	68fb      	ldr	r3, [r7, #12]
 80045c8:	621a      	str	r2, [r3, #32]
 80045ca:	68fb      	ldr	r3, [r7, #12]
 80045cc:	6a1a      	ldr	r2, [r3, #32]
 80045ce:	68bb      	ldr	r3, [r7, #8]
 80045d0:	f003 031f 	and.w	r3, r3, #31
 80045d4:	6879      	ldr	r1, [r7, #4]
 80045d6:	fa01 f303 	lsl.w	r3, r1, r3
 80045da:	431a      	orrs	r2, r3
 80045dc:	68fb      	ldr	r3, [r7, #12]
 80045de:	621a      	str	r2, [r3, #32]
 80045e0:	bf00      	nop
 80045e2:	371c      	adds	r7, #28
 80045e4:	46bd      	mov	sp, r7
 80045e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045ea:	4770      	bx	lr

080045ec <HAL_TIMEx_MasterConfigSynchronization>:
 80045ec:	b480      	push	{r7}
 80045ee:	b085      	sub	sp, #20
 80045f0:	af00      	add	r7, sp, #0
 80045f2:	6078      	str	r0, [r7, #4]
 80045f4:	6039      	str	r1, [r7, #0]
 80045f6:	687b      	ldr	r3, [r7, #4]
 80045f8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80045fc:	2b01      	cmp	r3, #1
 80045fe:	d101      	bne.n	8004604 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8004600:	2302      	movs	r3, #2
 8004602:	e05a      	b.n	80046ba <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8004604:	687b      	ldr	r3, [r7, #4]
 8004606:	2201      	movs	r2, #1
 8004608:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800460c:	687b      	ldr	r3, [r7, #4]
 800460e:	2202      	movs	r2, #2
 8004610:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004614:	687b      	ldr	r3, [r7, #4]
 8004616:	681b      	ldr	r3, [r3, #0]
 8004618:	685b      	ldr	r3, [r3, #4]
 800461a:	60fb      	str	r3, [r7, #12]
 800461c:	687b      	ldr	r3, [r7, #4]
 800461e:	681b      	ldr	r3, [r3, #0]
 8004620:	689b      	ldr	r3, [r3, #8]
 8004622:	60bb      	str	r3, [r7, #8]
 8004624:	68fb      	ldr	r3, [r7, #12]
 8004626:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800462a:	60fb      	str	r3, [r7, #12]
 800462c:	683b      	ldr	r3, [r7, #0]
 800462e:	681b      	ldr	r3, [r3, #0]
 8004630:	68fa      	ldr	r2, [r7, #12]
 8004632:	4313      	orrs	r3, r2
 8004634:	60fb      	str	r3, [r7, #12]
 8004636:	687b      	ldr	r3, [r7, #4]
 8004638:	681b      	ldr	r3, [r3, #0]
 800463a:	68fa      	ldr	r2, [r7, #12]
 800463c:	605a      	str	r2, [r3, #4]
 800463e:	687b      	ldr	r3, [r7, #4]
 8004640:	681b      	ldr	r3, [r3, #0]
 8004642:	4a21      	ldr	r2, [pc, #132]	@ (80046c8 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8004644:	4293      	cmp	r3, r2
 8004646:	d022      	beq.n	800468e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004648:	687b      	ldr	r3, [r7, #4]
 800464a:	681b      	ldr	r3, [r3, #0]
 800464c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004650:	d01d      	beq.n	800468e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004652:	687b      	ldr	r3, [r7, #4]
 8004654:	681b      	ldr	r3, [r3, #0]
 8004656:	4a1d      	ldr	r2, [pc, #116]	@ (80046cc <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8004658:	4293      	cmp	r3, r2
 800465a:	d018      	beq.n	800468e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800465c:	687b      	ldr	r3, [r7, #4]
 800465e:	681b      	ldr	r3, [r3, #0]
 8004660:	4a1b      	ldr	r2, [pc, #108]	@ (80046d0 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8004662:	4293      	cmp	r3, r2
 8004664:	d013      	beq.n	800468e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004666:	687b      	ldr	r3, [r7, #4]
 8004668:	681b      	ldr	r3, [r3, #0]
 800466a:	4a1a      	ldr	r2, [pc, #104]	@ (80046d4 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 800466c:	4293      	cmp	r3, r2
 800466e:	d00e      	beq.n	800468e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004670:	687b      	ldr	r3, [r7, #4]
 8004672:	681b      	ldr	r3, [r3, #0]
 8004674:	4a18      	ldr	r2, [pc, #96]	@ (80046d8 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8004676:	4293      	cmp	r3, r2
 8004678:	d009      	beq.n	800468e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800467a:	687b      	ldr	r3, [r7, #4]
 800467c:	681b      	ldr	r3, [r3, #0]
 800467e:	4a17      	ldr	r2, [pc, #92]	@ (80046dc <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8004680:	4293      	cmp	r3, r2
 8004682:	d004      	beq.n	800468e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004684:	687b      	ldr	r3, [r7, #4]
 8004686:	681b      	ldr	r3, [r3, #0]
 8004688:	4a15      	ldr	r2, [pc, #84]	@ (80046e0 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 800468a:	4293      	cmp	r3, r2
 800468c:	d10c      	bne.n	80046a8 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 800468e:	68bb      	ldr	r3, [r7, #8]
 8004690:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004694:	60bb      	str	r3, [r7, #8]
 8004696:	683b      	ldr	r3, [r7, #0]
 8004698:	685b      	ldr	r3, [r3, #4]
 800469a:	68ba      	ldr	r2, [r7, #8]
 800469c:	4313      	orrs	r3, r2
 800469e:	60bb      	str	r3, [r7, #8]
 80046a0:	687b      	ldr	r3, [r7, #4]
 80046a2:	681b      	ldr	r3, [r3, #0]
 80046a4:	68ba      	ldr	r2, [r7, #8]
 80046a6:	609a      	str	r2, [r3, #8]
 80046a8:	687b      	ldr	r3, [r7, #4]
 80046aa:	2201      	movs	r2, #1
 80046ac:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80046b0:	687b      	ldr	r3, [r7, #4]
 80046b2:	2200      	movs	r2, #0
 80046b4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80046b8:	2300      	movs	r3, #0
 80046ba:	4618      	mov	r0, r3
 80046bc:	3714      	adds	r7, #20
 80046be:	46bd      	mov	sp, r7
 80046c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046c4:	4770      	bx	lr
 80046c6:	bf00      	nop
 80046c8:	40010000 	.word	0x40010000
 80046cc:	40000400 	.word	0x40000400
 80046d0:	40000800 	.word	0x40000800
 80046d4:	40000c00 	.word	0x40000c00
 80046d8:	40010400 	.word	0x40010400
 80046dc:	40014000 	.word	0x40014000
 80046e0:	40001800 	.word	0x40001800

080046e4 <HAL_TIMEx_ConfigBreakDeadTime>:
 80046e4:	b480      	push	{r7}
 80046e6:	b085      	sub	sp, #20
 80046e8:	af00      	add	r7, sp, #0
 80046ea:	6078      	str	r0, [r7, #4]
 80046ec:	6039      	str	r1, [r7, #0]
 80046ee:	2300      	movs	r3, #0
 80046f0:	60fb      	str	r3, [r7, #12]
 80046f2:	687b      	ldr	r3, [r7, #4]
 80046f4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80046f8:	2b01      	cmp	r3, #1
 80046fa:	d101      	bne.n	8004700 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 80046fc:	2302      	movs	r3, #2
 80046fe:	e03d      	b.n	800477c <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 8004700:	687b      	ldr	r3, [r7, #4]
 8004702:	2201      	movs	r2, #1
 8004704:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004708:	68fb      	ldr	r3, [r7, #12]
 800470a:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 800470e:	683b      	ldr	r3, [r7, #0]
 8004710:	68db      	ldr	r3, [r3, #12]
 8004712:	4313      	orrs	r3, r2
 8004714:	60fb      	str	r3, [r7, #12]
 8004716:	68fb      	ldr	r3, [r7, #12]
 8004718:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 800471c:	683b      	ldr	r3, [r7, #0]
 800471e:	689b      	ldr	r3, [r3, #8]
 8004720:	4313      	orrs	r3, r2
 8004722:	60fb      	str	r3, [r7, #12]
 8004724:	68fb      	ldr	r3, [r7, #12]
 8004726:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 800472a:	683b      	ldr	r3, [r7, #0]
 800472c:	685b      	ldr	r3, [r3, #4]
 800472e:	4313      	orrs	r3, r2
 8004730:	60fb      	str	r3, [r7, #12]
 8004732:	68fb      	ldr	r3, [r7, #12]
 8004734:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 8004738:	683b      	ldr	r3, [r7, #0]
 800473a:	681b      	ldr	r3, [r3, #0]
 800473c:	4313      	orrs	r3, r2
 800473e:	60fb      	str	r3, [r7, #12]
 8004740:	68fb      	ldr	r3, [r7, #12]
 8004742:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8004746:	683b      	ldr	r3, [r7, #0]
 8004748:	691b      	ldr	r3, [r3, #16]
 800474a:	4313      	orrs	r3, r2
 800474c:	60fb      	str	r3, [r7, #12]
 800474e:	68fb      	ldr	r3, [r7, #12]
 8004750:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 8004754:	683b      	ldr	r3, [r7, #0]
 8004756:	695b      	ldr	r3, [r3, #20]
 8004758:	4313      	orrs	r3, r2
 800475a:	60fb      	str	r3, [r7, #12]
 800475c:	68fb      	ldr	r3, [r7, #12]
 800475e:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 8004762:	683b      	ldr	r3, [r7, #0]
 8004764:	69db      	ldr	r3, [r3, #28]
 8004766:	4313      	orrs	r3, r2
 8004768:	60fb      	str	r3, [r7, #12]
 800476a:	687b      	ldr	r3, [r7, #4]
 800476c:	681b      	ldr	r3, [r3, #0]
 800476e:	68fa      	ldr	r2, [r7, #12]
 8004770:	645a      	str	r2, [r3, #68]	@ 0x44
 8004772:	687b      	ldr	r3, [r7, #4]
 8004774:	2200      	movs	r2, #0
 8004776:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800477a:	2300      	movs	r3, #0
 800477c:	4618      	mov	r0, r3
 800477e:	3714      	adds	r7, #20
 8004780:	46bd      	mov	sp, r7
 8004782:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004786:	4770      	bx	lr

08004788 <HAL_TIMEx_CommutCallback>:
 8004788:	b480      	push	{r7}
 800478a:	b083      	sub	sp, #12
 800478c:	af00      	add	r7, sp, #0
 800478e:	6078      	str	r0, [r7, #4]
 8004790:	bf00      	nop
 8004792:	370c      	adds	r7, #12
 8004794:	46bd      	mov	sp, r7
 8004796:	f85d 7b04 	ldr.w	r7, [sp], #4
 800479a:	4770      	bx	lr

0800479c <HAL_TIMEx_BreakCallback>:
 800479c:	b480      	push	{r7}
 800479e:	b083      	sub	sp, #12
 80047a0:	af00      	add	r7, sp, #0
 80047a2:	6078      	str	r0, [r7, #4]
 80047a4:	bf00      	nop
 80047a6:	370c      	adds	r7, #12
 80047a8:	46bd      	mov	sp, r7
 80047aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047ae:	4770      	bx	lr

080047b0 <memset>:
 80047b0:	4402      	add	r2, r0
 80047b2:	4603      	mov	r3, r0
 80047b4:	4293      	cmp	r3, r2
 80047b6:	d100      	bne.n	80047ba <memset+0xa>
 80047b8:	4770      	bx	lr
 80047ba:	f803 1b01 	strb.w	r1, [r3], #1
 80047be:	e7f9      	b.n	80047b4 <memset+0x4>

080047c0 <__libc_init_array>:
 80047c0:	b570      	push	{r4, r5, r6, lr}
 80047c2:	4d0d      	ldr	r5, [pc, #52]	@ (80047f8 <__libc_init_array+0x38>)
 80047c4:	4c0d      	ldr	r4, [pc, #52]	@ (80047fc <__libc_init_array+0x3c>)
 80047c6:	1b64      	subs	r4, r4, r5
 80047c8:	10a4      	asrs	r4, r4, #2
 80047ca:	2600      	movs	r6, #0
 80047cc:	42a6      	cmp	r6, r4
 80047ce:	d109      	bne.n	80047e4 <__libc_init_array+0x24>
 80047d0:	4d0b      	ldr	r5, [pc, #44]	@ (8004800 <__libc_init_array+0x40>)
 80047d2:	4c0c      	ldr	r4, [pc, #48]	@ (8004804 <__libc_init_array+0x44>)
 80047d4:	f000 f818 	bl	8004808 <_init>
 80047d8:	1b64      	subs	r4, r4, r5
 80047da:	10a4      	asrs	r4, r4, #2
 80047dc:	2600      	movs	r6, #0
 80047de:	42a6      	cmp	r6, r4
 80047e0:	d105      	bne.n	80047ee <__libc_init_array+0x2e>
 80047e2:	bd70      	pop	{r4, r5, r6, pc}
 80047e4:	f855 3b04 	ldr.w	r3, [r5], #4
 80047e8:	4798      	blx	r3
 80047ea:	3601      	adds	r6, #1
 80047ec:	e7ee      	b.n	80047cc <__libc_init_array+0xc>
 80047ee:	f855 3b04 	ldr.w	r3, [r5], #4
 80047f2:	4798      	blx	r3
 80047f4:	3601      	adds	r6, #1
 80047f6:	e7f2      	b.n	80047de <__libc_init_array+0x1e>
 80047f8:	08004840 	.word	0x08004840
 80047fc:	08004840 	.word	0x08004840
 8004800:	08004840 	.word	0x08004840
 8004804:	08004844 	.word	0x08004844

08004808 <_init>:
 8004808:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800480a:	bf00      	nop
 800480c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800480e:	bc08      	pop	{r3}
 8004810:	469e      	mov	lr, r3
 8004812:	4770      	bx	lr

08004814 <_fini>:
 8004814:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004816:	bf00      	nop
 8004818:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800481a:	bc08      	pop	{r3}
 800481c:	469e      	mov	lr, r3
 800481e:	4770      	bx	lr
